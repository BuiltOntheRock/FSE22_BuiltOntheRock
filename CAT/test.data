{"id": "51484490", "raw_code": "    private void drawURL(Graphics g) {\n\tString sense = (String)getAttribute(\"Sensitive\");\n\tif (sense != null && sense.length() > 0) {\n\t    Rectangle r = displayBox();\n\t    g.setColor(Color.red);\n\t    g.setFont(dialogFont);\n\t    g.drawString(\"url=\" + sense, r.x, r.y + r.height);\n\t}\n    }\n", "raw_comment": "    /**\n     * Draws the map of the figure\n     * @see #draw\n     */\n", "code": "private void draw url graphics g string sense string get attribute sensitive if sense null sense length 0 rectangle r display box g set color color red g set font dialog font g draw string url sense r x r y r height\n", "comment": "draws the map of the figure\n"}
{"id": "51485775", "raw_code": "    protected SVGDrawingPanel createDrawingComponent() {\n        SVGDrawingPanel p = new SVGDrawingPanel();\n        DefaultDrawingEditor editor = new DefaultDrawingEditor();\n        p.setEditor(new DefaultDrawingEditor());\n\n        return p;\n    }\n", "raw_comment": "    /**\n     * Creates the drawing component.\n     */\n", "code": "protected svgdrawing panel create drawing component svgdrawing panel p new svgdrawing panel default drawing editor editor new default drawing editor p set editor new default drawing editor return p\n", "comment": "creates the drawing component\n"}
{"id": "51486046", "raw_code": "    public PropertyChangeListener getTarget() {\n        return weakRef.get();\n    }\n", "raw_comment": "    /**\n     * Returns the target of this proxy. Returns null if the target has been\n     * garbage collected.\n     *\n     * @return The target or null.\n     */\n", "code": "public property change listener get target return weak ref get\n", "comment": "returns the target of this proxy\n"}
{"id": "51486052", "raw_code": "    protected Method getSetter() {\n        try {\n            return source.getClass().getMethod(\"set\" + Character.toUpperCase(propertyName.charAt(0)) + propertyName.substring(1), type);\n        } catch (Exception e) {\n            InternalError ie = new InternalError(\"Couldn't find setter for property \\\"\" + propertyName + \"\\\" in \" + source);\n            ie.initCause(e);\n            throw ie;\n        }\n    }\n", "raw_comment": "    /**\n     * Returns the setter for the property.\n     *\n     * @return the setter method.\n     */\n", "code": "protected method get setter try return source get class get method set character to upper case property name char at 0 property name substring 1 type catch exception e internal error ie new internal error couldn t find setter for property property name in source ie init cause e throw ie\n", "comment": "returns the setter for the property\n"}
{"id": "51486708", "raw_code": "    public void add(JMenu submenu) {\n        JMenuItem item = getPopupMenu().add(submenu);\n        updateItemFont(submenu);\n    }\n", "raw_comment": "    /** Adds a sub-menu to the popup menu. */\n", "code": "public void add jmenu submenu jmenu item item get popup menu add submenu update item font submenu\n", "comment": "adds a sub menu to the popup menu\n"}
{"id": "51487265", "raw_code": "    protected Connector findConnectableConnector(Figure connectableFigure, Point2D.Double p) {\n        Connector target = (connectableFigure == null) ? null : connectableFigure.findConnector(p, getConnection());\n\n        if ((connectableFigure != null) && connectableFigure.isConnectable() && !connectableFigure.includes(getOwner()) && getConnection().canConnect(connector, target)) {\n            return target;\n        }\n        return null;\n    }\n", "raw_comment": "    /**\n     * Finds a connection end figure.\n     */\n", "code": "protected connector find connectable connector figure connectable figure point2 d double p connector target connectable figure null null connectable figure find connector p get connection if connectable figure null connectable figure is connectable connectable figure includes get owner get connection can connect connector target return target return null\n", "comment": "finds a connection end figure\n"}
{"id": "51487525", "raw_code": "    public void setDrawingEditor(DrawingEditor newValue) {\n        DrawingEditor oldValue = drawingEditor;\n        if (drawingEditor != null) {\n            drawingEditor.removePropertyChangeListener(eventHandler);\n        }\n        this.drawingEditor = newValue;\n        if (drawingEditor != null) {\n            drawingEditor.addPropertyChangeListener(new WeakPropertyChangeListener(eventHandler));\n        }\n        updateActiveView();\n    }\n", "raw_comment": "    /**\n     * Attaches the FigureAttributeEditorHandler to the specified DrawingEditor.\n     * <p>\n     * The FigureAttributeEditorHandler listens to view changes and selection\n     * changes of the drawing editor and calls setEnabled(boolean) and\n     * updateField(Set&lt;Figure&gt;) on the field accordingly.\n     *\n     * @param newValue a drawing editor.\n     */\n", "code": "public void set drawing editor drawing editor new value drawing editor old value drawing editor if drawing editor null drawing editor remove property change listener event handler this drawing editor new value if drawing editor null drawing editor add property change listener new weak property change listener event handler update active view\n", "comment": "attaches the figure attribute editor handler to the specified drawing editor\n"}
{"id": "51488114", "raw_code": "    protected InputMap createInputMap() {\n        return null;\n    }\n", "raw_comment": "    /** Override this method to create a tool-specific input map, which\n     * overrides the input map of the drawing edtior.\n     * <p>\n     * The implementation of this class returns null.\n     */\n", "code": "protected input map create input map return null\n", "comment": "override this method to create a tool specific input map which\n"}
{"id": "51488119", "raw_code": "    protected ActionMap createActionMap() {\n        return null;\n    }\n", "raw_comment": "    /** Override this method to create a tool-specific action map, which\n     * overrides the action map of the drawing edtior.\n     * <p>\n     * The implementation of this class returns null.\n     */\n", "code": "protected action map create action map return null\n", "comment": "override this method to create a tool specific action map which\n"}
{"id": "51488658", "raw_code": "    public ImageIcon getIconProperty(String key, Class baseClass) {\n        try {\n            String rsrcName = getStringRecursive(key + \".icon\");\n\n            if (rsrcName.equals(\"\")) {\n                return null;\n            }\n\n            URL url = baseClass.getResource(rsrcName);\n            if (isVerbose && url == null) {\n                System.err.println(\"Warning ResourceBundleUtil[\" + baseName + \"].getIconProperty \\\"\" + key + \".icon\\\" resource:\" + rsrcName + \" not found.\");\n            }\n            return (url == null) ? null : new ImageIcon(url);\n        } catch (MissingResourceException e) {\n            if (isVerbose) {\n                System.err.println(\"Warning ResourceBundleUtil[\" + baseName + \"].getIconProperty \\\"\" + key + \".icon\\\" not found.\");\n                //e.printStackTrace();\n            }\n            return null;\n        }\n    }\n", "raw_comment": "    /**\n     * Get an image icon from the ResourceBundle.\n     * <br>Convenience method .\n     *\n     * @param key The key of the property. This method appends \".icon\" to the key.\n     * @return The value of the property. Returns null\n     *          if the property is missing.\n     */\n", "code": "public image icon get icon property string key class base class try string rsrc name get string recursive key icon if rsrc name equals return null url url base class get resource rsrc name if is verbose url null system err println warning resource bundle util base name get icon property key icon resource rsrc name not found return url null null new image icon url catch missing resource exception e if is verbose system err println warning resource bundle util base name get icon property key icon not found e print stack trace return null\n", "comment": "get an image icon from the resource bundle\n"}
{"id": "51489060", "raw_code": "    protected void addAction(JMenu m, View view, String actionID) {\n        addAction(m, getAction(view, actionID));\n    }\n", "raw_comment": "    /** Adds the specified action as a menu item to the supplied menu. */\n", "code": "protected void add action jmenu m view view string action id add action m get action view action id\n", "comment": "adds the specified action as a menu item to the supplied menu\n"}
{"id": "51489071", "raw_code": "    protected void maybeAddSeparator(JMenu m) {\n        m.putClientProperty(\"needsSeparator\", Boolean.TRUE);\n    }\n", "raw_comment": "    /** Adds a separator to the supplied menu. The separator will only\n    be added, if additional items are added using addAction. */\n", "code": "protected void maybe add separator jmenu m m put client property needs separator boolean true\n", "comment": "adds a separator to the supplied menu\n"}
{"id": "51489252", "raw_code": "    protected void updateView(View oldValue, View newValue) {\n        // We only need to do this, if the view has not been explicitly set\n        if (view == null) {\n            if (oldValue != null) {\n                uninstallViewListeners(oldValue);\n            }\n            if (newValue != null) {\n                installViewListeners(newValue);\n            }\n            firePropertyChange(VIEW_PROPERTY, oldValue, newValue);\n            updateEnabled(oldValue != null && oldValue.isEnabled(),\n                    newValue != null && newValue.isEnabled());\n            updateView();\n        }\n    }\n", "raw_comment": "    /**\n     * Updates the listeners of this action depending on the current view\n     * of the application.\n     */\n", "code": "protected void update view view old value view new value we only need to do this if the view has not been explicitly set if view null if old value null uninstall view listeners old value if new value null install view listeners new value fire property change view property old value new value update enabled old value null old value is enabled new value null new value is enabled update view\n", "comment": "updates the listeners of this action depending on the current view\n"}
{"id": "51489268", "raw_code": "    protected void updateEnabled(boolean oldValue, boolean newValue) {\n        firePropertyChange(\"enabled\", oldValue, isEnabled());\n    }\n", "raw_comment": "    /**\n     * Updates the enabled state of this action depending on the new enabled\n     * state of the view.\n     */\n", "code": "protected void update enabled boolean old value boolean new value fire property change enabled old value is enabled\n", "comment": "updates the enabled state of this action depending on the new enabled\n"}
{"id": "20041019", "raw_code": "    protected void notifyPropertyChangeListener(String property, Object oldValue, Object newValue) {\n        // make a copy of the listener vector to synchronized not needed for transmit\n        Vector v;\n        synchronized(this)\n            {\n                v = (Vector) listeners.clone();\n            }\n        if (log.isDebugEnabled()) log.debug(\"notify \"+v.size()\n                                            +\" listeners about property \"\n                                            +property);\n        // forward to all listeners\n        int cnt = v.size();\n        for (int i=0; i < cnt; i++) {\n            PropertyChangeListener client = (PropertyChangeListener) v.elementAt(i);\n            client.propertyChange(new PropertyChangeEvent(this, property, oldValue, newValue));\n        }\n    }\n", "raw_comment": "    /**\n     * Trigger the notification of all PropertyChangeListeners\n     */\n", "code": "protected void notify property change listener string property object old value object new value make a copy of the listener vector to synchronized not needed for transmit vector v synchronized this v vector listeners clone if log is debug enabled log debug notify v size listeners about property property forward to all listeners int cnt v size for int i 0 i cnt i property change listener client property change listener v element at i client property change new property change event this property old value new value\n", "comment": "trigger the notification of all property change listeners\n"}
{"id": "20041072", "raw_code": "    public void update() {\n\tpreviousValue = currentValue;\n\t currentValue = component.getPollData();\n    }\n", "raw_comment": "    /**\n     * Save the last value from the component and then get the latest value\n     */\n", "code": "public void update previous value current value current value component get poll data\n", "comment": "save the last value from the component and then get the latest value\n"}
{"id": "20041078", "raw_code": "    public void poll() {\n\tcontroller.poll();\n\n\tfor (JInputComponent c: components)\n\t    c.update();\n    }\n", "raw_comment": "    /**\n     * Poll the current state of the JInput device.\n     * This saves the last polled state and reads in the current one.\n     */\n", "code": "public void poll controller poll for jinput component c components c update\n", "comment": "poll the current state of the jinput device\n"}
{"id": "20041094", "raw_code": "    private void startPolling() {\n\t\tif ((pollTimer != null) ) {\n\t\t    if (!pollTimer.isRunning())\n\t\t    \tpollTimer.start();\n\t\t}\n    }\n", "raw_comment": "    /**\n     * Setup a timer to start polling the JInput devices at a specified time\n     * interval - poll only if there are registered listeners...\n     */\n", "code": "private void start polling if poll timer null if poll timer is running poll timer start\n", "comment": "setup a timer to start polling the jinput devices at a specified time\n"}
{"id": "20041097", "raw_code": "    private void stopPolling() {\n\t\tif ((pollTimer != null) && (listenerList.getListenerCount() <= 0)) {\n\t\t    if (pollTimer.isRunning())\n\t\t    \tpollTimer.stop();\n\t\t}\n    }    \n", "raw_comment": "    /**\n     * Stop polling if there are no registered listeners...\n     */\n", "code": "private void stop polling if poll timer null listener list get listener count 0 if poll timer is running poll timer stop\n", "comment": "stop polling if there are no registered listeners\n"}
{"id": "3512659", "raw_code": "\tpublic boolean hasFixedLength() {\n\t\treturn length != 0;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the property has a fixed length.\n\t *\n\t * @return <code>true</code> if the length of the property is fixed,\n\t * <code>false</code> otherwise.\n\t */\n", "code": "public boolean has fixed length return length 0\n", "comment": "returns whether or not the property has a fixed length\n"}
{"id": "3512660", "raw_code": "\tpublic int getFixedLength() {\n\t\treturn length;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the fixed length of the property or <code>0</code> if the \n\t * property length is not limited.\n\t *\n\t * @return the fixed length of the property or <code>0</code> if the\n\t * property length is not limited.\n\t */\n", "code": "public int get fixed length return length\n", "comment": "returns the fixed length of the property or code 0 code if the\n"}
{"id": "3512687", "raw_code": "\tpublic boolean supportsFrameFileAlterDiscard() {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this spec supports the file alteration discard\n\t * flag.\n\t * <br>Default return value is <code>false</code>.\n\t *\n\t * @return <code>true</code> if the file alteration discard\n\t * flag mode is supported, <code>false</code> otherwise.\n\t */\n", "code": "public boolean supports frame file alter discard return false\n", "comment": "returns whether or not this spec supports the file alteration discard\n"}
{"id": "3512697", "raw_code": "\tpublic boolean supportsFrameReadOnly() {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this spec supports read-only mode.\n\t * <br>Default return value is <code>false</code>.\n\t *\n\t * @return <code>true</code> if read-only mode is supported,\n\t * <code>false</code> otherwise.\n\t */\n", "code": "public boolean supports frame read only return false\n", "comment": "returns whether or not this spec supports read only mode\n"}
{"id": "3512700", "raw_code": "\tpublic boolean supportsFrameGroupID() {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this spec supports a group id.\n\t * <br>Default return value is <code>false</code>.\n\t *\n\t * @return <code>true</code> if group ids are supported, <code>false</code>\n\t * otherwise.\n\t */\n", "code": "public boolean supports frame group id return false\n", "comment": "returns whether or not this spec supports a group id\n"}
{"id": "3512702", "raw_code": "\tpublic boolean supportsFrameCompression() {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this spec supports the compression of\n\t * a frame's content.\n\t * <br>Default return value is <code>false</code>.\n\t *\n\t * @return <code>true</code> if compression is supported, <code>false</code>\n\t * otherwise.\n\t */\n", "code": "public boolean supports frame compression return false\n", "comment": "returns whether or not this spec supports the compression of\n"}
{"id": "3512707", "raw_code": "\tpublic boolean supportsFrameEncryption() {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this spec supports the encryption of\n\t * a frame's content.<br> Default return value is <code>false</code>.\n\t *\n\t * @return <code>true</code> if encryption is supported, <code>false</code>\n\t * otherwise.\n\t */\n", "code": "public boolean supports frame encryption return false\n", "comment": "returns whether or not this spec supports the encryption of\n"}
{"id": "3512708", "raw_code": "\tpublic boolean supportsFrameUnsynchronisation() {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this spec supports unsynchronisation on frame\n\t * basis.<br>\n\t * Default return value is <code>false</code>.\n\t *\n\t * @return <code>true</code> if unsynchronisation is supported,\n\t * <code>false</code> otherwise.\n\t */\n", "code": "public boolean supports frame unsynchronisation return false\n", "comment": "returns whether or not this spec supports unsynchronisation on frame\n"}
{"id": "3512714", "raw_code": "\tpublic void addPropertyChangeListener(PropertyChangeListener l) {\n\t\tchangeSupport.addPropertyChangeListener(l);\n\t}\n", "raw_comment": "\t/**\n\t * Adds the specified property change listener to receive property change\n\t * events from this frame.<br> If listener <code>l</code> is null, no\n\t * exception is thrown and no action is performed.\n\t * \n\t * @param l the property change listener.\n\t */\n", "code": "public void add property change listener property change listener l change support add property change listener l\n", "comment": "adds the specified property change listener to receive property change\n"}
{"id": "3512720", "raw_code": "\tpublic boolean supportsTagUnsynchronisation() {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this implementation supports tag-wide\n\t * unsynchronisation.\n\t * <br> Default return value is <code>false</code>.\n\t *\n\t * @return <code>true</code> if tag-wide unsynchronisation is supported,\n\t * <code>false</code> otherwise.\n\t */\n", "code": "public boolean supports tag unsynchronisation return false\n", "comment": "returns whether or not this implementation supports tag wide\n"}
{"id": "3512721", "raw_code": "\tpublic void removePropertyChangeListener(PropertyChangeListener l) {\n\t\tchangeSupport.removePropertyChangeListener(l);\n\t}\n", "raw_comment": "\t/**\n\t * Removes the specified property change listener so that it no longer\n\t * receives frame change events from this tag.\n\t * @param l the property change listener.\n\t */\n", "code": "public void remove property change listener property change listener l change support remove property change listener l\n", "comment": "removes the specified property change listener so that it no longer\n"}
{"id": "3512723", "raw_code": "\tpublic boolean supportsTagFooter() {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this implementation supports the include of a tag\n\t * footer.\n\t * <br> Default return value is <code>false</code>.\n\t *\n\t * @return <code>true</code> if the include of a tag footer is supported,\n\t * <code>false</code> otherwise.\n\t */\n", "code": "public boolean supports tag footer return false\n", "comment": "returns whether or not this implementation supports the include of a tag\n"}
{"id": "3512724", "raw_code": "\tpublic Object createFrameSpecDataObject(ID3v2Frame frame) {\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Subclasses may override this method to return an object, where spec-\n\t * relevant data can be stored.\n\t * <br>Default return value is <code>null</code>.\n\t *\n\t * @see ID3v2Frame#getSpecData()\n\t * @param frame\n\t * @return Object an object.\n\t */\n", "code": "public object create frame spec data object id3v2 frame frame return null\n", "comment": "subclasses may override this method to return an object where spec\n"}
{"id": "3512729", "raw_code": "\tpublic boolean supports(int frameType) {\n\t\treturn (frameType == ID3v2Frame.UNDEFINED_FRAME_TYPE) ||\n\t\t\t   (getFrameDefinition(frameType) != defUndefinedFrame);\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the frame type <code>frameType</code> is supported\n\t * by this spec.\n\t *\n\t * @param frameType a frame type.\n\t * @return <code>true</code> if the frame type is supported,\n\t * <code>false</code> otherwise.\n\t */\n", "code": "public boolean supports int frame type return frame type id3v2 frame undefined frame type get frame definition frame type def undefined frame\n", "comment": "returns whether or not the frame type code frame type code is supported\n"}
{"id": "3512732", "raw_code": "\tprotected byte getByteValue(String framePropertyValue) {\n\t\tbyte[] byteArray = getByteArrayValue(framePropertyValue);\n\t\tif (byteArray.length > 0)\n\t\t\treturn byteArray[0];\n\t\treturn 0x00;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the byte value that is represented by the frame property value\n\t * <code>framePropertyValue</code>.\n\t *\n\t * @param framePropertyValue the value of a frame property, whose data type\n\t * is {@link FramePropertyDefinition#DT_BYTE}.\n\t * @return byte the byte value.\n\t * @see #supports(int, String)\n\t */\n", "code": "protected byte get byte value string frame property value byte byte array get byte array value frame property value if byte array length 0 return byte array 0 return 0x00\n", "comment": "returns the byte value that is represented by the frame property value\n"}
{"id": "3512733", "raw_code": "\tpublic int getFrameType(String frameID) {\n\t\tInteger type = (Integer) frameIDToTypeMappings.get(frameID);\n\t\tif (type == null) {\n\t\t\treturn ID3v2Frame.UNDEFINED_FRAME_TYPE;\n\t\t}\n\t\treturn type.intValue();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the spec-independent frame type for the spec dependent-frame id\n\t * <code>id</code>.<br>\n\t * Returns {@link ID3v2Frame#UNDEFINED_FRAME_TYPE} if the id is not known to\n\t * this spec.\n\t *\n\t * @param frameID a frame id.\n\t * @return the according frame type or {@link\n\t * ID3v2Frame#UNDEFINED_FRAME_TYPE} if the id is not known to this spec.\n\t * @see #getFrameDefinition(int, String)\n\t */\n", "code": "public int get frame type string frame id integer type integer frame idto type mappings get frame id if type null return id3v2 frame undefined frame type return type int value\n", "comment": "returns the spec independent frame type for the spec dependent frame id\n"}
{"id": "3512737", "raw_code": "\tpublic FrameDefinition getFrameDefinition(int type) {\n\t\tFrameDefinition definition = frameTypeToDefinitionMappings[type];\n\t\tif (definition == null) {\n\t\t\tdefinition = defUndefinedFrame;\n\t\t}\n\t\treturn definition;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the default frame definition for a frame of type\n\t * <code>type</code>.\n\t *\n\t * @param type a frame type.\n\t * @return FrameDefinition the according frame definition.\n\t */\n", "code": "public frame definition get frame definition int type frame definition definition frame type to definition mappings type if definition null definition def undefined frame return definition\n", "comment": "returns the default frame definition for a frame of type\n"}
{"id": "3512738", "raw_code": "\tpublic FrameDefinition getFrameDefinition(int frameType, String id) {\n\t\tFrameDefinition def = (FrameDefinition) getFrameDefinition(frameType);\n\t\tif (frameType == ID3v2Frame.UNDEFINED_FRAME_TYPE) {\n\t\t\tdef = (FrameDefinition) def.clone();\n\t\t\tdef.id = id;\n\t\t}\n\t\treturn def;\n\t}\n", "raw_comment": "\t/**\n\t * Creates a unique frame definition object for the frame\n\t * <code>frame</code>, whose {@link FrameDefinition#id} value is set to the\n\t * string <code>id</code> if {@link ID3v2Frame#getType() frame.getType()} ==\n\t * {@link ID3v2Frame#UNDEFINED_FRAME_TYPE}.<br> Note that this is neccessary\n\t * to preserve the frame ID, because the default frame descriptor for\n\t * undefined frames can't know about frame ids, because such a frame may\n\t * just be <i>any</i> kind of frame.\n\t *\n\t * @param frameType a frame type.\n\t * @param id the frame id (found in the tag).\n\t * @return the according frame definition object.\n\t */\n", "code": "public frame definition get frame definition int frame type string id frame definition def frame definition get frame definition frame type if frame type id3v2 frame undefined frame type def frame definition def clone def id id return def\n", "comment": "creates a unique frame definition object for the frame\n"}
{"id": "3512739", "raw_code": "\tpublic boolean equals(Object o) {\n\t\tif (!(o instanceof ID3v2Frame))\n\t\t\treturn false;\n\t\tID3v2Frame frame = (ID3v2Frame) o;\n\t\tif (frame == this)\n\t\t\treturn true;\n\t\tif (frame.getType() == type) {\n\t\t\tfor (int i = 0; i < definition.propertyDefinitions.length; ++i) {\n\t\t\t\tif (! definition.propertyDefinitions[i].equals(frame.getPropertyAt(i)))\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the {@link java.lang.Object} <code>o</code>\n\t * represents a frame equal to this frame.<br>\n\t * Two <code>ID3v2Frames</code> are considered equal if they have the same\n\t * id and the same properties and according values.\n\t *\n\t * @see java.lang.Object#equals(Object)\n\t * @return <code>true</code> if the object <code>o</code> is equal to this\n\t * frame, <code>false</code> otherwise.\n\t */\n", "code": "public boolean equals object o if o instanceof id3v2 frame return false id3v2 frame frame id3v2 frame o if frame this return true if frame get type type for int i 0 i definition property definitions length i if definition property definitions i equals frame get property at i return false return true return false\n", "comment": "returns whether or not the\n"}
{"id": "3512742", "raw_code": "\tpublic boolean equals(Object o) {\n\t\tif (o instanceof ID3v2Spec) {\n\t\t\tID3v2Spec spec = (ID3v2Spec) o;\n\t\t\tif (spec.getVersion() == this.getVersion()\n\t\t\t\t\t&& spec.getRevision() == this.getRevision())\n\t\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this spec and the <code>Object</code>\n\t * <code>o</code> are equal.<br>\n\t *\n\t * The object is considered equal if the specified object is of\n\t * type <code>ID3v2Spec</code> and if the version and revision\n\t * numbers are the same.\n\t *\n\t * @see java.lang.Object#equals(Object)\n\t */\n", "code": "public boolean equals object o if o instanceof id3v2 spec id3v2 spec spec id3v2 spec o if spec get version this get version spec get revision this get revision return true return false\n", "comment": "returns whether or not this spec and the code object code\n"}
{"id": "3512744", "raw_code": "\tpublic Object getSpecData() {\n\t\treturn specData;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the object an {@link ID3v2Spec} may use to save spec-relevant\n\t * data.\n\t * \n\t * @return the object an {@link ID3v2Spec} may use to save spec-relevant\n\t * data.\n\t */\n", "code": "public object get spec data return spec data\n", "comment": "returns the object an\n"}
{"id": "3512759", "raw_code": "\tprotected void setTagSize(ID3v2Tag tag, int size) {\n\t\ttag.setSize(size);\n\t}\n", "raw_comment": "\t/**\n\t * Really ugly method that subclasses may use to set the tag's size without\n\t * having to call {@link ID3v2Tag#recalculateSize()}, after a tag has been\n\t * read from a file.<br>\n\t * Note that one doesn't really set the tag's size, but only the value to be\n\t * returned by the getSize() method, i.e. if you call setTagSize with a\n\t * wrong value and afterwards call <code>tag.recalculateSize()</code>, the\n\t * real value (determined by the tag's content size and padding size) will\n\t * be returned again.\n\t *\n\t * @param tag the ID3v2 tag whose size value one wants to set.\n\t * @param size the size of the tag.\n\t */\n", "code": "protected void set tag size id3v2 tag tag int size tag set size size\n", "comment": "really ugly method that subclasses may use to set the tags size without\n"}
{"id": "3512761", "raw_code": "\tpublic ID3v2Spec getSpec() {\n\t\treturn spec;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the spec used by this frame.\n\t * \n\t * @return the spec used by this frame.\n\t */\n", "code": "public id3v2 spec get spec return spec\n", "comment": "returns the spec used by this frame\n"}
{"id": "3512779", "raw_code": "\tpublic String getID() {\n\t\treturn definition.id;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the spec-dependent lexical id identifying this frame, just as you\n\t * would find it in the binary form of the tag.\n\t *\n\t * @return the spec-dependent id identifying this frame.\n\t */\n", "code": "public string get id return definition id\n", "comment": "returns the spec dependent lexical id identifying this frame just as you\n"}
{"id": "3512786", "raw_code": "\tpublic Iterator properties() {\n\t\treturn new Iterator() {\n\t\t\tint index = 0;\n\n\t\t\tpublic boolean hasNext() {\n\t\t\t\treturn index < properties.length;\n\t\t\t}\n\n\t\t\tpublic Object next() throws NoSuchElementException {\n\t\t\t\tif (index >= definition.propertyDefinitions.length - 1)\n\t\t\t\t\tthrow new NoSuchElementException();\n\t\t\t\tFrameProperty property = properties[index++];\n\t\t\t\treturn property;\n\t\t\t}\n\n\t\t\tpublic void remove() throws UnsupportedOperationException {\n\t\t\t\tthrow new UnsupportedOperationException();\n\t\t\t}\n\t\t};\n\t}\n", "raw_comment": "\t/**\n\t * Returns an enumeration of all {@link FrameProperty FrameProperties}\n\t * contained in this frame.\n\t *\n\t * @return an enumeration of all {@link FrameProperty FrameProperties}\n\t * contained in this frame.\n\t */\n", "code": "public iterator properties return new iterator int index 0 public boolean has next return index properties length public object next throws no such element exception if index definition property definitions length 1 throw new no such element exception frame property property properties index return property public void remove throws unsupported operation exception throw new unsupported operation exception\n", "comment": "returns an enumeration of all\n"}
{"id": "3512806", "raw_code": "\tpublic int getPropertyCount() {\n\t\treturn definition.propertyDefinitions.length;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the property count of this frame.\n\t * \n\t * @return the property count of this frame.\n\t */\n", "code": "public int get property count return definition property definitions length\n", "comment": "returns the property count of this frame\n"}
{"id": "3512809", "raw_code": "\tpublic boolean contains(int type) {\n\t\tfor (int i = 0; i < definition.propertyDefinitions.length; ++i)\n\t\t\tif (properties[i].getDefinition().getID() == type)\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this frame contains a <code>FrameProperty</code>\n\t * of type <code>type</code>.\n\t *\n\t * @param type a frame property type.\n\t * @return <code>true</code> if this frame contains a\n\t * <code>FrameProperty</code> of type <code>type</code>, <code>false</code>\n\t * otherwise.\n\t * @see #get(int)\n\t */\n", "code": "public boolean contains int type for int i 0 i definition property definitions length i if properties i get definition get id type return true return false\n", "comment": "returns whether or not this frame contains a code frame property code\n"}
{"id": "3512814", "raw_code": "\tpublic FrameProperty get(int type) {\n\t\tfor (int i = 0; i < definition.propertyDefinitions.length; ++i) {\n\t\t\tif (properties[i].getDefinition().getID() == type) {\n\t\t\t\treturn properties[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the <code>FrameProperty</code> of type <code>type</code> or\n\t * <code>null</code> if no such property is found.\n\t *\n\t * @param type a frame property type.\n\t * @return the frame property of type <code>type</code> or <code>null</code>\n\t * if no such property is found.\n\t * @see #contains(int)\n\t */\n", "code": "public frame property get int type for int i 0 i definition property definitions length i if properties i get definition get id type return properties i return null\n", "comment": "returns the code frame property code of type code type code or\n"}
{"id": "3512818", "raw_code": "\tpublic FrameProperty getPropertyAt(int index) {\n\t\treturn properties[index];\n\t}\n", "raw_comment": "\t/**\n\t * Returns the frame property at index <code>index</code>.\n\t * @param index an integer for which 0 <= <code>index</code> < {@link\n\t * #getPropertyCount()} is true.\n\t * \n\t * @return FrameProperty the property at the specified index.\n\t * @throws IndexOutOfBoundsException\n\t */\n", "code": "public frame property get property at int index return properties index\n", "comment": "returns the frame property at index code index code\n"}
{"id": "3512845", "raw_code": "\tpublic boolean isReadOnly() {\n\t\treturn isReadOnly;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the frame's data is supposed to be read-only.\n\t *\n\t * @return <code>true</code> if the frame's data is supposed to be\n\t * read-only, <code>false</code> otherwise.\n\t * @see ID3v2Frame#setReadOnly(boolean)\n\t */\n", "code": "public boolean is read only return is read only\n", "comment": "returns whether or not the frames data is supposed to be read only\n"}
{"id": "3512849", "raw_code": "\tpublic boolean getUseGroupID() {\n\t\treturn useGroupID;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not a group id was set for this frame.\n\t *\n\t * @return <code>true</code> if a group id was set, <code>false</code>\n\t * otherwise.\n\t * @see ID3v2Frame#getGroupID()\n\t * @see ID3v2Frame#setUseGroupID(boolean, byte)\n\t */\n", "code": "public boolean get use group id return use group id\n", "comment": "returns whether or not a group id was set for this frame\n"}
{"id": "3512854", "raw_code": "\tpublic boolean getUseEncryption() {\n\t\treturn useEncryption;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the frame's data is to be encrypted.\n\t *\n\t * @return <code>true</code> if the data is to be encrypted,\n\t * <code>false</code> otherwise.\n\t * @see ID3v2Frame#setUseEncryption(boolean, byte)\n\t */\n", "code": "public boolean get use encryption return use encryption\n", "comment": "returns whether or not the frames data is to be encrypted\n"}
{"id": "3512857", "raw_code": "\tpublic boolean getUseCompression() {\n\t\treturn useCompression;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the frame's data is to be compressed.\n\t *\n\t * @return <code>true</code> if the data is to be compressed,\n\t * <code>false</code> otherwise.\n\t * @see ID3v2Frame#setUseCompression(boolean)\n\t */\n", "code": "public boolean get use compression return use compression\n", "comment": "returns whether or not the frames data is to be compressed\n"}
{"id": "3512862", "raw_code": "\tpublic boolean getUseUnsynchronisation() {\n\t\treturn useUnsynchronisation;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this frame's data is to be unsynchronised.\n\t *\n\t * @return <code>true</code> if this frame's data is to be unsynchronised,\n\t * <code>false</code> otherwise.\n\t * @see ID3v2Frame#setUseUnsynchronisation(boolean)\n\t */\n", "code": "public boolean get use unsynchronisation return use unsynchronisation\n", "comment": "returns whether or not this frames data is to be unsynchronised\n"}
{"id": "3512876", "raw_code": "\tpublic void setTagAlterDiscard(boolean b) {\n\t\tif (!spec.supportsFrameTagAlterDiscard() && b) {\n\t\t\ttestChange();\n\t\t\ttag.requestSpecWhich(\"supportsFrameTagAlterDiscard\");\n\t\t}\n\t\tthis.tagAlterDiscard = b;\n\t\tif (tag != null)\n\t\t\ttag.notifyFlagChanged(this);\n\t}\n", "raw_comment": "\t/**\n\t * Marks this frame to be discardered on tag alteration.\n\t * \n\t * @param b indicates if the frame is to be discarded on tag alteration.\n\t */\n", "code": "public void set tag alter discard boolean b if spec supports frame tag alter discard b test change tag request spec which supports frame tag alter discard this tag alter discard b if tag null tag notify flag changed this\n", "comment": "marks this frame to be discardered on tag alteration\n"}
{"id": "3512880", "raw_code": "\tpublic void setReadOnly(boolean b) throws IllegalTagStateException {\n\t\tif (!spec.supportsFrameReadOnly() && b) {\n\t\t\ttestChange();\n\t\t\ttag.requestSpecWhich(\"supportsFrameReadOnly\");\n\t\t}\n\t\tthis.isReadOnly = b;\n\t\tif (tag != null)\n\t\t\ttag.notifyFlagChanged(this);\n\t}\n", "raw_comment": "\t/**\n\t * Tries to set the frame's data to be read-only.<br>\n\t * Whether this is successful or not depends on the spec and spec policy\n\t * used by the tag. If the spec doesn't support read-only mode, the frame\n\t * will try to request a spec upgrade by calling\n\t * {@link ID3v2Tag#requestSpecWhich(String)\n\t * getTag().requestSpecWhich(\"supportsFrameReadOnly\")}. If the tag's spec policy is\n\t * <code>ID3Constants.FIXED_SPEC</code>, however, an {@link\n\t * IllegalTagStateException} is thrown.\n\t *\n\t * @param b indicates whether or not the frame should be read-only.\n\t * @throws IllegalTagStateException if the tag's spec policy is\n\t * <code>ID3Constants.FIXED_SPEC</code>.\n\t */\n", "code": "public void set read only boolean b throws illegal tag state exception if spec supports frame read only b test change tag request spec which supports frame read only this is read only b if tag null tag notify flag changed this\n", "comment": "tries to set the frames data to be read only\n"}
{"id": "3512888", "raw_code": "\tpublic void setUseCompression(boolean b) {\n\t\tboolean oldValue = useCompression;\n\t\tboolean newValue = b;\n\t\tif (!spec.supportsFrameCompression() && newValue) {\n\t\t\ttestChange();\n\t\t\ttag.requestSpecWhich(\"supportsFrameCompression\");\n\t\t}\n\t\tthis.useCompression = newValue;\n\t\tchangeSupport.firePropertyChange(\n\t\t\tUSE_COMPRESSION_PROPERTY,\n\t\t\toldValue,\n\t\t\tnewValue);\n\t\tif (tag != null)\n\t\t\ttag.notifyFlagChanged(this);\n\t}\n", "raw_comment": "\t/**\n\t * Tries to set the frame's data to be compressed.<br>\n\t * Whether this is successful or not depends on the spec and spec policy\n\t * used by the tag. If the spec doesn't support compression on frame level,\n\t * the frame will try to request a spec upgrade by calling\n\t * {@link ID3v2Tag#requestSpecWhich(String)\n\t * getTag().requestSpecWhich(\"supportsFrameCompression\")}. If the tag's spec policy is\n\t * <code>ID3Constants.FIXED_SPEC</code>, however, an {@link\n\t * IllegalTagStateException} is thrown.<p>\n\t *\n\t * However, a set compression flag doesn't guarantee that the actual binary\n\t * output will be compressed. If compression is useless, i.e. the compressed\n\t * output is bigger than the uncompressed, the compression flag will simply\n\t * be ignored.\n\t *\n\t * @param b indicates whether or not the frame's data is to be\n\t * compressed.\n\t * @throws IllegalTagStateException if the tag's spec policy is\n\t * <code>ID3Constants.FIXED_SPEC</code>.\n\t */\n", "code": "public void set use compression boolean b boolean old value use compression boolean new value b if spec supports frame compression new value test change tag request spec which supports frame compression this use compression new value change support fire property change use compression property old value new value if tag null tag notify flag changed this\n", "comment": "tries to set the frames data to be compressed\n"}
{"id": "3512898", "raw_code": "\tpublic void setUseGroupID(boolean useGroupID, byte groupID) {\n\t\tboolean oldValue = this.useGroupID;\n\t\tboolean newValue = useGroupID;\n\t\tif (!spec.supportsFrameGroupID() && newValue) {\n\t\t\ttestChange();\n\t\t\ttag.requestSpecWhich(\"supportsFrameGroupID\");\n\t\t}\n\t\tthis.useGroupID = newValue;\n\t\tthis.groupID = groupID;\n\t\tchangeSupport.firePropertyChange(\n\t\t\tUSE_GROUP_ID_PROPERTY,\n\t\t\toldValue,\n\t\t\tnewValue);\n\t\tif (tag != null)\n\t\t\ttag.notifyFlagChanged(this);\n\t}\n", "raw_comment": "\t/**\n\t * Tries to set a group id for this frame.<br>\n\t * Group ids are freely choosable. They only can indicate that a frame\n\t * belongs to a group within others. Therefore, their use is quite senseless\n\t * at the moment.<br>\n\t * Whether setting the id is successful or not depends on\n\t * the spec and spec policy used by the tag. If the spec doesn't support a\n\t * group id, the frame will try to request a spec upgrade by calling\n\t * {@link ID3v2Tag#requestSpecWhich(String)\n\t * getTag().requestSpecWhich(\"supportsFrameGroupID\")}. If the tag's spec policy is\n\t * <code>ID3Constants. FIXED_SPEC</code>, however, an {@link\n\t * IllegalTagStateException} is thrown.\n\t *\n\t * @throws IllegalTagStateException if the tag's spec policy is\n\t * <code>ID3Constants.FIXED_SPEC</code>.\n\t */\n", "code": "public void set use group id boolean use group id byte group id boolean old value this use group id boolean new value use group id if spec supports frame group id new value test change tag request spec which supports frame group id this use group id new value this group id group id change support fire property change use group id property old value new value if tag null tag notify flag changed this\n", "comment": "tries to set a group id for this frame\n"}
{"id": "3512925", "raw_code": "\tpublic boolean equals(Object object) {\n\t\tif (!(object instanceof FrameProperty))\n\t\t\treturn false;\n\t\tFrameProperty property = (FrameProperty) object;\n\t\tif (definition.getDataType() == property.getDefinition().getDataType())\n\t\t\tif (value.equals(property.toString()))\n\t\t\t\treturn true;\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the object <code>object</code> is equal to this\n\t * frame property.\n\t * Two frame properties are considered equal if they have the same data type\n\t * and value.\n\t * \n\t * @return <code>true</code> if the object <code>object</code> is equal,\n\t * <code>false</code> otherwise.\n\t * @see java.lang.Object#equals(Object)\n\t */\n", "code": "public boolean equals object object if object instanceof frame property return false frame property property frame property object if definition get data type property get definition get data type if value equals property to string return true return false\n", "comment": "returns whether or not the object code object code is equal to this\n"}
{"id": "3512928", "raw_code": "\tpublic byte toByte() {\n\t\tbyte[] bytes = toByteArray();\n\t\tif (bytes.length == 0)\n\t\t\treturn 0x00;\n\t\treturn bytes[0];\n\t}\n", "raw_comment": "\t/**\n\t * Returns the (byte) value of the property.<br> The behaviour of this\n\t * method is unspecified if {@link #getDataType()} is !=\n\t * <code>TYPE_BYTE</code>.\n\t *\n\t * @return the (byte) value of this property.\n\t */\n", "code": "public byte to byte byte bytes to byte array if bytes length 0 return 0x00 return bytes 0\n", "comment": "returns the byte value of the property\n"}
{"id": "3512932", "raw_code": "\tpublic ID3v2Frame getFrame() {\n\t\treturn frame;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the frame this property belongs to.\n\t * \n\t * @return the frame this property belongs to.\n\t */\n", "code": "public id3v2 frame get frame return frame\n", "comment": "returns the frame this property belongs to\n"}
{"id": "3512933", "raw_code": "\tpublic void setFrame(ID3v2Frame f) {\n\t\tthis.frame = f;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the <code>ID3v2Frame</code> this property belongs to.\n\t * \n\t * @param f <code>ID3v2Frame</code>.\n\t */\n", "code": "public void set frame id3v2 frame f this frame f\n", "comment": "sets the code id3v2 frame code this property belongs to\n"}
{"id": "3512934", "raw_code": "\tpublic void setValue(String newValue) throws IllegalArgumentException {\n\t\tif (frame != null) {\n\t\t\tif (! frame.getSpec().supports(definition.getID(), newValue))\n\t\t\t\tthrow new IllegalArgumentException(value);\n\t\t}\n\t\tString oldValue = value;\n\t\tthis.value = newValue;\n\t\tif (frame != null) {\n\t\t\tframe.notifyFramePropertyChanged(this, oldValue, newValue);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Sets the (string) value for this property to the value\n\t * <code>value</code>.\n\t *\n\t * @param newValue the new value for this property.\n\t */\n", "code": "public void set value string new value throws illegal argument exception if frame null if frame get spec supports definition get id new value throw new illegal argument exception value string old value value this value new value if frame null frame notify frame property changed this old value new value\n", "comment": "sets the string value for this property to the value\n"}
{"id": "3512936", "raw_code": "\tpublic void setValue(byte value) throws IllegalArgumentException {\n\t\tsetValue(new byte[] { value }, 0, 1);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the (byte) value for this property to the value <code>value</code>.\n\t *\n\t * @param value the new value for this property.\n\t */\n", "code": "public void set value byte value throws illegal argument exception set value new byte value 0 1\n", "comment": "sets the byte value for this property to the value code value code\n"}
{"id": "3512937", "raw_code": "\tpublic void setValue(byte[] value) throws IllegalArgumentException {\n\t\tsetValue(value, 0, value.length);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the (binary) value for this property to the value\n\t * <code>value</code>.\n\t *\n\t * @param value the new value for this property.\n\t */\n", "code": "public void set value byte value throws illegal argument exception set value value 0 value length\n", "comment": "sets the binary value for this property to the value\n"}
{"id": "3512976", "raw_code": "\tpublic void add(ID3v2Frame frame) throws IllegalArgumentException {\n\t\t//if (frame.get(FrameProperty.MAIN).toString().equals(\"\"))\n\t\t//\tthrow new IllegalArgumentException(\"FrameProperty.MAIN must not be empty\");\n\t\tif (frames.contains(frame)) {\n\t\t\tthrow new IllegalArgumentException(\"frame is already part of the tag.\");\n\t\t}\n\n\t\tframe.setTag(this);\n\t\tframes.add(frame);\n\n\t\tint frameCount = getFrameCount();\n\t\tchangeSupport.firePropertyChange(\n\t\t\tFRAME_COUNT_PROPERTY,\n\t\t\tframeCount - 1,\n\t\t\tframeCount);\n\n\t\tsizeChanged = true;\n\t}\n", "raw_comment": "\t/**\n\t * Adds the frame <code>frame</code> to the tag.\n\t *\n\t * @param frame the frame to be added.\n\t * @throws IllegalArgumentException if the frame's {@link\n\t * FrameProperty#MAIN MAIN} property is not set (i.e. empty).\n\t */\n", "code": "public void add id3v2 frame frame throws illegal argument exception if frame get frame property main to string equals throw new illegal argument exception frame property main must not be empty if frames contains frame throw new illegal argument exception frame is already part of the tag frame set tag this frames add frame int frame count get frame count change support fire property change frame count property frame count 1 frame count size changed true\n", "comment": "adds the frame code frame code to the tag\n"}
{"id": "3512984", "raw_code": "\tpublic boolean remove(ID3v2Frame frame) {\n\t\tboolean success = frames.remove(frame);\n\n\t\tif (success) {\n\t\t\tframe.setTag(null);\n\t\t\tint frameCount = getFrameCount();\n\t\t\tchangeSupport.firePropertyChange(\n\t\t\t\tFRAME_COUNT_PROPERTY,\n\t\t\t\tframeCount + 1,\n\t\t\t\tframeCount);\n\n\t\t\tsizeChanged = true;\n\t\t}\n\t\treturn success;\n\t}\n", "raw_comment": "\t/**\n\t * Removes the frame <code>frame</code> from the tag.\n\t *\n\t * @param frame the frame to be removed.\n\t * @return <code>true</code> if the frame was successfully removed, <code>false</code>\n\t * otherwise.\n\t */\n", "code": "public boolean remove id3v2 frame frame boolean success frames remove frame if success frame set tag null int frame count get frame count change support fire property change frame count property frame count 1 frame count size changed true return success\n", "comment": "removes the frame code frame code from the tag\n"}
{"id": "3512989", "raw_code": "\tpublic void remove(int type) {\n\t\tremove(type, 0);\n\t}\n", "raw_comment": "\t/**\n\t * Removes the first frame of type <code>type</code> in the tag.\n\t *\n\t * @param type a frame type.\n\t */\n", "code": "public void remove int type remove type 0\n", "comment": "removes the first frame of type code type code in the tag\n"}
{"id": "3512997", "raw_code": "\tpublic void removeAll(int type) {\n\t\tfor (int i = 0; i < frames.size(); ++i) {\n\t\t\tID3v2Frame frame = (ID3v2Frame) frames.elementAt(i);\n\t\t\tif (frame.getType() == type) {\n\t\t\t\tremove(frame);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Removes all frames of type <code>type</code> in the tag.\n\t *\n\t * @param type a frame type.\n\t */\n", "code": "public void remove all int type for int i 0 i frames size i id3v2 frame frame id3v2 frame frames element at i if frame get type type remove frame break\n", "comment": "removes all frames of type code type code in the tag\n"}
{"id": "3513000", "raw_code": "\tpublic void removeAll() {\n\t\tint frameCount = frames.size();\n\t\tframes.clear();\n\t\tif (frameCount > 0) {\n\t\t\tchangeSupport.firePropertyChange(\n\t\t\t\tFRAME_COUNT_PROPERTY,\n\t\t\t\tframeCount,\n\t\t\t\t0);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Removes all frames from the tag.\n\t */\n", "code": "public void remove all int frame count frames size frames clear if frame count 0 change support fire property change frame count property frame count 0\n", "comment": "removes all frames from the tag\n"}
{"id": "3513010", "raw_code": "\tpublic void recalculateSize() {\n\t\ttry {\n\t\t\tthis.contentSize = spec.getSize(this);\n\t\t} catch (RuntimeException e) {\n\t\t\tlogger.error(\"ID3v2Tag::recalculateSize(): \"\n\t\t\t\t+ \"Unexpected exception in spec \"+spec+\" getSize(ID3v2Tag).\\n\"\n\t\t\t\t+ \"Spec is probably buggy.\", e);\n\t\t\tthrow e;\n\t\t}\n\t\tsizeChanged = false;\n\t}\n", "raw_comment": "\t/**\n\t * Recalculates the binary size of the tag.\n\t * <br>\n\t * Provides the values for {@link ID3v2Tag#getSize()}, {@link\n\t * #getContentSize()} and {@link #getPaddingSize()}.\n\t */\n", "code": "public void recalculate size try this content size spec get size this catch runtime exception e logger error id3v2 tag recalculate size unexpected exception in spec spec get size id3v2 tag n spec is probably buggy e throw e size changed false\n", "comment": "recalculates the binary size of the tag\n"}
{"id": "3513020", "raw_code": "\tpublic int getSize() {\n\t\trecalculateSizeIfNeccessary();\n\t\tif (preferredSizeMode == ID3Constants.ABSOLUTE)\n\t\t\treturn (contentSize < preferredSize ? preferredSize : contentSize);\n\t\telse /* if (preferredSizeType == ID3Constants.RELATIVE) */\n\t\t\treturn contentSize + preferredSize;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the tag's size including the padding.\n\t * <br>\n\t * Call {@link ID3v2Tag#recalculateSize()} to get an updated value.\n\t *\n\t * @return the tag's size.\n\t */\n", "code": "public int get size recalculate size if neccessary if preferred size mode id3 constants absolute return content size preferred size preferred size content size else if preferred size type id3 constants relative return content size preferred size\n", "comment": "returns the tags size including the padding\n"}
{"id": "3513046", "raw_code": "\tpublic int getPreferredSize() {\n\t\treturn preferredSize;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the preferred size of the tag.\n\t *\n\t * @return the preferred size of the tag.\n\t */\n", "code": "public int get preferred size return preferred size\n", "comment": "returns the preferred size of the tag\n"}
{"id": "3513066", "raw_code": "\tpublic int getContentSize() {\n\t\trecalculateSizeIfNeccessary();\n\t\treturn contentSize;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the tag size excluding the padding.\n\t * <br>\n\t * Call {@link org.acid3lib.ID3v2Tag#recalculateSize()} to get an updated value.\n\t *\n\t * @return the tag size excluding any padding.\n\t */\n", "code": "public int get content size recalculate size if neccessary return content size\n", "comment": "returns the tag size excluding the padding\n"}
{"id": "3513083", "raw_code": "\tpublic int getPaddingSize() {\n\t\tif (preferredSizeMode == ID3Constants.ABSOLUTE) {\n\t\t\trecalculateSizeIfNeccessary();\n\t\t\treturn (contentSize < preferredSize ? preferredSize - contentSize : 0);\n\t\t} else {\n\t\t\treturn preferredSize;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Returns the amount of padding being used by the tag.\n\t * <br>\n\t * Call {@link org.acid3lib.ID3v2Tag#recalculateSize()} to get an updated value.\n\t * Equal to <code>getPreferredSize()-getPureTagSize()</code>.\n\t *\n\t * @return the amount of padding.\n\t */\n", "code": "public int get padding size if preferred size mode id3 constants absolute recalculate size if neccessary return content size preferred size preferred size content size 0 else return preferred size\n", "comment": "returns the amount of padding being used by the tag\n"}
{"id": "3513107", "raw_code": "\tpublic int getSpecPolicy() {\n\t\treturn specPolicy;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the current spec policy.\n\t *\n\t * @return the current spec policy.\n\t * @see #setSpecPolicy(int)\n\t */\n", "code": "public int get spec policy return spec policy\n", "comment": "returns the current spec policy\n"}
{"id": "3513108", "raw_code": "\tpublic int getVersion() {\n\t\treturn spec.getVersion();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the version number of the current spec.\n\t *\n\t * @return the version number of the current spec.\n\t */\n", "code": "public int get version return spec get version\n", "comment": "returns the version number of the current spec\n"}
{"id": "3513117", "raw_code": "\tpublic int getRevision() {\n\t\treturn spec.getRevision();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the revision number of the current spec.\n\t *\n\t * @return the revision number of the current spec.\n\t */\n", "code": "public int get revision return spec get revision\n", "comment": "returns the revision number of the current spec\n"}
{"id": "3513134", "raw_code": "\tpublic String getVersionString() {\n\t\treturn spec.toString();\n\t}\n", "raw_comment": "\t/**\n\t * Returns a string formatted 2.x.y, where <code>x</code> is the version of\n\t * the current spec and <code>y</code> is the revision.\n\t *\n\t * @return the version string.\n\t */\n", "code": "public string get version string return spec to string\n", "comment": "returns a string formatted 2\n"}
{"id": "3513153", "raw_code": "\tpublic boolean contains(int type) {\n\t\tID3v2Frame frame = get(type, 0);\n\t\tif (frame != null)\n\t\t\tlastRequestedFrame = frame;\n\t\treturn frame != null;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the tag contains a frame of type\n\t * <code>type</code>.\n\t *\n\t * @param type a frame type (see constants declared in {@link ID3v2Frame}).\n\t * @return <code>true</code> if the tag contains a frame of type\n\t * <code>type</code>, <code>false</code> otherwise.\n\t */\n", "code": "public boolean contains int type id3v2 frame frame get type 0 if frame null last requested frame frame return frame null\n", "comment": "returns whether or not the tag contains a frame of type\n"}
{"id": "3513190", "raw_code": "\tpublic int getFrameCount() {\n\t\treturn frames.size();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the total amount of frames in the tag.\n\t *\n\t * @return the total amount of frames in the tag.\n\t */\n", "code": "public int get frame count return frames size\n", "comment": "returns the total amount of frames in the tag\n"}
{"id": "3513201", "raw_code": "\tpublic int getFrameCount(int type) {\n\t\tint count = 0;\n\t\tfor (int i = 0; i < frames.size(); ++i) {\n\t\t\tID3v2Frame current = (ID3v2Frame) frames.get(i);\n\t\t\tif (current.getType() == type)\n\t\t\t\t++count;\n\t\t}\n\t\treturn count;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the amount of frames of type <code>type</code> in the tag.\n\t *\n\t * @param type a frame type.\n\t * @return the amount of frames of type <code>type</code> in the tag.\n\t */\n", "code": "public int get frame count int type int count 0 for int i 0 i frames size i id3v2 frame current id3v2 frame frames get i if current get type type count return count\n", "comment": "returns the amount of frames of type code type code in the tag\n"}
{"id": "3513214", "raw_code": "\tpublic ID3v2Frame get(int type) {\n\t\tif (lastRequestedFrame != null)\n\t\t\tif (lastRequestedFrame.getType() == type)\n\t\t\t\treturn lastRequestedFrame;\n\t\tlastRequestedFrame = get(type, 0);\n\t\treturn lastRequestedFrame;\n\t}\n", "raw_comment": "\t/**\n\t * This method is a convenience for <code>get(id,0)</code>.\n\t *\n\t * @param type a frame type.\n\t * @return the frame or <code>null</code> if no such frame is found.\n\t * @see ID3v2Tag#get(int,int)\n\t */\n", "code": "public id3v2 frame get int type if last requested frame null if last requested frame get type type return last requested frame last requested frame get type 0 return last requested frame\n", "comment": "this method is a convenience for code get id 0 code\n"}
{"id": "3513240", "raw_code": "\tpublic ID3v2Frame get(int frameType, int propertyType, byte value) {\n\t\treturn get(frameType, propertyType, new byte[] { value });\n\t}\n", "raw_comment": "\t/**\n\t * Returns the frame which is of type <code>type</code> and additionally\n\t * has set the value of the <code>FrameProperty</code> of\n\t * type <code>propertyType</code> to <code>value</code>.\n\t *\n\t * @param frameType a frame type (see constants in {@link ID3v2Frame}).\n\t * @param propertyType a property type (see constants in {@link\n\t * FrameProperty}).\n\t * @param value the value that the according property must have.\n\t * @return the frame or <code>null</code> if no such frame is found.\n\t * @see FrameProperty\n\t */\n", "code": "public id3v2 frame get int frame type int property type byte value return get frame type property type new byte value\n", "comment": "returns the frame which is of type code type code and additionally\n"}
{"id": "3513266", "raw_code": "\tpublic ID3v2Frame get(int frameType, int propertyType, byte[] value) {\n\t\ttry {\n\t\t\treturn get(\n\t\t\t\tframeType,\n\t\t\t\tpropertyType,\n\t\t\t\tnew String(value, 0, value.length, \"8859_1\"));\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\treturn null;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Returns the frame which is of type <code>type</code> and additionally\n\t * has set the value of the <code>FrameProperty</code> of\n\t * type <code>propertyType</code> to <code>value</code>.\n\t *\n\t * @param frameType a frame type (see constants in {@link ID3v2Frame}).\n\t * @param propertyType a property type (see constants in {@link\n\t * FrameProperty}).\n\t * @param value the value that the according property must have.\n\t * @return the frame or <code>null</code> if no such frame is found.\n\t * @see FrameProperty\n\t */\n", "code": "public id3v2 frame get int frame type int property type byte value try return get frame type property type new string value 0 value length 8859 1 catch unsupported encoding exception e return null\n", "comment": "returns the frame which is of type code type code and additionally\n"}
{"id": "3513303", "raw_code": "\tpublic ID3v2Frame get(int frameType, int propertyType, String value) {\n\t\tfor (int i = 0; i < frames.size(); ++i) {\n\t\t\tID3v2Frame current = (ID3v2Frame) frames.elementAt(i);\n\t\t\tif (current.getType() == frameType)\n\t\t\t\tif (current.get(propertyType).toString().equals(value))\n\t\t\t\t\treturn current;\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the frame which is of type <code>type</code> and additionally\n\t * has set the value of the <code>FrameProperty</code> of\n\t * type <code>propertyType</code> to <code>value</code>.\n\t *\n\t * @param frameType a frame type (see constants in {@link ID3v2Frame}).\n\t * @param propertyType a property type (see constants in {@link\n\t * FrameProperty}).\n\t * @param value the value that the according property must have.\n\t * @return the frame or <code>null</code> if no such frame is found.\n\t * @see FrameProperty\n\t */\n", "code": "public id3v2 frame get int frame type int property type string value for int i 0 i frames size i id3v2 frame current id3v2 frame frames element at i if current get type frame type if current get property type to string equals value return current return null\n", "comment": "returns the frame which is of type code type code and additionally\n"}
{"id": "3513319", "raw_code": "\tpublic Iterator frames() {\n\t\treturn frames.iterator();\n\t}\n", "raw_comment": "\t/**\n\t * Returns an iteration over all frames in the tag.\n\t *\n\t * @return the iteration.\n\t */\n", "code": "public iterator frames return frames iterator\n", "comment": "returns an iteration over all frames in the tag\n"}
{"id": "3513414", "raw_code": "\tpublic boolean isExperimental() {\n\t\treturn experimental;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not the tag is to be considered experimental.\n\t *\n\t * @return <code>true</code> if the tag is to be considered experimental,\n\t * <code>false</code> otherwise.\n\t */\n", "code": "public boolean is experimental return experimental\n", "comment": "returns whether or not the tag is to be considered experimental\n"}
{"id": "3513445", "raw_code": "\tpublic boolean getUseCRC() {\n\t\treturn useCRC;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not a CRC32 is included in the binary tag.\n\t *\n\t * @return <code>true</code> if a CRC32 is included, <code>false</code>\n\t * otherwise.\n\t */\n", "code": "public boolean get use crc return use crc\n", "comment": "returns whether or not a crc32 is included in the binary tag\n"}
{"id": "3513494", "raw_code": "\tpublic boolean isRestricted() {\n\t\treturn restrictions != null;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether or not this tag is restricted in some way.\n\t *\n\t * @return <code>true</code> if the tag is restricted, <code>false</code>\n\t * otherwise.\n\t * @see ID3v2Tag#getRestrictions()\n\t */\n", "code": "public boolean is restricted return restrictions null\n", "comment": "returns whether or not this tag is restricted in some way\n"}
{"id": "3513503", "raw_code": "\tpublic ID3v2Restrictions getRestrictions() {\n\t\treturn restrictions;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the restrictions that affect this tag or <code>null</code> if\n\t * there aren't any.\n\t *\n\t * @return the restrictions that affect this tag or <code>null</code> if\n\t * there aren't any.\n\t */\n", "code": "public id3v2 restrictions get restrictions return restrictions\n", "comment": "returns the restrictions that affect this tag or code null code if\n"}
{"id": "3513539", "raw_code": "\tpublic void setSpecPolicy(int policy) throws IllegalArgumentException {\n\t\tif (policy != ID3Constants.FIXED_SPEC\n\t\t\t&& policy != ID3Constants.DYNAMIC_SPEC)\n\t\t\tthrow new IllegalArgumentException(String.valueOf(policy));\n\t\tthis.specPolicy = policy;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the spec policy, which may either be <code>ID3Constants.FIXED_SPEC</code>\n\t * or <code>ID3Constants.DYNAMIC_SPEC</code>.\n\t * <br>\n\t * It indicates how this tag handles requests to \"upgrade\" the spec which is\n\t * currently used, i.e. change it to a spec with a higher version.\n\t * <br>\n\t * For example, if one tries to set a frame compressed using\n\t * {@link ID3v2Frame#setUseCompression(boolean)}, although the current spec\n\t * doesn't support compression, the frame will call {@link\n\t * #requestSpecWhich(String)}, which then tries to upgrade the spec to a spec\n\t * that supports compression.\n\t * <br>\n\t * However, if this is forbidden, i.e. the spec policy is equal to\n\t * <code>ID3Constants.FIXED_SPEC</code>, this will fail and the result will\n\t * be an {@link IllegalTagStateException}.\n\t\t*\n\t\t* @param policy the new spec policy.\n\t\t* @throws IllegalArgumentException if the spec policy is neither <code>ID3Constants.FIXED_SPEC</code>\n\t * nor <code>ID3Constants.DYNAMIC_SPEC</code>.\n\t\t*/\n", "code": "public void set spec policy int policy throws illegal argument exception if policy id3 constants fixed spec policy id3 constants dynamic spec throw new illegal argument exception string value of policy this spec policy policy\n", "comment": "sets the spec policy which may either be code id3 constants\n"}
{"id": "3513567", "raw_code": "\tpublic void setPreferredSize(int value, int preferredSizeMode) throws IllegalArgumentException {\n\t\tif ((preferredSizeMode != ID3Constants.ABSOLUTE\n\t\t\t&& preferredSizeMode != ID3Constants.RELATIVE)\n\t\t\t|| (value < 0))\n\t\t\tthrow new IllegalArgumentException();\n\n\t\tthis.preferredSize     = value;\n\t\tthis.preferredSizeMode = preferredSizeMode;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the preferred size of the tag. The preferred size must either be\n\t * {@link ID3Constants#RELATIVE} or {@link ID3Constants#ABSOLUTE}.\n\t * <br>If <code>preferredSizeMode</code> is relative, than\n\t * <code>value</code> bytes of padding are added to the tag.\n\t * <br>If <code>preferredSizeMode</code> is absolute, than padding bytes are\n\t * added until the tag's size is equal to <code>value</code>.\n\t *\n\t * @param value the preferred size of the tag\n\t * @param preferredSizeMode indicates relative or absolute mode.\n\t * @throws IllegalArgumentException if <code>preferredSizeMode</code>\n\t * neither is {@link ID3Constants#RELATIVE} nor {@link\n\t * ID3Constants#ABSOLUTE}.\n\t */\n", "code": "public void set preferred size int value int preferred size mode throws illegal argument exception if preferred size mode id3 constants absolute preferred size mode id3 constants relative value 0 throw new illegal argument exception this preferred size value this preferred size mode preferred size mode\n", "comment": "sets the preferred size of the tag\n"}
{"id": "3513597", "raw_code": "\tpublic void setExperimental(boolean b) throws IllegalTagStateException {\n\t\tif (!spec.supportsTagIsExperimentalIndicator())\n\t\t\trequestSpecWhich(\"supportsTagIsExperimentalIndicator\");\n\t\tboolean oldValue = experimental;\n\t\tboolean newValue = b;\n\t\tif (oldValue != newValue) {\n\t\t\tthis.experimental = newValue;\n\t\t\tchangeSupport.firePropertyChange(\n\t\t\t\tEXPERIMENTAL_PROPERTY,\n\t\t\t\toldValue,\n\t\t\t\tnewValue);\n\t\t}\n\t\tthis.sizeChanged = true;\n\t}\n", "raw_comment": "\t/**\n\t * Sets whether or not the tag is to be considered experimental.\n\t *\n\t * @param b if <code>true</code>, the experimental flag will be set.\n\t * @throws IllegalTagStateException if the exoerimental flag isn't\n\t * supported by the current spec and the spec policy is\n\t * <code>ID3Constants.FIXED_SPEC</code>.\n\t */\n", "code": "public void set experimental boolean b throws illegal tag state exception if spec supports tag is experimental indicator request spec which supports tag is experimental indicator boolean old value experimental boolean new value b if old value new value this experimental new value change support fire property change experimental property old value new value this size changed true\n", "comment": "sets whether or not the tag is to be considered experimental\n"}
{"id": "3513718", "raw_code": "\tpublic int write(OutputStream out) throws IOException {\n\t\tif (frames.size() == 0)\n\t\t\tthrow new IOException(\"Tag does not have any frames\");\n\t\tlogger.debug(\"ID3v2Tag::write(OutputStream): \"\n\t\t\t+ \"Writing tag. Calling spec.write(this, out)\");\n\t\treturn spec.write(this, out);\n\t}\n", "raw_comment": "\t/**\n\t * Writes the tag to the {@link java.io.OutputStream} <code>output</code>.\n\t *\n\t * @param out the <code>OutputStream</code> to write to.\n\t * @throws IOException if an I/O error occurs.\n\t */\n", "code": "public int write output stream out throws ioexception if frames size 0 throw new ioexception tag does not have any frames logger debug id3v2 tag write output stream writing tag calling spec write this out return spec write this out\n", "comment": "writes the tag to the\n"}
{"id": "16882785", "raw_code": "\tpublic K getKey(V value) {\n\t\treturn valueKeyMap.get(value);\n\t}\n", "raw_comment": "\t/**\n\t * Returns key for the given value. Null if given value is not in heap.\n\t * \n\t * @param value\n\t * @return key\n\t */\n", "code": "public k get key v value return value key map get value\n", "comment": "returns key for the given value\n"}
{"id": "16882786", "raw_code": "\tpublic String getErrorMessage() {\n\t\treturn hasNegativeCapacities ? ERROR_MESSAGE : \"\";\n\t}\n", "raw_comment": "\t/**\n\t * If any errors exist return error message.\n\t * \n\t * @return error message if error exists; empty string otherwise\n\t */\n", "code": "public string get error message return has negative capacities error message\n", "comment": "if any errors exist return error message\n"}
{"id": "16882788", "raw_code": "\tpublic boolean hasNegativeCapacities() {\n\t\treturn hasNegativeCapacities;\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether given graph had edges with negative capacities.\n\t * \n\t * @return the hasNegativeCapacities\n\t */\n", "code": "public boolean has negative capacities return has negative capacities\n", "comment": "checks whether given graph had edges with negative capacities\n"}
{"id": "16882789", "raw_code": "\tpublic V extractMin() {\n\t\tif (isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tV tmp = heap.get(0);\n\t\tvalueIndexMap.remove(tmp);\n\t\tvalueKeyMap.remove(tmp);\n\t\theap.set(0, heap.get(size() - 1));\n\t\tvalueIndexMap.put(heap.get(0), 0);\n\t\theap.remove(size() - 1);\n\t\tsiftDown(0);\n\t\treturn tmp;\n\t}\n", "raw_comment": "\t/**\n\t * Removes the minimal element of this binary heap and returns it.\n\t * \n\t * @return the minimal element of the binary heap.\n\t */\n", "code": "public v extract min if is empty return null v tmp heap get 0 value index map remove tmp value key map remove tmp heap set 0 heap get size 1 value index map put heap get 0 0 heap remove size 1 sift down 0 return tmp\n", "comment": "removes the minimal element of this binary heap and returns it\n"}
{"id": "16882790", "raw_code": "\tpublic int getMaximumFlowSize() {\n\t\tif (hasNegativeCapacities()) {\n\t\t\tthrow new IllegalStateException(\"This graph has negative capacities. Ford-Falkerson doesn't work correctly.\");\n\t\t}\n\t\treturn maxFlowSize;\n\t}\n", "raw_comment": "\t/**\n\t * Return maximum flow size. Throws new {@link IllegalStateException} if there are edges with negative capacities.\n\t * \n\t * @return max flow size\n\t */\n", "code": "public int get maximum flow size if has negative capacities throw new illegal state exception this graph has negative capacities ford falkerson doesn t work correctly return max flow size\n", "comment": "return maximum flow size\n"}
{"id": "16882791", "raw_code": "\tpublic V getMin() {\n\t\tif (isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn heap.get(0);\n\t}\n", "raw_comment": "\t/**\n\t * Returns but not removes the minimal element of this binary heap.\n\t * \n\t * @return the minimal element of the binary heap.\n\t */\n", "code": "public v get min if is empty return null return heap get 0\n", "comment": "returns but not removes the minimal element of this binary heap\n"}
{"id": "16882793", "raw_code": "\tpublic void decreaseKey(V value, K newKey) {\n\t\tInteger tmp = valueIndexMap.get(value);//myData.indexOf(element);\n\t\tif (tmp == null) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tif (valueKeyMap.get(value).compareTo(newKey) < 0) {\n\t\t\tthrow new IllegalArgumentException(\"The key replaced is less than the new one\");\n\t\t}\n\t\tvalueKeyMap.put(value, newKey);\n\t\tsiftUp(tmp);\n\t}\n", "raw_comment": "\t/**\n\t * Decreases key of the given element.\n\t * \n\t * @param value\n\t * @param newKey\n\t * @throws NoSuchElementException -\n\t *             if this binary heap does not contain <tt>value</tt>\n\t * @throws IllegalArgumentException -\n\t *             if the key to be replaced is less then the new one\n\t */\n", "code": "public void decrease key v value k new key integer tmp value index map get value my data index of element if tmp null throw new no such element exception if value key map get value compare to new key 0 throw new illegal argument exception the key replaced is less than the new one value key map put value new key sift up tmp\n", "comment": "decreases key of the given element\n"}
{"id": "16882794", "raw_code": "\tpublic boolean hasLoops() {\n\t\treturn !loopEdges.isEmpty();\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether graph has loops.\n\t * \n\t * @return true if it does; false otherwise\n\t */\n", "code": "public boolean has loops return loop edges is empty\n", "comment": "checks whether graph has loops\n"}
{"id": "16882795", "raw_code": "\tpublic String getErrorMessage() {\n\t\treturn hasNegativeWeights ? ERROR_MESSAGE : \"\";\n\t}\n", "raw_comment": "\t/**\n\t * If any errors exist return error message.\n\t * \n\t * @return error message if error exists; empty string otherwise\n\t */\n", "code": "public string get error message return has negative weights error message\n", "comment": "if any errors exist return error message\n"}
{"id": "16882796", "raw_code": "\tpublic void increaseKey(V value, K newKey) {\n\t\tInteger tmp = valueIndexMap.get(value);//myData.indexOf(element);\n\t\tif (tmp == null) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tif (valueKeyMap.get(value).compareTo(newKey) >= 0) {\n\t\t\tthrow new IllegalArgumentException(\"The key replaced is greater than the new one\");\n\t\t}\n\t\tvalueKeyMap.put(value, newKey);\n\t\tsiftDown(tmp);\n\t}\n", "raw_comment": "\t/**\n\t * Increases key of the given element.\n\t * \n\t * @param value\n\t * @param newKey\n\t * @throws NoSuchElementException -\n\t *             if this binary heap does not contain <tt>value</tt>\n\t * @throws IllegalArgumentException -\n\t *             if the key to be replaced is greater then the new one\n\t */\n", "code": "public void increase key v value k new key integer tmp value index map get value my data index of element if tmp null throw new no such element exception if value key map get value compare to new key 0 throw new illegal argument exception the key replaced is greater than the new one value key map put value new key sift down tmp\n", "comment": "increases key of the given element\n"}
{"id": "16882797", "raw_code": "\tpublic String getErrorMessage() {\n\t\tif (hasLoops()) {\n\t\t\treturn ERROR_MESSAGE;\n\t\t}\n\t\treturn \"\";\n\t}\n", "raw_comment": "\t/**\n\t * If any errors exist return error message.\n\t * \n\t * @return error message if error exists; empty string otherwise\n\t */\n", "code": "public string get error message if has loops return error message return\n", "comment": "if any errors exist return error message\n"}
{"id": "16882798", "raw_code": "\tpublic boolean hasNegativeWeights() {\n\t\treturn hasNegativeWeights;\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether givaen graph had edges with negative weights.\n\t * \n\t * @return the hasNegativeWeights\n\t */\n", "code": "public boolean has negative weights return has negative weights\n", "comment": "checks whether givaen graph had edges with negative weights\n"}
{"id": "16882805", "raw_code": "\tpublic String getErrorMessage() {\n\t\treturn !isConnected() ? ERROR_MESSAGE : \"\";\n\t}\n", "raw_comment": "\t/**\n\t * If any errors exist return error message.\n\t * \n\t * @return error message if error exists; empty string otherwise\n\t */\n", "code": "public string get error message return is connected error message\n", "comment": "if any errors exist return error message\n"}
{"id": "16882806", "raw_code": "\tpublic void pushCommand(Command command) {\n\t\tredoCommands.clear();\n\t\tif (undoCommands.size() == capacity) {\n\t\t\tundoCommands.remove(0);\n\t\t}\n\t\tundoCommands.add(command);\n\t}\n", "raw_comment": "\t/**\n\t * Pushes new command to this buffer.\n\t * \n\t * @param command\n\t *            command\n\t */\n", "code": "public void push command command command redo commands clear if undo commands size capacity undo commands remove 0 undo commands add command\n", "comment": "pushes new command to this buffer\n"}
{"id": "16882807", "raw_code": "\tpublic void performLayout() {\n\t\tfor (VertexPresentation vp : positionMap.keySet()) {\n\t\t\tvp.setCenter(positionMap.get(vp));\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Performs this layout.\n\t *\n\t */\n", "code": "public void perform layout for vertex presentation vp position map key set vp set center position map get vp\n", "comment": "performs this layout\n"}
{"id": "16882808", "raw_code": "\tpublic void clear() {\n\t\tundoCommands.clear();\n\t\tredoCommands.clear();\n\t}\n", "raw_comment": "\t/**\n\t * Clears this buffer.\n\t *\n\t */\n", "code": "public void clear undo commands clear redo commands clear\n", "comment": "clears this buffer\n"}
{"id": "16882813", "raw_code": "\tpublic boolean hasUndo() {\n\t\treturn (undoCommands.size() > 0);\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether there are command for undoing.\n\t * \n\t * @return true if there are; false otherwise\n\t */\n", "code": "public boolean has undo return undo commands size 0\n", "comment": "checks whether there are command for undoing\n"}
{"id": "16882816", "raw_code": "\tpublic boolean hasRedo() {\n\t\treturn (redoCommands.size() > 0);\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether there are command for redoing.\n\t * \n\t * @return true if there are; false otherwise\n\t */\n", "code": "public boolean has redo return redo commands size 0\n", "comment": "checks whether there are command for redoing\n"}
{"id": "16882820", "raw_code": "\tpublic void addVisualStateListener(VisualStateListener listener) {\n\t\tlisteners.add(listener);\n\t}\n", "raw_comment": "\t/**\n\t * Adds the specified VisualStateListaner to recive notification about state\n\t * change.\n\t * \n\t * @param listener\n\t */\n", "code": "public void add visual state listener visual state listener listener listeners add listener\n", "comment": "adds the specified visual state listaner to recive notification about state\n"}
{"id": "16882823", "raw_code": "\tpublic void removeVisualStateListener(VisualStateListener listener) {\n\t\tlisteners.remove(listener);\n\t}\n", "raw_comment": "\t/**\n\t * Removes the specified VisualStateListaner from this presentation.\n\t * \n\t * @param listener\n\t */\n", "code": "public void remove visual state listener visual state listener listener listeners remove listener\n", "comment": "removes the specified visual state listaner from this presentation\n"}
{"id": "16882826", "raw_code": "\tpublic void setGraphPresentation(GraphPresentation graphPresentation) {\n\t\tthis.graphPresentation = graphPresentation;\n\t\tunselect();\n\t}\n", "raw_comment": "\t/**\n\t * Sets new graph presentation.\n\t * \n\t * @param graphPresentation\n\t */\n", "code": "public void set graph presentation graph presentation graph presentation this graph presentation graph presentation unselect\n", "comment": "sets new graph presentation\n"}
{"id": "16882827", "raw_code": "\tpublic void setGraphPresentation(GraphPresentation graphPresentation) {\n\t\tthis.graphPresentation = graphPresentation;\n\t\tunmark();\n\t}\n", "raw_comment": "\t/**\n\t * Sets new graph presentation.\n\t * \n\t * @param graphPresentation\n\t */\n", "code": "public void set graph presentation graph presentation graph presentation this graph presentation graph presentation unmark\n", "comment": "sets new graph presentation\n"}
{"id": "16882832", "raw_code": "\tpublic void paint(Graphics gr, Color backgroundColor) {\n\t\tGraphics2D gr2D = (Graphics2D) gr;\n\t\tStroke prevStroke = gr2D.getStroke();\n\t\tgr2D.setStroke(DASHED_STROKE);\n\t\timaginaryEdge.paint(gr2D, backgroundColor);\n\t\tgr2D.setStroke(prevStroke);\n\t}\n", "raw_comment": "\t/**\n\t * Paints imaginary edge.\n\t * \n\t * @param gr\n\t * @param backgroundColor\n\t */\n", "code": "public void paint graphics gr color background color graphics2 d gr2 d graphics2 d gr stroke prev stroke gr2 d get stroke gr2 d set stroke dashed stroke imaginary edge paint gr2 d background color gr2 d set stroke prev stroke\n", "comment": "paints imaginary edge\n"}
{"id": "16882836", "raw_code": "\tpublic void markEdges(Collection<Edge> edgesToMark, boolean isError) {\n\t\tfor (Edge edge : edgesToMark) {\n\t\t\tgraphPresentation.getPresentationForEdge(edge).mark(isError ? ERROR_COLOR : MARK_COLOR);\n\t\t\tmarkedEdges.add(graphPresentation.getPresentationForEdge(edge));\n\t\t}\n\t\tfireVisualStateChange();\n\t}\n", "raw_comment": "\t/**\n\t * Marks presentations of given edges.\n\t * \n\t * @param edgesToMark\n\t * @param isError \n\t */\n", "code": "public void mark edges collection edge edges to mark boolean is error for edge edge edges to mark graph presentation get presentation for edge edge mark is error error color mark color marked edges add graph presentation get presentation for edge edge fire visual state change\n", "comment": "marks presentations of given edges\n"}
{"id": "16882837", "raw_code": "\tpublic void selectEdge(EdgePresentation ep) {\n\t\tselectedEdges.add(ep);\n\t\tfireVisualStateChange();\n\t}\n", "raw_comment": "\t/**\n\t * Selects givet edge presentation.\n\t * \n\t * @param ep edge presentation\n\t */\n", "code": "public void select edge edge presentation ep selected edges add ep fire visual state change\n", "comment": "selects givet edge presentation\n"}
{"id": "16882840", "raw_code": "\tpublic boolean select(Point point) {\n\t\treturn selectVerticesOnPoint(point) || selectEdgesOnPoint(point);\n\t}\n", "raw_comment": "\t/**\n\t * Finds and marks element containing given point.\n\t * \n\t * @param point\n\t *            point\n\t * \n\t * @return true if element was found; false otherwise\n\t */\n", "code": "public boolean select point point return select vertices on point point select edges on point point\n", "comment": "finds and marks element containing given point\n"}
{"id": "16882844", "raw_code": "\tpublic void selectInRect(int x1, int y1, int x2, int y2) {\n\t\tfor (VertexPresentation vp : graphPresentation.getVertexPresentations()) {\n\t\t\tif (vp.isInRect(x1, y1, x2, y2)) {\n\t\t\t\tselectedVertices.add(vp);\n\t\t\t}\n\t\t}\n\t\tfor (EdgePresentation ep : graphPresentation.getEdgePresentations()) {\n\t\t\tif (ep.isInRect(x1, y1, x2, y2)) {\n\t\t\t\tselectedEdges.add(ep);\n\t\t\t}\n\t\t}\n\t\tif ((selectedEdges.size() != 0) || (selectedVertices.size() != 0)) {\t\n\t\t\tfireVisualStateChange();\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Selects all item within given rectangle.\n\t * \n\t * @param x1\n\t *            left upper corner x\n\t * @param y1\n\t *            left upper corner y\n\t * @param x2\n\t *            right lower corner x\n\t * @param y2\n\t *            right lower corner y\n\t */\n", "code": "public void select in rect int x1 int y1 int x2 int y2 for vertex presentation vp graph presentation get vertex presentations if vp is in rect x1 y1 x2 y2 selected vertices add vp for edge presentation ep graph presentation get edge presentations if ep is in rect x1 y1 x2 y2 selected edges add ep if selected edges size 0 selected vertices size 0 fire visual state change\n", "comment": "selects all item within given rectangle\n"}
{"id": "16882847", "raw_code": "\tpublic boolean isInSelectedItem(Point point) {\n\t\tfor (VertexPresentation vp : selectedVertices) {\n\t\t\tif (vp.containsPoint(point)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tfor (EdgePresentation ep : selectedEdges) {\n\t\t\tif (ep.containsPoint(point)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Checkes whether given point lies whithin an already selected item.\n\t * \n\t * @param point\n\t *            point\n\t * @return true if it does; false otherwise\n\t */\n", "code": "public boolean is in selected item point point for vertex presentation vp selected vertices if vp contains point point return true for edge presentation ep selected edges if ep contains point point return true return false\n", "comment": "checkes whether given point lies whithin an already selected item\n"}
{"id": "16882849", "raw_code": "\tpublic void markVertex(VertexPresentation vp) {\n\t\tmarkedVertices.add(vp);\n\t\tfireVisualStateChange();\n\t}\n", "raw_comment": "\t/**\n\t * Markes selected vertex.\n\t * \n\t * @param vp\n\t */\n", "code": "public void mark vertex vertex presentation vp marked vertices add vp fire visual state change\n", "comment": "markes selected vertex\n"}
{"id": "16882850", "raw_code": "\tpublic void unselect() {\n\t\tselectedEdges.clear();\n\t\tselectedVertices.clear();\n\t\tfireVisualChandesCancelled();\n\t}\n", "raw_comment": "\t/**\n\t * Unselects previously selected elements.\n\t * \n\t */\n", "code": "public void unselect selected edges clear selected vertices clear fire visual chandes cancelled\n", "comment": "unselects previously selected elements\n"}
{"id": "16882852", "raw_code": "\tpublic void markVertices(Collection<Vertex> verticesToMark) {\n\t\tfor (Vertex vertex : verticesToMark) {\n\t\t\tmarkedVertices.add(graphPresentation.getPresentationForVertex(vertex));\t\t\t\n\t\t}\n\t\tfireVisualStateChange();\n\t}\n", "raw_comment": "\t/**\n\t * Markes given vertices.\n\t * @param verticesToMark \n\t * \n\t */\n", "code": "public void mark vertices collection vertex vertices to mark for vertex vertex vertices to mark marked vertices add graph presentation get presentation for vertex vertex fire visual state change\n", "comment": "markes given vertices\n"}
{"id": "16882855", "raw_code": "\tpublic void unmark() {\n\t\tfor (Iterator<EdgePresentation> it = markedEdges.iterator(); it.hasNext();) {\n\t\t\tEdgePresentation ep = it.next();\n\t\t\tep.unmark();\n\t\t\tit.remove();\n\t\t}\n\t\tverticesData.clear();\n\t\tedgesData.clear();\n\t\tmarkedVertices.clear();\n\t\tfireVisualChandesCancelled();\n\t}\n", "raw_comment": "\t/**\n\t * Unmarks previously marked elements.\n\t * \n\t */\n", "code": "public void unmark for iterator edge presentation it marked edges iterator it has next edge presentation ep it next ep unmark it remove vertices data clear edges data clear marked vertices clear fire visual chandes cancelled\n", "comment": "unmarks previously marked elements\n"}
{"id": "16882859", "raw_code": "\tpublic void unmarkEdges() {\n\t\tfor (Iterator<EdgePresentation> it = markedEdges.iterator(); it.hasNext();) {\n\t\t\tEdgePresentation ep = it.next();\n\t\t\tep.unmark();\n\t\t\tit.remove();\n\t\t}\n\t\t//if ((verticesData.size() == 0) && (markedVertices.size() == 0)) {\n\t\t//\tfireVisualChandesCancelled();\n\t\t//} else {\n\t\t\tfireVisualStateChange();\n\t\t//}\n\t}\n", "raw_comment": "\t/**\n\t * Unmarks previously marked edges.\n\t * \n\t */\n", "code": "public void unmark edges for iterator edge presentation it marked edges iterator it has next edge presentation ep it next ep unmark it remove if vertices data size 0 marked vertices size 0 fire visual chandes cancelled else fire visual state change\n", "comment": "unmarks previously marked edges\n"}
{"id": "16882860", "raw_code": "\tpublic EdgePresentation getEdgeWithSelectedWeight(Point point) {\n\t\tif (!graphPresentation.isWeighted()) {\n\t\t\treturn null;\n\t\t}\n\t\tfor (EdgePresentation ep : graphPresentation.getEdgePresentations()) {\n\t\t\tif (ep.isWeightSelected(point)) {\n\t\t\t\treturn ep;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * If graph is weighted and weight of some edge contains selected point,\n\t * returns this edge presentation.\n\t * \n\t * @param point\n\t *            point\n\t * @return edge presentation if it was found; null otherwise\n\t */\n", "code": "public edge presentation get edge with selected weight point point if graph presentation is weighted return null for edge presentation ep graph presentation get edge presentations if ep is weight selected point return ep return null\n", "comment": "if graph is weighted and weight of some edge contains selected point\n"}
{"id": "16882862", "raw_code": "\tpublic void unmarkVertices() {\n\t\tmarkedVertices.clear();\n\t\tfireVisualStateChange();\n\t}\n", "raw_comment": "\t/**\n\t * Unmarks previously marked vertices.\n\t * \n\t */\n", "code": "public void unmark vertices marked vertices clear fire visual state change\n", "comment": "unmarks previously marked vertices\n"}
{"id": "16882863", "raw_code": "\tpublic EdgePresentation getEdgeWithSelectedEnd(Point point) {\n\t\tfor (EdgePresentation ep : selectedEdges) {\n\t\t\tif (isEdgeEndSelected(ep, point) || isEdgeStartSelected(ep, point)) {\n\t\t\t\treturn ep;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * If any selected edge end mark contains given point returns this edge.\n\t * \n\t * @param point\n\t * @return edge whose mark is selected; null if there is no such edge\n\t */\n", "code": "public edge presentation get edge with selected end point point for edge presentation ep selected edges if is edge end selected ep point is edge start selected ep point return ep return null\n", "comment": "if any selected edge end mark contains given point returns this edge\n"}
{"id": "16882875", "raw_code": "\tpublic void setGraphPresentation(GraphPresentation presentation) {\n\t\tremoveCurrentPresentation();\n\t\tundoClear();\n\t\tattachNewPresentation(presentation);\n\t}\n", "raw_comment": "\t/**\n\t * Sets new graph presentation to this component\n\t * \n\t * @param presentation new graph presentation\n\t */\n", "code": "public void set graph presentation graph presentation presentation remove current presentation undo clear attach new presentation presentation\n", "comment": "sets new graph presentation to this component\n"}
{"id": "16882877", "raw_code": "\tpublic boolean isEdgeEndSelected(EdgePresentation ep, Point point) {\n\t\treturn (square(ep.getEnd().x - point.x) + square(ep.getEnd().y - point.y) < square(EDGE_SELECTION_RADIX));\n\t}\n", "raw_comment": "\t/**\n\t * Veryfies whether edge end mark was selected.\n\t * \n\t * @param ep\n\t * @param point\n\t * @return true if it was; false otherwise\n\t */\n", "code": "public boolean is edge end selected edge presentation ep point point return square ep get end x point x square ep get end y point y square edge selection radix\n", "comment": "veryfies whether edge end mark was selected\n"}
{"id": "16882882", "raw_code": "\tpublic boolean isEdgeStartSelected(EdgePresentation ep, Point point) {\n\t\treturn (square(ep.getStart().x - point.x) + square(ep.getStart().y - point.y) < square(EDGE_SELECTION_RADIX));\n\t}\n", "raw_comment": "\t/**\n\t * Veryfies whether edge start mark was selected.\n\t * \n\t * @param ep\n\t * @param point\n\t * @return true if it was; false otherwise\n\t */\n", "code": "public boolean is edge start selected edge presentation ep point point return square ep get start x point x square ep get start y point y square edge selection radix\n", "comment": "veryfies whether edge start mark was selected\n"}
{"id": "16882890", "raw_code": "\tpublic Command getNewAddVertexCommand(Point point) {\n\t\treturn new AddVertexCommand(point, graphPresentation, graphSelection);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new add vertex command.\n\t * \n\t * @param point\n\t *            point\n\t * @return new add vertex command\n\t */\n", "code": "public command get new add vertex command point point return new add vertex command point graph presentation graph selection\n", "comment": "returns new add vertex command\n"}
{"id": "16882892", "raw_code": "\tpublic Command getNewAddEdgeCommand(VertexPresentation sourcePr, VertexPresentation destinPr) {\n\t\treturn new AddEdgeCommand(sourcePr, destinPr, graphPresentation, graphSelection);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new add edge command.\n\t * \n\t * @param sourcePr\n\t *            source presentation\n\t * @param destinPr\n\t *            destination presentation\n\t * @return new add edge command\n\t */\n", "code": "public command get new add edge command vertex presentation source pr vertex presentation destin pr return new add edge command source pr destin pr graph presentation graph selection\n", "comment": "returns new add edge command\n"}
{"id": "16882895", "raw_code": "\tpublic Command getNewEdgeEndEditCommand(EdgePresentation edge, VertexPresentation sourcePr, VertexPresentation destinPr) {\n\t\treturn new EdgeEndEditCommand(edge, sourcePr, destinPr, graphPresentation, graphSelection);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new edge end editing command.\n\t * @param edge edge whose end is changing\n\t * @param sourcePr\n\t *            source presentation\n\t * @param destinPr\n\t *            destination presentation\n\t * @return new add edge command\n\t */\n", "code": "public command get new edge end edit command edge presentation edge vertex presentation source pr vertex presentation destin pr return new edge end edit command edge source pr destin pr graph presentation graph selection\n", "comment": "returns new edge end editing command\n"}
{"id": "16882896", "raw_code": "\tpublic Command getNewDeleteCommand() {\n\t\treturn new DeleteCommand(graphPresentation, graphSelection);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new delete command.\n\t * \n\t * @return new delete command\n\t */\n", "code": "public command get new delete command return new delete command graph presentation graph selection\n", "comment": "returns new delete command\n"}
{"id": "16882899", "raw_code": "\tpublic Command getNewDragCommand(Point start, Point end) {\n\t\treturn new DragCommand(start, end, graphPresentation, graphSelection);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new drag command.\n\t * \n\t * @param start\n\t *            start point\n\t * @param end\n\t *            end point\n\t * @return new drag command\n\t */\n", "code": "public command get new drag command point start point end return new drag command start end graph presentation graph selection\n", "comment": "returns new drag command\n"}
{"id": "16882902", "raw_code": "\tpublic Command getNewDragCommand(Map<VertexPresentation, Point> beforeDragPositions) {\n\t\treturn new DragCommand(beforeDragPositions, graphPresentation, graphSelection);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new drag command.\n\t * \n\t * @param beforeDragPositions\n\t * @return new drag command\n\t */\n", "code": "public command get new drag command map vertex presentation point before drag positions return new drag command before drag positions graph presentation graph selection\n", "comment": "returns new drag command\n"}
{"id": "16882903", "raw_code": "\tpublic void setTool(Tool tool) {\n\t\tcurrentTool.finalActions();\n\t\tcurrentTool = tool;\n\t}\n", "raw_comment": "\t/**\n\t * Sets a tool to handle events.\n\t * \n\t * @param tool\n\t *            new tool\n\t */\n", "code": "public void set tool tool tool current tool final actions current tool tool\n", "comment": "sets a tool to handle events\n"}
{"id": "16882905", "raw_code": "\tpublic Command getNewLayoutCommand(Layout layout) {\n\t\treturn new LayoutCommand(layout, graphPresentation);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new layout command.\n\t * \n\t * @param layout layout\n\t * @return new layout command\n\t */\n", "code": "public command get new layout command layout layout return new layout command layout graph presentation\n", "comment": "returns new layout command\n"}
{"id": "16882908", "raw_code": "\tpublic GraphPresentation getGraphPresentation() {\n\t\treturn graphPresentation;\n\t}\n", "raw_comment": "\t/**\n\t * Returns graph presentation.\n\t * \n\t * @return graph presentation\n\t */\n", "code": "public graph presentation get graph presentation return graph presentation\n", "comment": "returns graph presentation\n"}
{"id": "16882911", "raw_code": "\tpublic Command getWeightChangeCommand(int oldWeight, int newWeight,  EdgePresentation edge) {\n\t\treturn new WeightChangeCommand(oldWeight, newWeight, edge, graphSelection);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new WeightChangeCommand.\n\t * \n\t * @param oldWeight\n\t *            old weight\n\t * @param newWeight\n\t *            new weight\n\t * @param edge edge changing\n\t * @return new weight change command\n\t */\n", "code": "public command get weight change command int old weight int new weight edge presentation edge return new weight change command old weight new weight edge graph selection\n", "comment": "returns new weight change command\n"}
{"id": "16882914", "raw_code": "\tpublic Command getConvertToWeightedCommand(PresentationController controller) {\n\t\treturn new ConvertToWeightedCommand(graphPresentation, controller);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new ConvertToWeightedCommand.\n\t * @param controller \n\t * \n\t * @return new ConvertToWeightedCommand\n\t */\n", "code": "public command get convert to weighted command presentation controller controller return new convert to weighted command graph presentation controller\n", "comment": "returns new convert to weighted command\n"}
{"id": "16882919", "raw_code": "\tpublic Command getConvertToUnweightedCommand(PresentationController controller) {\n\t\treturn new ConvertToUnweightedCommand(graphPresentation, controller);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new ConvertToUnweightedCommand.\n\t * @param controller\n\t * @return new ConvertToUnweightedCommand\n\t */\n", "code": "public command get convert to unweighted command presentation controller controller return new convert to unweighted command graph presentation controller\n", "comment": "returns new convert to unweighted command\n"}
{"id": "16882922", "raw_code": "\tpublic Command getConvertToUndirectedCommand(PresentationController controller) {\n\t\treturn new ConvertToUndirectedCommand(graphPresentation, controller);\n\t}\n", "raw_comment": "\t/**\n\t * Returns new ConvertToUndirectedCommand.\n\t * @param controller\n\t * @return new ConvertToUndirectedCommand\n\t */\n", "code": "public command get convert to undirected command presentation controller controller return new convert to undirected command graph presentation controller\n", "comment": "returns new convert to undirected command\n"}
{"id": "16882924", "raw_code": "\tpublic Tool getSelectTool() {\n\t\tselectTool.returnToInitialState();\n\t\treturn selectTool;\n\t}\n", "raw_comment": "\t/**\n\t * Returns select tool.\n\t * \n\t * @return select tool\n\t */\n", "code": "public tool get select tool select tool return to initial state return select tool\n", "comment": "returns select tool\n"}
{"id": "16882927", "raw_code": "\tpublic Tool getAddVertexTool() {\n\t\treturn addVertexTool;\n\t}\n", "raw_comment": "\t/**\n\t * Returns add vertex tool.\n\t * \n\t * @return add vertex tool\n\t */\n", "code": "public tool get add vertex tool return add vertex tool\n", "comment": "returns add vertex tool\n"}
{"id": "16882928", "raw_code": "\tpublic Tool getAddEdgeTool() {\n\t\treturn addEdgeTool;\n\t}\n", "raw_comment": "\t/**\n\t * Returns add edge tool.\n\t * \n\t * @return add edge tool\n\t */\n", "code": "public tool get add edge tool return add edge tool\n", "comment": "returns add edge tool\n"}
{"id": "16882930", "raw_code": "\tpublic Tool getDijkstraSelectionTool() {\n\t\tdijkstraSelectTool.returnToInitialState();\n\t\treturn dijkstraSelectTool;\n\t}\n", "raw_comment": "\t/**\n\t * Returns Dijkstra selection tool.\n\t * \n\t * @return Dijkstra selection tool\n\t */\n", "code": "public tool get dijkstra selection tool dijkstra select tool return to initial state return dijkstra select tool\n", "comment": "returns dijkstra selection tool\n"}
{"id": "16882933", "raw_code": "\tpublic Tool getMaxFlowSelectionTool() {\n\t\tmaxFlowSelectionTool.returnToInitialState();\n\t\treturn maxFlowSelectionTool;\n\t}\n", "raw_comment": "\t/**\n\t * Returns max flow selection tool.\n\t * \n\t * @return max flow selection tool\n\t */\n", "code": "public tool get max flow selection tool max flow selection tool return to initial state return max flow selection tool\n", "comment": "returns max flow selection tool\n"}
{"id": "16882935", "raw_code": "\tpublic ToolFactory getToolFactory() {\n\t\treturn toolFactory;\n\t}\n", "raw_comment": "\t/**\n\t * Returns tool factory.\n\t * \n\t * @return tool factory\n\t */\n", "code": "public tool factory get tool factory return tool factory\n", "comment": "returns tool factory\n"}
{"id": "16882944", "raw_code": "\tpublic EditingActionsFactory getEditingActionsFactory() {\n\t\treturn editingActionsFactory;\n\t}\n", "raw_comment": "\t/**\n\t * Returns component editing actions factory.\n\t * \n\t * @return editing actions factory\n\t */\n", "code": "public editing actions factory get editing actions factory return editing actions factory\n", "comment": "returns component editing actions factory\n"}
{"id": "16882948", "raw_code": "\tpublic AlgorythmActionsFactory getAlgorythmActionsFactory() {\n\t\treturn algorythmActionsFactory;\n\t}\n", "raw_comment": "\t/**\n\t * Returns component algorythm actions factory.\n\t * \n\t * @return algorythm actions factory\n\t */\n", "code": "public algorythm actions factory get algorythm actions factory return algorythm actions factory\n", "comment": "returns component algorythm actions factory\n"}
{"id": "16882950", "raw_code": "\tpublic boolean isDirected() {\n\t\tif (!wasTypeChoosen) {\n\t\t\tthrow new IllegalStateException(\"User didn't choose anything\");\n\t\t}\n\t\treturn isDirected;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether user has choosen directed or undirected graph. If user didn't choose IllegalStateException is thrown. \n\t * \n\t * @return true if directed; false otherwise.\n\t */\n", "code": "public boolean is directed if was type choosen throw new illegal state exception user didn t choose anything return is directed\n", "comment": "returns whether user has choosen directed or undirected graph\n"}
{"id": "16882951", "raw_code": "\tpublic ConvertionActionsFactory getConvertionActionsFactory() {\n\t\treturn convertionActionsFactory;\n\t}\n", "raw_comment": "\t/**\n\t * Returns component convertion actions factory.\n\t * \n\t * @return convertion actions factory\n\t */\n", "code": "public convertion actions factory get convertion actions factory return convertion actions factory\n", "comment": "returns component convertion actions factory\n"}
{"id": "16882952", "raw_code": "\tpublic boolean isWeighted() {\n\t\tif (!wasTypeChoosen) {\n\t\t\tthrow new IllegalStateException(\"User didn't choose anything\");\n\t\t}\n\t\treturn isWeighted;\n\t}\n", "raw_comment": "\t/**\n\t * Returns whether user has choosen directed or undirected graph. If user didn't choose IllegalStateException is thrown.\n\t * \n\t * @return true if directed; false otherwise.\n\t */\n", "code": "public boolean is weighted if was type choosen throw new illegal state exception user didn t choose anything return is weighted\n", "comment": "returns whether user has choosen directed or undirected graph\n"}
{"id": "16882965", "raw_code": "\tpublic void addTempComponent(Component component) {\n\t\tadd(component);\n\t\trevalidate();\n\t\trepaint();\n\t}\n", "raw_comment": "\t/**\n\t * Adds temrorary component to this component.\n\t * \n\t * @param component\n\t */\n", "code": "public void add temp component component component add component revalidate repaint\n", "comment": "adds temrorary component to this component\n"}
{"id": "16882970", "raw_code": "\tpublic void removeTempComponent(Component component) {\n\t\tremove(component);\n\t\trevalidate();\n\t\trepaint();\n\t}\n", "raw_comment": "\t/**\n\t * Removes temprorary component from this component.\n\t * \n\t * @param component\n\t */\n", "code": "public void remove temp component component component remove component revalidate repaint\n", "comment": "removes temprorary component from this component\n"}
{"id": "16882973", "raw_code": "\tpublic void addCommand(Command command) {\n\t\twasChanged = true;\n\t\tundoBuffer.pushCommand(command);\n\t\teditingActionsFactory.getUndoAction().setEnabled(true);\n\t\teditingActionsFactory.getRedoAction().setEnabled(false);\n\t}\n", "raw_comment": "\t/**\n\t * Adds new command to this component.\n\t * \n\t * @param command\n\t */\n", "code": "public void add command command command was changed true undo buffer push command command editing actions factory get undo action set enabled true editing actions factory get redo action set enabled false\n", "comment": "adds new command to this component\n"}
{"id": "16882999", "raw_code": "\tpublic void finalActions() {\n\t}\n", "raw_comment": "\t/**\n\t * Performs required actions before another tool is set.\n\t * \n\t */\n", "code": "public void final actions\n", "comment": "performs required actions before another tool is set\n"}
{"id": "16883000", "raw_code": "\tpublic void setState(ToolState state) {\n\t\t\n\t}\n", "raw_comment": "\t/**\n\t * Sets new state for this tool.\n\t * \n\t * @param state\n\t */\n", "code": "public void set state tool state state\n", "comment": "sets new state for this tool\n"}
{"id": "16883003", "raw_code": "\tpublic void paint(Graphics g, Color backgroundColor) {\n\n\t}\n", "raw_comment": "\t/**\n\t * Performs any additional painting required.\n\t * \n\t * @param g\n\t *            graphics\n\t * @param backgroundColor\n\t */\n", "code": "public void paint graphics g color background color\n", "comment": "performs any additional painting required\n"}
{"id": "16883017", "raw_code": "\tpublic void addAlgorythmErrorListener(AlgorythmMessageListener listener) {\n\t\tlisteners.add(listener);\n\t}\n", "raw_comment": "\t/**\n\t * Adds the specified AlgorythmErrorListener to recive notification about state\n\t * change.\n\t * \n\t * @param listener\n\t */\n", "code": "public void add algorythm error listener algorythm message listener listener listeners add listener\n", "comment": "adds the specified algorythm error listener to recive notification about state\n"}
{"id": "16883018", "raw_code": "\tpublic ToggleAction getSelectAction() {\n\t\treturn selectAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for selecting mode.\n\t * \n\t * @return action\n\t */\n", "code": "public toggle action get select action return select action\n", "comment": "returns an action for selecting mode\n"}
{"id": "16883020", "raw_code": "\tpublic void removeAlgorythmErrorListener(AlgorythmMessageListener listener) {\n\t\tlisteners.remove(listener);\n\t}\n", "raw_comment": "\t/**\n\t * Removes the specified AlgorythmErrorListener from this presentation.\n\t * \n\t * @param listener\n\t */\n", "code": "public void remove algorythm error listener algorythm message listener listener listeners remove listener\n", "comment": "removes the specified algorythm error listener from this presentation\n"}
{"id": "16883021", "raw_code": "\tpublic void addButton(AbstractButton button) {\n\t\tbuttons.add(button);\n\t}\n", "raw_comment": "\t/**\n\t * Adds button to the list of users.\n\t * \n\t * @param button\n\t *            button\n\t */\n", "code": "public void add button abstract button button buttons add button\n", "comment": "adds button to the list of users\n"}
{"id": "16883022", "raw_code": "\tpublic ToggleAction getAddVertexAction() {\n\t\treturn addVertexAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for adding vertices mode.\n\t * \n\t * @return action\n\t */\n", "code": "public toggle action get add vertex action return add vertex action\n", "comment": "returns an action for adding vertices mode\n"}
{"id": "16883024", "raw_code": "\tpublic ToggleAction getAddEdgeAction() {\n\t\treturn addEdgeAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for adding edges mode.\n\t * \n\t * @return action\n\t */\n", "code": "public toggle action get add edge action return add edge action\n", "comment": "returns an action for adding edges mode\n"}
{"id": "16883026", "raw_code": "\tpublic Action getToWeightedAction() {\n\t\treturn toWeightedAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for converting graph from unweighted to weighted.\n\t * \n\t * @return action\n\t */\n", "code": "public action get to weighted action return to weighted action\n", "comment": "returns an action for converting graph from unweighted to weighted\n"}
{"id": "16883027", "raw_code": "\tpublic Action getToUnweightedAction() {\n\t\treturn toUnweightedAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for converting graph from weighted to unweighted.\n\t * \n\t * @return action\n\t */\n", "code": "public action get to unweighted action return to unweighted action\n", "comment": "returns an action for converting graph from weighted to unweighted\n"}
{"id": "16883029", "raw_code": "\tpublic Action getToUndirectedAction() {\n\t\treturn toUndirectedAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for converting graph from directed to undirected.\n\t * \n\t * @return action\n\t */\n", "code": "public action get to undirected action return to undirected action\n", "comment": "returns an action for converting graph from directed to undirected\n"}
{"id": "16883032", "raw_code": "\tpublic Action getCircleLayoutAction() {\n\t\treturn circleLayoutAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for layout.\n\t * \n\t * @return action\n\t */\n", "code": "public action get circle layout action return circle layout action\n", "comment": "returns an action for layout\n"}
{"id": "16883034", "raw_code": "\tpublic void messageUnactive() {\n\t\tif (isMessageActive) {\n\t\t\tfireMessageUnactive();\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Makes required actions if message is no longer active.\n\t *\n\t */\n", "code": "public void message unactive if is message active fire message unactive\n", "comment": "makes required actions if message is no longer active\n"}
{"id": "16883036", "raw_code": "\tpublic Action getDiscardHighlightingAction() {\n\t\treturn discardHighlightingAction;\n\t}\n", "raw_comment": "\t/**\n\t * Return an action for manually discaring highlighting.\n\t * \n\t * @return action\n\t */\n", "code": "public action get discard highlighting action return discard highlighting action\n", "comment": "return an action for manually discaring highlighting\n"}
{"id": "16883037", "raw_code": "\tpublic void meaasgeActive(String message, boolean isErrorMessage) {\n\t\tfireMessageRecieved(message, isErrorMessage);\n\t}\n", "raw_comment": "\t/**\n\t * Makes required actions if message is active.\n\t * @param message \n\t * @param isErrorMessage \n\t *\n\t */\n", "code": "public void meaasge active string message boolean is error message fire message recieved message is error message\n", "comment": "makes required actions if message is active\n"}
{"id": "16883039", "raw_code": "\tpublic Action getExitAction() {\n\t\treturn exitAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for exit.\n\t * \n\t * @return action\n\t */\n", "code": "public action get exit action return exit action\n", "comment": "returns an action for exit\n"}
{"id": "16883041", "raw_code": "\tpublic Action getTopSortAction() {\n\t\treturn topSortAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for topological sort.\n\t * \n\t * @return action\n\t */\n", "code": "public action get top sort action return top sort action\n", "comment": "returns an action for topological sort\n"}
{"id": "16883044", "raw_code": "\tpublic Action getDijkstraTreeAction() {\n\t\treturn dijkstraAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for Dijkstra algorythm.\n\t * \n\t * @return action\n\t */\n", "code": "public action get dijkstra tree action return dijkstra action\n", "comment": "returns an action for dijkstra algorythm\n"}
{"id": "16883047", "raw_code": "\tpublic Action getMinSpanningTreeAction() {\n\t\treturn mstAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for minimal spanning tree algorythm.\n\t * \n\t * @return action\n\t */\n", "code": "public action get min spanning tree action return mst action\n", "comment": "returns an action for minimal spanning tree algorythm\n"}
{"id": "16883050", "raw_code": "\tpublic Action getMaxFlowAction() {\n\t\treturn maxFlowAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for maximum flow algorythm.\n\t * \n\t * @return action\n\t */\n", "code": "public action get max flow action return max flow action\n", "comment": "returns an action for maximum flow algorythm\n"}
{"id": "16883052", "raw_code": "\tpublic Action getSaveAsAction() {\n\t\treturn saveAsAction;\n\t}\n", "raw_comment": "\t/**\n\t * Returns an action for saving as.\n\t * \n\t * @return action\n\t */\n", "code": "public action get save as action return save as action\n", "comment": "returns an action for saving as\n"}
{"id": "16883071", "raw_code": "\tpublic void addElementStateListener(ElementStateListener listener) {\n\t\tlisteners.add(listener);\n\t}\n", "raw_comment": "\t/**\n\t * Adds the specified ElementStateListaner to recive notification about state\n\t * change.\n\t * \n\t * @param listener\n\t */\n", "code": "public void add element state listener element state listener listener listeners add listener\n", "comment": "adds the specified element state listaner to recive notification about state\n"}
{"id": "16883073", "raw_code": "\tpublic void removeElementStateListener(ElementStateListener listener) {\n\t\tlisteners.remove(listener);\n\t}\n", "raw_comment": "\t/**\n\t * Removes the specified ElementStateListaner from this presentation.\n\t * \n\t * @param listener\n\t */\n", "code": "public void remove element state listener element state listener listener listeners remove listener\n", "comment": "removes the specified element state listaner from this presentation\n"}
{"id": "16883077", "raw_code": "\tpublic Point getCenter() {\n\t\treturn (Point) center.clone();\n\t}\n", "raw_comment": "\t/**\n\t * Retrieves the center point of this presentation.\n\t * \n\t * @return center point\n\t */\n", "code": "public point get center return point center clone\n", "comment": "retrieves the center point of this presentation\n"}
{"id": "16883078", "raw_code": "\tpublic void setCenter(Point center) {\n\t\tthis.center.setLocation(center);\n\t\tfirePositionChanged();\n\t}\n", "raw_comment": "\t/**\n\t * Sets the center point of this presentation.\n\t * \n\t * @param center\n\t *            center point\n\t */\n", "code": "public void set center point center this center set location center fire position changed\n", "comment": "sets the center point of this presentation\n"}
{"id": "16883079", "raw_code": "\tpublic void paint(Graphics g) {\n\t\tg.setColor(Color.WHITE);\n\t\tg.fillOval(center.x - RADIX, center.y - RADIX, 2 * RADIX, 2 * RADIX);\n\t\tg.setColor(borderColor);\n\t\tg.drawOval(center.x - RADIX, center.y - RADIX, 2 * RADIX, 2 * RADIX);\n\t}\n", "raw_comment": "\t/**\n\t * Paints this vertex using given graphics\n\t * \n\t * @param g\n\t *            graphics\n\t */\n", "code": "public void paint graphics g g set color color white g fill oval center x radix center y radix 2 radix 2 radix g set color border color g draw oval center x radix center y radix 2 radix 2 radix\n", "comment": "paints this vertex using given graphics\n"}
{"id": "16883084", "raw_code": "\tpublic boolean containsPoint(Point point) {\n\t\treturn (square(point.x - center.x)  + square(point.y - center.y) < square(RADIX) );\n\t}\n", "raw_comment": "\t/**\n\t * Verifies whether this presentation contains given point.\n\t * \n\t * @param point\n\t * @return true if it does; false otherwise\n\t */\n", "code": "public boolean contains point point point return square point x center x square point y center y square radix\n", "comment": "verifies whether this presentation contains given point\n"}
{"id": "16883086", "raw_code": "\tpublic boolean isInRect(int x1, int y1, int x2, int y2) {\n\t\treturn (Math.min(x1, x2) <= center.x) && (Math.max(x1, x2) >= center.x) && (Math.min(y1, y2) <= center.y) && (Math.max(y1, y2) >= center.y);\n\t}\n", "raw_comment": "\t/**\n\t * Verifies whether this presentation lays whithin giver rectangle\n\t * \n\t * \n\t * @param x1 left upper x\n\t * @param y1 left upper y\n\t * @param x2 right lower x\n\t * @param y2 right lower y\n\t * @return true if it does; false otherwise\n\t */\n", "code": "public boolean is in rect int x1 int y1 int x2 int y2 return math min x1 x2 center x math max x1 x2 center x math min y1 y2 center y math max y1 y2 center y\n", "comment": "verifies whether this presentation lays whithin giver rectangle\n"}
{"id": "16883089", "raw_code": "\tpublic void addGraphStateListener(GraphStateListener listener) {\n\t\tlisteners.add(listener);\n\t}\n", "raw_comment": "\t/**\n\t * Adds the specified GraphStateListaner to recive notification about state\n\t * change.\n\t * \n\t * @param listener\n\t */\n", "code": "public void add graph state listener graph state listener listener listeners add listener\n", "comment": "adds the specified graph state listaner to recive notification about state\n"}
{"id": "16883091", "raw_code": "\tpublic void removeGraphStateListener(GraphStateListener listener) {\n\t\tlisteners.remove(listener);\n\t}\n", "raw_comment": "\t/**\n\t * Removes the specified GraphStateListaner from this presentation.\n\t * \n\t * @param listener\n\t */\n", "code": "public void remove graph state listener graph state listener listener listeners remove listener\n", "comment": "removes the specified graph state listaner from this presentation\n"}
{"id": "16883096", "raw_code": "\tpublic void pauseFiringChanges() {\n\t\tisPaused = true;\n\t}\n", "raw_comment": "\t/**\n\t * Pauses all changes firing until resume is not called.\n\t *\n\t */\n", "code": "public void pause firing changes is paused true\n", "comment": "pauses all changes firing until resume is not called\n"}
{"id": "16883098", "raw_code": "\tpublic void resumeFiringChanges() {\n\t\tisPaused = false;\n\t\tif (wasPositionChangedRecieved) {\n\t\t\tfirePositionChanged();\n\t\t\twasPositionChangedRecieved = false;\n\t\t}\n\t\tif (wasStructureChangedRecieved) {\n\t\t\tfireStructureChanged();\n\t\t\twasStructureChangedRecieved = false;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Resumes firing changes.\n\t *\n\t */\n", "code": "public void resume firing changes is paused false if was position changed recieved fire position changed was position changed recieved false if was structure changed recieved fire structure changed was structure changed recieved false\n", "comment": "resumes firing changes\n"}
{"id": "16883099", "raw_code": "\tpublic Point getStart() {\n\t\tVertexPresentation sourcePresentation = verticesMap.get(edge\n\t\t\t\t.getSource());\n\t\tPoint sourceCenter = sourcePresentation.getCenter();\n\t\tVertexPresentation destinationPresentation = verticesMap.get(edge\n\t\t\t\t.getDestination());\n\t\tPoint destinationCenter = destinationPresentation.getCenter();\n\t\treturn calculatePoint(destinationCenter, sourceCenter);\n\t}\n", "raw_comment": "\t/**\n\t * Returns edge start point.\n\t * \n\t * @return edge start point\n\t */\n", "code": "public point get start vertex presentation source presentation vertices map get edge get source point source center source presentation get center vertex presentation destination presentation vertices map get edge get destination point destination center destination presentation get center return calculate point destination center source center\n", "comment": "returns edge start point\n"}
{"id": "16883100", "raw_code": "\tpublic void paint(Graphics gr, Color backgroundColor) {\n\t\tfor (EdgePresentation ep : edges) {\n\t\t\tep.paint(gr, backgroundColor);\n\t\t}\n\t\tfor (VertexPresentation vp : vertices) {\n\t\t\tvp.paint(gr);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Paints this graph using given graphics\n\t * \n\t * @param gr\n\t *            graphics\n\t * @param backgroundColor\n\t *            background color\n\t */\n", "code": "public void paint graphics gr color background color for edge presentation ep edges ep paint gr background color for vertex presentation vp vertices vp paint gr\n", "comment": "paints this graph using given graphics\n"}
{"id": "16883102", "raw_code": "\tpublic void addVertex(VertexPresentation vp) {\n\t\tgraph.addVertex(vp.getVertex());\n\t\tvertices.add(vp);\n\t\tverticesMap.put(vp.getVertex(), vp);\n\t\tvp.addElementStateListener(elementStateListener);\n\t\tfireStructureChanged();\n\t}\n", "raw_comment": "\t/**\n\t * Adds this vertex presentation to graph presentation.\n\t * \n\t * @param vp vertex presentation\n\t */\n", "code": "public void add vertex vertex presentation vp graph add vertex vp get vertex vertices add vp vertices map put vp get vertex vp vp add element state listener element state listener fire structure changed\n", "comment": "adds this vertex presentation to graph presentation\n"}
{"id": "16883104", "raw_code": "\tpublic void removeVertex(VertexPresentation vp) {\n\t\tfor (Edge edge : vp.getVertex().getOutgoingEdges()) {\n\t\t\tEdgePresentation ep = edgesMap.remove(edge);\n\t\t\tedges.remove(ep);\n\t\t}\n\t\tfor (Edge edge : vp.getVertex().getIncomingEdges()) {\n\t\t\tEdgePresentation ep = edgesMap.remove(edge);\n\t\t\tedges.remove(ep);\n\t\t}\n\t\tgraph.removeVertex(vp.getVertex());\n\t\tvertices.remove(vp);\n\t\tverticesMap.remove(vp);\n\t\tvp.removeElementStateListener(elementStateListener);\n\t\tfireStructureChanged();\n\t}\n", "raw_comment": "\t/**\n\t * Removes this vertex presentation from graph presentation.\n\t * \n\t * @param vp vertex presentation\n\t */\n", "code": "public void remove vertex vertex presentation vp for edge edge vp get vertex get outgoing edges edge presentation ep edges map remove edge edges remove ep for edge edge vp get vertex get incoming edges edge presentation ep edges map remove edge edges remove ep graph remove vertex vp get vertex vertices remove vp vertices map remove vp vp remove element state listener element state listener fire structure changed\n", "comment": "removes this vertex presentation from graph presentation\n"}
{"id": "16883105", "raw_code": "\tpublic void paint(Graphics gr, Color backgroundColor) {\n\t\tgr.setColor(color);\n\t\tPoint start = getStart();\n\t\tPoint end = getEnd();\n\t\t\n\t\tgr.drawLine(start.x, start.y, end.x, end.y);\n\t\tif (isDirected) {\n\t\t\tdrawArrow(gr, start, end);\n\t\t}\n\t\tif (isWeighted) {\n\t\t\tdrawWeight(gr, start, end, backgroundColor);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Paints this edge using given graphics\n\t * \n\t * @param gr\n\t *            graphics\n\t * @param backgroundColor\n\t *            background color\n\t */\n", "code": "public void paint graphics gr color background color gr set color color point start get start point end get end gr draw line start x start y end x end y if is directed draw arrow gr start end if is weighted draw weight gr start end background color\n", "comment": "paints this edge using given graphics\n"}
{"id": "16883106", "raw_code": "\tpublic void addEdge(EdgePresentation ep) {\n\t\tgraph.addEdge(ep.getEdge());\n\t\tedges.add(ep);\n\t\tedgesMap.put(ep.getEdge(), ep);\n\t\tep.addElementStateListener(elementStateListener);\n\t\tfireStructureChanged();\n\t}\n", "raw_comment": "\t/**\n\t * Adds this edge presentation to graph presentation.\n\t * \n\t * @param ep edge presentation\n\t */\n", "code": "public void add edge edge presentation ep graph add edge ep get edge edges add ep edges map put ep get edge ep ep add element state listener element state listener fire structure changed\n", "comment": "adds this edge presentation to graph presentation\n"}
{"id": "16883108", "raw_code": "\tpublic void removeEdge(EdgePresentation ep) {\n\t\tgraph.disconnect(ep.getEdge().getSource(), ep.getEdge()\n\t\t\t\t.getDestination());\n\t\tedges.remove(ep);\n\t\tedgesMap.remove(ep);\n\t\tep.removeElementStateListener(elementStateListener);\n\t\tfireStructureChanged();\n\t}\n", "raw_comment": "\t/**\n\t * Removes this edge presentation from graph presentation.\n\t * \n\t * @param ep edge presentation\n\t */\n", "code": "public void remove edge edge presentation ep graph disconnect ep get edge get source ep get edge get destination edges remove ep edges map remove ep ep remove element state listener element state listener fire structure changed\n", "comment": "removes this edge presentation from graph presentation\n"}
{"id": "16883111", "raw_code": "\tpublic boolean areConnected(VertexPresentation sourcePr, VertexPresentation destinPr) {\n\t\treturn graph.areConnected(sourcePr.getVertex(), destinPr.getVertex());\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether given vertices are connected.\n\t * \n\t * @param sourcePr source\n\t * @param destinPr destination\n\t * @return true if they are; false otherwise\n\t */\n", "code": "public boolean are connected vertex presentation source pr vertex presentation destin pr return graph are connected source pr get vertex destin pr get vertex\n", "comment": "checks whether given vertices are connected\n"}
{"id": "16883114", "raw_code": "\tprivate void validate() throws ParserConfigurationException, SAXException, IOException {\n\t\tDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n\t\tfactory.setAttribute(JAXP_SCHEMA_LANGUAGE, W3C_XML_SCHEMA);\n\t\tfactory.setAttribute(JAXP_SCHEMA_SOURCE, new File(ClassLoader\n\t\t\t\t\t.getSystemResource(MY_SCHEMA).getFile()));\n\t\t\n\t\t\n\t\tDocumentBuilder builder = factory.newDocumentBuilder();\n\t\tbuilder.setErrorHandler(errorHandler);\n\t\tdocument = builder.parse(file);\n\t\tif (getErrorMessages().size() != 0) {\n\t\t\tthrow new SAXException();\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Validates file according to xml schema. Descriptions of errors or warnings occured can be retrieved using getErrorMessages() method.\n\t * It is not recommended to continue parsing if file is not valid.\n\t *\n\t * @throws ParserConfigurationException \n\t * @throws SAXException \n\t * @throws IOException \n\t * @throws IllegalArgumentException \n\t * @throws URISyntaxException \n\t *\n\t */\n", "code": "private void validate throws parser configuration exception saxexception ioexception document builder factory factory document builder factory new instance factory set attribute jaxp schema language w3 c xml schema factory set attribute jaxp schema source new file class loader get system resource my schema get file document builder builder factory new document builder builder set error handler error handler document builder parse file if get error messages size 0 throw new saxexception\n", "comment": "validates file according to xml schema\n"}
{"id": "16883115", "raw_code": "\tpublic Dimension getPreferredSize() {\n\t\tint resultX = 0;\n\t\tint resultY = 0;\n\t\tfor (VertexPresentation vp : vertices) {\n\t\t\tresultX = Math.max(resultX, vp.getCenter().x + VertexPresentation.RADIX + 1);\n\t\t\tresultY = Math.max(resultY, vp.getCenter().y + VertexPresentation.RADIX + 1);\n\t\t}\n\t\treturn new Dimension(resultX, resultY);\n\t}\n", "raw_comment": "\t/**\n\t * Returns preferred graph view size\n\t * \n\t * @return size\n\t */\n", "code": "public dimension get preferred size int result x 0 int result y 0 for vertex presentation vp vertices result x math max result x vp get center x vertex presentation radix 1 result y math max result y vp get center y vertex presentation radix 1 return new dimension result x result y\n", "comment": "returns preferred graph view size\n"}
{"id": "16883116", "raw_code": "\tpublic void parseGraph() throws ParserConfigurationException, SAXException, IOException {\n\t\tvalidate();\n\t\t\n\t\tElement root = document.getDocumentElement();\n\t\tNode graphNode = root.getElementsByTagName(\"model\").item(0);\n\t\tNodeList vertices = root.getElementsByTagName(\"vertex\");\n\t\tNodeList edges = root.getElementsByTagName(\"edge\");\n\t\t\n\t\tif (\"yes\".equals(graphNode.getAttributes().getNamedItem(\"directed\").getNodeValue())) {\n\t\t\tgraph = new DirectedGraph();\n\t\t\tisDirected = true;\n\t\t} else {\n\t\t\tgraph = new UndirectedGraph();\n\t\t\tisDirected = false;\n\t\t}\n\t\t\n\t\tparseGraphElements(vertices, edges);\n\t}\n", "raw_comment": "\t/**\n\t * Parses graph from file.\n\t * @throws IOException \n\t * @throws SAXException \n\t * @throws ParserConfigurationException \n\t *\n\t */\n", "code": "public void parse graph throws parser configuration exception saxexception ioexception validate element root document get document element node graph node root get elements by tag name model item 0 node list vertices root get elements by tag name vertex node list edges root get elements by tag name edge if yes equals graph node get attributes get named item directed get node value graph new directed graph is directed true else graph new undirected graph is directed false parse graph elements vertices edges\n", "comment": "parses graph from file\n"}
{"id": "16883117", "raw_code": "\tpublic AbstractGraph getGraph() {\n\t\treturn graph;\n\t}\n", "raw_comment": "\t/**\n\t * Returns model graph of this presentation.\n\t * \n\t * @return graph\n\t */\n", "code": "public abstract graph get graph return graph\n", "comment": "returns model graph of this presentation\n"}
{"id": "16883118", "raw_code": "\tpublic void parsePresentation() throws ParserConfigurationException, SAXException, IOException {\n\t\tparseGraph();\n\t\t\n\t\tElement root = document.getDocumentElement();\n\t\tNode presentationNode = root.getElementsByTagName(\"presentation\").item(0);\n\t\tNodeList centers = root.getElementsByTagName(\"center\");\n\t\t\n\t\tif (\"yes\".equals(presentationNode.getAttributes().getNamedItem(\"weighted\").getNodeValue())) {\n\t\t\tpresentation = new GraphPresentation(graph, isDirected, true);\n\t\t} else {\n\t\t\tpresentation = new GraphPresentation(graph, isDirected, false);\n\t\t}\n\t\t\n\t\tparseVertexCenters(centers);\n\t}\n", "raw_comment": "\t/**\n\t * Parses graph presentation from file.\n\t * @throws IOException \n\t * @throws SAXException \n\t * @throws ParserConfigurationException \n\t */\n", "code": "public void parse presentation throws parser configuration exception saxexception ioexception parse graph element root document get document element node presentation node root get elements by tag name presentation item 0 node list centers root get elements by tag name center if yes equals presentation node get attributes get named item weighted get node value presentation new graph presentation graph is directed true else presentation new graph presentation graph is directed false parse vertex centers centers\n", "comment": "parses graph presentation from file\n"}
{"id": "16883120", "raw_code": "\tpublic boolean isWeighted() {\n\t\treturn isWeighted;\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether this presentation is weighted.\n\t * \n\t * @return true if it is; false otherwise\n\t */\n", "code": "public boolean is weighted return is weighted\n", "comment": "checks whether this presentation is weighted\n"}
{"id": "16883121", "raw_code": "\tpublic void setWeight(int weight) {\n\t\tedge.setWeight(weight);\n\t\tfireStructureChanged();\n\t}\n", "raw_comment": "\t/**\n\t * Sets weight of this presentation.\n\t * \n\t * @param weight\n\t */\n", "code": "public void set weight int weight edge set weight weight fire structure changed\n", "comment": "sets weight of this presentation\n"}
{"id": "16883125", "raw_code": "\tpublic AbstractGraph getGraph() {\n\t\tif (graph == null) {\n\t\t\tthrow new IllegalStateException(\"Graph hasn't been parsed yet!\");\n\t\t}\n\t\treturn graph;\n\t}\n", "raw_comment": "\t/**\n\t * Returns parsed graph. If graph hasn't yet been parsed new IllegalStateExecption is thrown.\n\t * \n\t * @return parsed graph\n\t */\n", "code": "public abstract graph get graph if graph null throw new illegal state exception graph hasn t been parsed yet return graph\n", "comment": "returns parsed graph\n"}
{"id": "16883126", "raw_code": "\tpublic GraphPresentation getGraphPresentation() {\n\t\tif (presentation == null) {\n\t\t\tthrow new IllegalStateException(\"Presentation hasn't been parsed yet!\");\n\t\t}\n\t\treturn presentation;\n\t}\n", "raw_comment": "\t/**\n\t * Returns parsed graph presentation. If graph presentation hasn't yet been parsed new IllegalStateExecption is thrown.\n\t * \n\t * @return parsed graph presentation\n\t */\n", "code": "public graph presentation get graph presentation if presentation null throw new illegal state exception presentation hasn t been parsed yet return presentation\n", "comment": "returns parsed graph presentation\n"}
{"id": "16883128", "raw_code": "\tpublic int getWeight() {\n\t\treturn edge.getWeight();\n\t}\n", "raw_comment": "\t/**\n\t * Returns this presentation weight.\n\t * \n\t * @return weight\n\t */\n", "code": "public int get weight return edge get weight\n", "comment": "returns this presentation weight\n"}
{"id": "16883129", "raw_code": "\tpublic void saveGraph(AbstractGraph graph) throws ParserConfigurationException, TransformerException {\n\t\tcreateDOMTreeRoot();\n\t\tgraphElement.appendChild(createModelElement(graph));\n\t\twriteTreeToFile();\n\t}\n", "raw_comment": "\t/**\n\t * Saves given graph to xml file.\n\t * \n\t * @param graph\n\t * @throws ParserConfigurationException \n\t * @throws TransformerException \n\t */\n", "code": "public void save graph abstract graph graph throws parser configuration exception transformer exception create domtree root graph element append child create model element graph write tree to file\n", "comment": "saves given graph to xml file\n"}
{"id": "16883131", "raw_code": "\tpublic void saveGraphPresentation(GraphPresentation graphPresentation) throws ParserConfigurationException, TransformerException {\n\t\tcreateDOMTreeRoot();\n\t\tgraphElement.appendChild(createModelElement(graphPresentation.getGraph()));\n\t\tgraphElement.appendChild(createPresentationElement(graphPresentation));\n\t\twriteTreeToFile();\n\t}\n", "raw_comment": "\t/**\n\t * Saves given graph presentation to xml file.\n\t * \n\t * @param graphPresentation\n\t * @throws ParserConfigurationException \n\t * @throws ParserConfigurationException \n\t * @throws TransformerException \n\t * @throws TransformerException \n\t */\n", "code": "public void save graph presentation graph presentation graph presentation throws parser configuration exception transformer exception create domtree root graph element append child create model element graph presentation get graph graph element append child create presentation element graph presentation write tree to file\n", "comment": "saves given graph presentation to xml file\n"}
{"id": "16883138", "raw_code": "\tpublic Point getUpperLeftWeightPoint() {\n\t\tif (!isWeighted) {\n\t\t\treturn null;\n\t\t}\n\t\tint x = (getStart().x + getEnd().x) / 2;\n\t\tint y = (getStart().y + getEnd().y) / 2;\n\t\treturn new Point(x - WEIGHT_SHIFT / 2, y - weightHeight / 2 - WEIGHT_SHIFT\n\t\t\t\t/ 2);\n\t}\n", "raw_comment": "\t/**\n\t * Return upper left point of weight rect.\n\t * \n\t * @return upper left point of weight rect\n\t */\n", "code": "public point get upper left weight point if is weighted return null int x get start x get end x 2 int y get start y get end y 2 return new point x weight shift 2 y weight height 2 weight shift 2\n", "comment": "return upper left point of weight rect\n"}
{"id": "16883143", "raw_code": "\tpublic void mark(Color markColor) {\n\t\tthis.color = markColor;\n\t}\n", "raw_comment": "\t/**\n\t * Marks this presentation.\n\t * @param markColor \n\t *\n\t */\n", "code": "public void mark color mark color this color mark color\n", "comment": "marks this presentation\n"}
{"id": "16883144", "raw_code": "\tpublic Vertex getDestination() {\n\t\treturn destination;\n\t}\n", "raw_comment": "\t/**\n\t * Returns a destination vertex of this edge.\n\t * \n\t * @return destination vertex\n\t */\n", "code": "public vertex get destination return destination\n", "comment": "returns a destination vertex of this edge\n"}
{"id": "16883147", "raw_code": "\tpublic Vertex getOppositeVertex(Vertex vertex) {\n\t\treturn vertex.equals(source) ? destination : (vertex\n\t\t\t\t.equals(destination) ? source : null);\n\t}\n", "raw_comment": "\t/**\n\t * Returns a vertex opposite to the given one.\n\t * \n\t * @param vertex\n\t *            vertex\n\t * @return opposite vertex; null if this edge is not incident to the\n\t *         given vertex\n\t */\n", "code": "public vertex get opposite vertex vertex vertex return vertex equals source destination vertex equals destination source null\n", "comment": "returns a vertex opposite to the given one\n"}
{"id": "16883149", "raw_code": "\tpublic void unmark() {\n\t\tcolor = Color.black;\n\t}\n", "raw_comment": "\t/**\n\t * Unmarks this presentation.\n\t *\n\t */\n", "code": "public void unmark color color black\n", "comment": "unmarks this presentation\n"}
{"id": "16883153", "raw_code": "\tpublic void addVertex(Vertex vertex) {\n\t\tif (vertices.contains(vertex)) {\n\t\t\tthrow new IllegalArgumentException(\"Vertex already in graph\");\n\t\t}\n\t\tif ((vertex.getOutgoingEdges().size() != 0) || (vertex.getIncomingEdges().size() != 0)) {\n\t\t\tthrow new IllegalArgumentException(\"Vertex has adjusted edges\");\n\t\t}\n\t\tvertices.add(vertex);\n\t}\n", "raw_comment": "\t/**\n\t * Adds given vertex to graph. Vertex shouldn't be in graph and shouldn't have any edges.\n\t * \n\t * @param vertex vertex to be added\n\t */\n", "code": "public void add vertex vertex vertex if vertices contains vertex throw new illegal argument exception vertex already in graph if vertex get outgoing edges size 0 vertex get incoming edges size 0 throw new illegal argument exception vertex has adjusted edges vertices add vertex\n", "comment": "adds given vertex to graph\n"}
{"id": "16883155", "raw_code": "\tpublic boolean containsPoint(Point point) {\n\t\tPoint start = getStart();\n\t\tPoint end = getEnd();\n\t\tint scalarProdWithStart = scalarProduct(point.x - start.x, point.y\n\t\t\t\t- start.y, end.x - start.x, end.y - start.y);\n\t\tint scalarProdWithEnd = scalarProduct(point.x - end.x, point.y - end.y,\n\t\t\t\tend.x - start.x, end.y - start.y);\n\t\tif ((scalarProdWithStart >= 0) && (scalarProdWithEnd <= 0)) {\n\t\t\treturn (distanceToEdge(point, start, end) <= SELECTING_DISTANCE);\n\n\t\t}\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Verifies whether this presentation contains given point.\n\t * \n\t * @param point\n\t * @return true if it does; false otherwise\n\t */\n", "code": "public boolean contains point point point point start get start point end get end int scalar prod with start scalar product point x start x point y start y end x start x end y start y int scalar prod with end scalar product point x end x point y end y end x start x end y start y if scalar prod with start 0 scalar prod with end 0 return distance to edge point start end selecting distance return false\n", "comment": "verifies whether this presentation contains given point\n"}
{"id": "16883158", "raw_code": "\tpublic boolean areConnected(Vertex source, Vertex destination) {\n\t\treturn (getConnectingEdge(source, destination) != null);\n\t}\n", "raw_comment": "\t/**\n\t * Checkes whether two given vertices are connected with an edge.\n\t * \n\t * @param source\n\t *            source vertex\n\t * @param destination\n\t *            destination vertex\n\t * @return true if an edge exists; false otherwise\n\t */\n", "code": "public boolean are connected vertex source vertex destination return get connecting edge source destination null\n", "comment": "checkes whether two given vertices are connected with an edge\n"}
{"id": "16883162", "raw_code": "\tpublic boolean isInRect(int x1, int y1, int x2, int y2) {\n\t\treturn isPointInRect(getStart(), x1, y1, x2, y2)\n\t\t\t\t&& isPointInRect(getEnd(), x1, y1, x2, y2);\n\t}\n", "raw_comment": "\t/**\n\t * Verifies whether this presentation lays whithin giver rectangle\n\t * \n\t * \n\t * @param x1 left upper x\n\t * @param y1 left upper y\n\t * @param x2 right lower x\n\t * @param y2 right lower y\n\t * @return true if it does; false otherwise\n\t */\n", "code": "public boolean is in rect int x1 int y1 int x2 int y2 return is point in rect get start x1 y1 x2 y2 is point in rect get end x1 y1 x2 y2\n", "comment": "verifies whether this presentation lays whithin giver rectangle\n"}
{"id": "16883163", "raw_code": "\tprotected void testVertexToConnect(Vertex source, Vertex destination) {\n\t\ttestVertices(source, destination);\n\t\tif (areConnected(source, destination)) {\n\t\t\tthrow new IllegalArgumentException(\"Vertices already connected\");\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Checkes all contracts of connect {@link Graph#connect()} method. Vertices\n\t * must be in this graph and must be disconnected. Otherwise\n\t * <tt>IllegalArgumentException</tt> is thrown.\n\t * \n\t * @param source\n\t *            source vertex\n\t * @param destination\n\t *            destination vertex\n\t */\n", "code": "protected void test vertex to connect vertex source vertex destination test vertices source destination if are connected source destination throw new illegal argument exception vertices already connected\n", "comment": "checkes all contracts of connect\n"}
{"id": "16883164", "raw_code": "\tprotected void addVertexToGraph(Vertex vertex) {\n\t\tvertices.add(vertex);\n\t}\n", "raw_comment": "\t/**\n\t * Enables subclasses to add vertices to graph.\n\t * \n\t * @param vertex\n\t *            vertex to add\n\t */\n", "code": "protected void add vertex to graph vertex vertex vertices add vertex\n", "comment": "enables subclasses to add vertices to graph\n"}
{"id": "16883167", "raw_code": "\tprotected void removeVertexFromGraph(Vertex vertex) {\n\t\tvertex.removeEdges();\n\t\tvertices.remove(vertex);\n\t}\n", "raw_comment": "\t/**\n\t * Enables subclasses to remove vertices from graph.\n\t * \n\t * @param vertex\n\t *            vertex to remove.\n\t */\n", "code": "protected void remove vertex from graph vertex vertex vertex remove edges vertices remove vertex\n", "comment": "enables subclasses to remove vertices from graph\n"}
{"id": "16883168", "raw_code": "\tpublic boolean isWeightSelected(Point point) {\n\t\tint x = (getStart().x + getEnd().x) / 2;\n\t\tint y = (getStart().y + getEnd().y) / 2;\n\t\treturn (isWeighted && (x - WEIGHT_SHIFT / 2) <= point.x)\n\t\t\t\t&& (point.x <= (x + weightWidth + WEIGHT_SHIFT))\n\t\t\t\t&& ((y - weightHeight - WEIGHT_SHIFT / 2) <= point.y)\n\t\t\t\t&& (point.y <= (y + weightHeight + WEIGHT_SHIFT));\n\t}\n", "raw_comment": "\t/**\n\t * Verifies whether given point is in this prenentation weight rect.\n\t * \n\t * @param point\n\t * @return true if it is; false otherwise\n\t */\n", "code": "public boolean is weight selected point point int x get start x get end x 2 int y get start y get end y 2 return is weighted x weight shift 2 point x point x x weight width weight shift y weight height weight shift 2 point y point y y weight height weight shift\n", "comment": "verifies whether given point is in this prenentation weight rect\n"}
{"id": "16883170", "raw_code": "\tprotected boolean isVertexInGraph(Vertex vertex) {\n\t\treturn vertices.contains(vertex);\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether the given vertex is in graph.\n\t * \n\t * @param vertex\n\t *            vertex\n\t * @return true if vertex is in graph; false otherwise\n\t */\n", "code": "protected boolean is vertex in graph vertex vertex return vertices contains vertex\n", "comment": "checks whether the given vertex is in graph\n"}
{"id": "16883173", "raw_code": "\tprotected void testVertices(Vertex source, Vertex destination) {\n\t\tif (!isVertexInGraph(source)) {\n\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\"Source vertex not in this graph.\");\n\t\t}\n\t\tif (!isVertexInGraph(destination)) {\n\t\t\tthrow new IllegalArgumentException(\n\t\t\t\t\t\"Destination vertex not in this graph.\");\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Checks whether the given vertices are in graph. If one is not\n\t * <tt>IllegalArgumentException</tt> is thrown.\n\t * \n\t * @param source\n\t *            source vertex\n\t * @param destination\n\t *            destination vertex\n\t */\n", "code": "protected void test vertices vertex source vertex destination if is vertex in graph source throw new illegal argument exception source vertex not in this graph if is vertex in graph destination throw new illegal argument exception destination vertex not in this graph\n", "comment": "checks whether the given vertices are in graph\n"}
{"id": "16883279", "raw_code": "\tpublic void testWrongDisconnection() {\n\t\tAssert.assertTrue(!graph.disconnect(vertices[0], vertices[3]));\n\t}\n", "raw_comment": "\t/**\n\t * Tests special case of {@link AbstractGraph#removeVertex()} method.\n\t *\n\t */\n", "code": "public void test wrong disconnection assert assert true graph disconnect vertices 0 vertices 3\n", "comment": "tests special case of\n"}
{"id": "2027867", "raw_code": "  public Class getComponentType() {\n    return type;\n  }\n", "raw_comment": "  /**\n   * Get the component type.\n   * @return the component type.\n   */\n", "code": "public class get component type return type\n", "comment": "get the component type\n"}
{"id": "2027875", "raw_code": "  public Object getComponentKey() {\n    return ckey;\n  }\n", "raw_comment": "  /**\n   * Get the component key.\n   * @return the component key.\n   */\n", "code": "public object get component key return ckey\n", "comment": "get the component key\n"}
{"id": "2027878", "raw_code": "  public int getOrdinalPosition() {\n    return num;\n  }\n", "raw_comment": "  /**\n   * Get the ordinal position of the parameter starting from 0.\n   * @return the ordinal position.\n   */\n", "code": "public int get ordinal position return num\n", "comment": "get the ordinal position of the parameter starting from 0\n"}
{"id": "2027879", "raw_code": "  public ComponentMonitor getComponentMonitor(){\n    return (ComponentMonitor)java.lang.reflect.Proxy.newProxyInstance(\n      getClass().getClassLoader(), new Class[]{ComponentMonitor.class},\n      new java.lang.reflect.InvocationHandler(){\n        public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n          return fire(method, args);\n        }\n      }\n    );\n  }\n", "raw_comment": "  /**\n   * To create a ComponentMonitor instance that sequentially invoke\n   * the corresponding methods of all the monitors in the queue.\n   */\n", "code": "public component monitor get component monitor return component monitor java lang reflect proxy new proxy instance get class get class loader new class component monitor class new java lang reflect invocation handler public object invoke object proxy method method object args throws throwable return fire method args\n", "comment": "to create a component monitor instance that sequentially invoke\n"}
{"id": "2027881", "raw_code": "  public Signature getSource() {\n    return source;\n  }\n", "raw_comment": "  /**\n   * To get the signature of the method call that caused this error.\n   */\n", "code": "public signature get source return source\n", "comment": "to get the signature of the method call that caused this error\n"}
{"id": "2027980", "raw_code": "  public Object getPropertyKey() {\n    return lkey;\n  }\n", "raw_comment": "  /**\n   * Get the property key.\n   * @return the property key.\n   */\n", "code": "public object get property key return lkey\n", "comment": "get the property key\n"}
{"id": "2027983", "raw_code": "  public Class getParameterType() {\n    return type;\n  }\n", "raw_comment": "  /**\n   * Get the expected property type.\n   * @return the property type.\n   */\n", "code": "public class get parameter type return type\n", "comment": "get the expected property type\n"}
{"id": "2027992", "raw_code": "  public boolean isPooled(){\n    return pooled;\n  }\n", "raw_comment": "  /**\n   * Is this pool currently having something in cache?\n   */\n", "code": "public boolean is pooled return pooled\n", "comment": "is this pool currently having something in cache\n"}
{"id": "2028011", "raw_code": "  public Object getObject() throws Exception {\n    return yan.instantiateComponent(cc);\n  }\n", "raw_comment": "  /**\n   * Instantiate the component.\n   */\n", "code": "public object get object throws exception return yan instantiate component cc\n", "comment": "instantiate the component\n"}
{"id": "2028012", "raw_code": "  public Class getObjectType() {\n    return cc.getType();\n  }\n", "raw_comment": "  /** \n   * Get the static type of the component.\n   */\n", "code": "public class get object type return cc get type\n", "comment": "get the static type of the component\n"}
{"id": "2028014", "raw_code": "  public Component getComponent() {\n    return cc;\n  }\n", "raw_comment": "  /**\n   * Get the component in this object.\n   */\n", "code": "public component get component return cc\n", "comment": "get the component in this object\n"}
{"id": "2028015", "raw_code": "  public Container getContainer() {\n    return yan;\n  }\n", "raw_comment": "  /**\n   * Get the container in this object.\n   */\n", "code": "public container get container return yan\n", "comment": "get the container in this object\n"}
{"id": "2028022", "raw_code": "  public int getBeanDefinitionCount() {\n    final Set keys = yan.keys();\n    int ret = 0;\n    for(Iterator it=keys.iterator(); it.hasNext();){\n      final Object key = it.next();\n      if(key instanceof String){\n        ret++;\n      }\n    }\n    return ret;\n  }\n", "raw_comment": "  /**\n   * Get the number of components registered under a string key.\n   */\n", "code": "public int get bean definition count final set keys yan keys int ret 0 for iterator it keys iterator it has next final object key it next if key instanceof string ret return ret\n", "comment": "get the number of components registered under a string key\n"}
{"id": "2028025", "raw_code": "  public Object getState() {\n    return null;\n  }\n", "raw_comment": "  /**\n   * Gets the user state of this component.\n   * null is returned by default.\n   * Subclasses can either override this method to provide user states,\n   * or call Component.withState() to associate a user state.\n   * Component.withState() is preferable. \n   */\n", "code": "public object get state return null\n", "comment": "gets the user state of this component\n"}
{"id": "2028036", "raw_code": "  public Component withState(Object obj){\n    return Components.withState(this, obj);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object with the specified user state.\n   * @param obj the user state object.\n   * @return the new Component object.\n   */\n", "code": "public component with state object obj return components with state this obj\n", "comment": "create a new component object with the specified user state\n"}
{"id": "2028046", "raw_code": "  public Component singleton(){\n    return Components.singleton(this);\n  }\n", "raw_comment": "  /**\n   * Create a new Component that utilizes singleton pattern when creating instance.\n   * This new component will still use whatever the creation strategy \"this\" has,\n   * But it guarantees that the result is properly cached so that next time create() is called, \n   * the same instance will be returned.  \n   * @return the new Component.\n   */\n", "code": "public component singleton return components singleton this\n", "comment": "create a new component that utilizes singleton pattern when creating instance\n"}
{"id": "2028050", "raw_code": "  public Component singleton(Pool scope){\n    return Components.singleton(this, scope);\n  }\n", "raw_comment": "  /**\n   * Create a new Component that utilizes singleton pattern \n   * within a scope specified by the provided Pool object when creating instance.\n   * <br>\n   * This new component will still use whatever the creation strategy \"this\" has,\n   * But it guarantees that the result is properly cached so that next time create() is called, \n   * the same instance will be returned. \n   * @param scope the scope of the singleton pattern.\n   * @return the new Component.\n   */\n", "code": "public component singleton pool scope return components singleton this scope\n", "comment": "create a new component that utilizes singleton pattern\n"}
{"id": "2028060", "raw_code": "  public Component factory(Class factory_type, String toString){\n    return Components.factory(this, factory_type, toString);\n  }\n", "raw_comment": "  /**\n   * Create a Component that instantiates a factory interface.\n   * 'this' component is used as the component for product object.\n   * All factory methods in the factory interface will delegate\n   * to the product component ('this' component) to create the product.\n   * \n   * @param factory_type the class object of the factory interface.\n   * @param toString the string returned by the toString() method of the proxy.\n   * @return the factory component.\n   */\n", "code": "public component factory class factory type string to string return components factory this factory type to string\n", "comment": "create a component that instantiates a factory interface\n"}
{"id": "2028062", "raw_code": "  public Map getBeansOfType(Class type) throws BeansException {\n    return getBeansOfType(type, true, true);\n  }\n", "raw_comment": "  /**\n   * Get the (String,Object) map of all components with the given type.\n   * @param type the expected type. If this type is FactoryBean,\n   * the component is adapted to FactoryBean without actually instantiating\n   * instance.\n   * @return the Map object containing component instances (if the type\n   * is not BeanFactory), otherwise BeanFactory objects.\n   */\n", "code": "public map get beans of type class type throws beans exception return get beans of type type true true\n", "comment": "get the string object map of all components with the given type\n"}
{"id": "2028070", "raw_code": "  public Component factory(Class factory_type){\n    return factory(factory_type, factory_type.getName());\n  }\n", "raw_comment": "  /**\n   * Create a Component that instantiates a factory interface.\n   * 'this' component is used as the component for product object.\n   * All factory methods in the factory interface will delegate\n   * to the product component ('this' component) to create the product.\n   * \n   * @param factory_type the class object of the factory interface.\n   * @return the factory component.\n   */\n", "code": "public component factory class factory type return factory factory type factory type get name\n", "comment": "create a component that instantiates a factory interface\n"}
{"id": "2028073", "raw_code": "  public Component ctor(Constructor ctor){\n    return Components.fun(ctor(ctor, mon));\n  }\n", "raw_comment": "  /**\n   * Create a Component for a constructor with monitoring support.\n   * @param ctor the Constructor object.\n   * @return the Component object with monitoring support.\n   */\n", "code": "public component ctor constructor ctor return components fun ctor ctor mon\n", "comment": "create a component for a constructor with monitoring support\n"}
{"id": "2028074", "raw_code": "  public Object getDuplicatedKey() {\n    return key;\n  }\n", "raw_comment": "  /**\n   * Get the key object duplicated.\n   * @return the key.\n   */\n", "code": "public object get duplicated key return key\n", "comment": "get the key object duplicated\n"}
{"id": "2028079", "raw_code": "  public Component factory(String toString){\n    return Components.factory(this, toString);\n  }\n", "raw_comment": "  /**\n   * Create a Component that instantiates the {@link Factory} interface.\n   * 'this' component is used as the component for product object.\n   * The {@link Factory#create()} method delegates\n   * to the product component ('this' component) to create the product.\n   * @param toString the string returned by the toString() method of the factory.\n   * @return the factory component.\n   */\n", "code": "public component factory string to string return components factory this to string\n", "comment": "create a component that instantiates the\n"}
{"id": "2028095", "raw_code": "  public Component factory(){\n    return factory(\"factory\");\n  }\n", "raw_comment": "  /**\n   * Create a Component that instantiates the {@link Factory} interface.\n   * 'this' component is used as the component for product object.\n   * The {@link Factory#create()} method delegates\n   * to the product component ('this' component) to create the product.\n   * \n   * @return the factory component.\n   */\n", "code": "public component factory return factory factory\n", "comment": "create a component that instantiates the\n"}
{"id": "2028113", "raw_code": "  public Component guard(){\n    return Components.guard(this);\n  }\n", "raw_comment": "  /**\n   * Decorate this Component so that\n   * the new Component object guards against infinite dependency loop.\n   * @return the new Component object.\n   */\n", "code": "public component guard return components guard this\n", "comment": "decorate this component so that\n"}
{"id": "2028126", "raw_code": "  public Component method(Object obj, Method mtd){\n    return Components.fun(method(obj, mtd, mon));\n  }\n", "raw_comment": "  /**\n   * Create a Component for a method with monitoring support.\n   * @param obj the 'this' object to invoke the method against.\n   * @param mtd the method object.\n   * @return the Component object with monitoring support.\n   */\n", "code": "public component method object obj method mtd return components fun method obj mtd mon\n", "comment": "create a component for a method with monitoring support\n"}
{"id": "2028131", "raw_code": "  public Object getBean(final String name) throws BeansException {\n    /*\n    if(BeanFactoryUtils.isFactoryDereference(name)){\n     final String factoryname = BeanFactoryUtils.transformedBeanName(name);\n     return getFactoryBean(findComponent(factoryname));\n    }\n    else{\n     return instantiate(findComponent(name)); \n    }*/\n    return getBean(name, null);\n  }\n", "raw_comment": "  /** \n   * Get a bean object.\n   * @param name the name of the component.\n   * If the name starts with a \"&\", as specified by Spring,\n   * a FactoryBean object is returned corresponding to the component,\n   * otherwise the component itself is instantiated.\n   */\n", "code": "public object get bean final string name throws beans exception if bean factory utils is factory dereference name final string factoryname bean factory utils transformed bean name name return get factory bean find component factoryname else return instantiate find component name return get bean name null\n", "comment": "get a bean object\n"}
{"id": "2028160", "raw_code": "  public Component bindArguments(ParameterBinder binder){\n    return Components.bindArguments(this, binder);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses given ParameterBinder object to create its parameters.\n   * For each parameter identified by an ordinal position\n   * and a type, the ParameterBinder object is called to get\n   * a new Creator object, which is used to create the argument.\n   * @param binder the ParameterBinder object for creating arguments.\n   * @return the new Component object.\n   */\n", "code": "public component bind arguments parameter binder binder return components bind arguments this binder\n", "comment": "create a new component object that\n"}
{"id": "2028170", "raw_code": "  public Component bindArgument(int k, ParameterBinder binder){\n    return Components.bindArgument(this, k, binder);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses a given ParameterBinder object to create one of its argument\n   * identified by its ordinal position.\n   * @param k the ordinal position of the parameter.\n   * @param binder the ParameterBinder object for creating arguments.\n   * @return the new Component object.\n   */\n", "code": "public component bind argument int k parameter binder binder return components bind argument this k binder\n", "comment": "create a new component object that\n"}
{"id": "2028180", "raw_code": "  public Component withArguments(Part part){\n    return Components.withArguments(this, part);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses the given Part object to create all its parameters.\n   * @param part the Part object.\n   * @return the new Component object.\n   */\n", "code": "public component with arguments part part return components with arguments this part\n", "comment": "create a new component object that\n"}
{"id": "2028190", "raw_code": "  public Component withProperty(Object k, Creator factory){\n    return Components.withProperty(this, k, factory);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses a given Creator object to create one of its property value.\n   * \n   * @param k the property key.\n   * @param factory the Creator object.\n   * @return the new Component object.\n   */\n", "code": "public component with property object k creator factory return components with property this k factory\n", "comment": "create a new component object that\n"}
{"id": "2028200", "raw_code": "  public Component withProperty(Object k, Part p){\n    return Components.withProperty(this, k, p);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses a given Part object to create one of its property values.\n   * @param k the property key.\n   * @param p the Part object.\n   * @return the new Component object.\n   */\n", "code": "public component with property object k part p return components with property this k p\n", "comment": "create a new component object that\n"}
{"id": "2028210", "raw_code": "  public Component withProperties(Map props){\n    return Components.withProperties(this, props);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses given Creator objects to create some of its properties.\n   * @param props the map that contains mappings between property keys\n   * and Creator objects that creates the property value.\n   * This Map object is not modified within this method.\n   * It is allowed to subsequently change the Map object\n   * after this method is called. \n   * The new change will be picked up by the component\n   * when creating instances.\n   * If a property's key is not contained in the Map object,\n   * the creation strategy is not changed for this property.\n   * @return the new Component object.\n   */\n", "code": "public component with properties map props return components with properties this props\n", "comment": "create a new component object that\n"}
{"id": "2028220", "raw_code": "  public Component withProperties(String[] keys, Creator[] creators){\n    return Components.withProperties(this, keys, creators);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses given Creator objects to create some of its properties' value.\n   * For property identified by keys[i], creators[i] is used for creating value.\n   * The keys array and creators array has to be the same length.\n   * @param keys the property keys. Duplicate key is not allowed in this array.\n   * Keys are case-sensitive.\n   * @param creators the creators for creating property values.\n   * @return the new Component object.\n   */\n", "code": "public component with properties string keys creator creators return components with properties this keys creators\n", "comment": "create a new component object that\n"}
{"id": "2028234", "raw_code": "  public Component bindProperties(PropertyBinder binder){\n    return Components.bindProperties(this, binder);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses given PropertyBinder object to create its properties.\n   * For each property identified by a key\n   * and a type, the PropertyBinder object is called to get\n   * a new Creator object, which is used to create the property value.\n   * @param binder the PropertyBinder object for creating properties.\n   * @return the new Component object.\n   */  \n", "code": "public component bind properties property binder binder return components bind properties this binder\n", "comment": "create a new component object that\n"}
{"id": "2028244", "raw_code": "  public Registrar getChild() {\n    return child;\n  }\n", "raw_comment": "  /**\n   * Get the child container.\n   * @return the child container.\n   */\n", "code": "public registrar get child return child\n", "comment": "get the child container\n"}
{"id": "2028246", "raw_code": "  public Registrar getParent() {\n    return parent;\n  }\n", "raw_comment": "  /**\n   * Get the parent container.\n   * @return the parent container.\n   */\n", "code": "public registrar get parent return parent\n", "comment": "get the parent container\n"}
{"id": "2028247", "raw_code": "  public Component bindProperty(Object k, PropertyBinder binder){\n    return Components.bindProperty(this, k, binder);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that\n   * uses given PropertyBinder object to create one of its property\n   * identified by a property key.\n   * @param k the property key.\n   * @param binder the PropertyBinder object for creating properties.\n   * @return the new Component object.\n   */  \n", "code": "public component bind property object k property binder binder return components bind property this k binder\n", "comment": "create a new component object that\n"}
{"id": "2028248", "raw_code": "  public void registerComponent(Object key, Component cc) {\n    child.registerComponent(key, cc);\n  }\n", "raw_comment": "  /**\n   * registers the component to the child container.\n   */\n", "code": "public void register component object key component cc child register component key cc\n", "comment": "registers the component to the child container\n"}
{"id": "2028249", "raw_code": "  public void unregisterComponentsOfType(Class type){\n    child.unregisterComponentsOfType(type);\n  }\n", "raw_comment": "  /**\n   * unregisters components of a provided type from child container.\n   */\n", "code": "public void unregister components of type class type child unregister components of type type\n", "comment": "unregisters components of a provided type from child container\n"}
{"id": "2028251", "raw_code": "  public void unregisterComponent(Object key) {\n    child.unregisterComponent(key);\n    //parent.unregisterComponent(key);\n  }\n", "raw_comment": "  /**\n   * unregisters a component identified by a key\n   * from child container.\n   * Nothing is done if the key is not found in the child container.\n   */\n", "code": "public void unregister component object key child unregister component key parent unregister component key\n", "comment": "unregisters a component identified by a key\n"}
{"id": "2028257", "raw_code": "  public Component getComponent(Object key) {\n    Component cc = child.getComponent(key);\n    if(cc==null) return parent.getComponent(key);\n    else return cc;\n  }\n", "raw_comment": "  /**\n   * retrieves a component identified by a key.\n   * The key is first looked up in the child container,\n   * if not found, the parent container is looked up.\n   */\n", "code": "public component get component object key component cc child get component key if cc null return parent get component key else return cc\n", "comment": "retrieves a component identified by a key\n"}
{"id": "2028259", "raw_code": "  public Component getComponentOfType(Class type){\n    Component c1 = getComponent(type);\n    if(c1!=null) return c1;\n    c1 = child.getComponentOfType(type);\n    if(c1!=null) return c1;\n    else return parent.getComponentOfType(type);\n  }\n", "raw_comment": "  /**\n   * retrieves a component of a provided type.\n   * the child container is first looked up,\n   * if no such component is found, the parent container is looked up.\n   */\n", "code": "public component get component of type class type component c1 get component type if c1 null return c1 c1 child get component of type type if c1 null return c1 else return parent get component of type type\n", "comment": "retrieves a component of a provided type\n"}
{"id": "2028260", "raw_code": "  public Component withProperties(Part p){\n    return Components.withProperties(this, p);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that uses a Part object\n   * to create all of its property values.\n   * @param p the Part object.\n   * @return the new Component object.\n   */\n", "code": "public component with properties part p return components with properties this p\n", "comment": "create a new component object that uses a part object\n"}
{"id": "2028262", "raw_code": "  public Dependency getDependencyOfType(Class type, ComponentMap cmap){\n    if(type==null || child.containsType(type))\n      return child.getDependencyOfType(type, cmap);\n    else return parent.getDependencyOfType(type, parent);\n  }\n", "raw_comment": "  /**\n   * Gets the Dependency object for a component of\n   * a provided type.\n   * <br>\n   * If the component type can be found in the child container,\n   * the dependency is looked up in the child container.\n   * Otherwise, parent container is looked up and the parent container\n   * is used to resolve all cascaded dependencies. \n   */\n", "code": "public dependency get dependency of type class type component map cmap if type null child contains type type return child get dependency of type type cmap else return parent get dependency of type type parent\n", "comment": "gets the dependency object for a component of\n"}
{"id": "2028272", "raw_code": "  public Component subsume(Class type){\n    return Components.subsume(this, type);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that returns the given type\n   * as its component instance type when getType() or verify(Dependency) is called.\n   * If the component is not late-bound (where getType() returns null),\n   * the given type has to be same or super type of the component instance type of \"this\"\n   * @param type the target type.\n   * @return the new Component object.\n   */\n", "code": "public component subsume class type return components subsume this type\n", "comment": "create a new component object that returns the given type\n"}
{"id": "2028279", "raw_code": "  public void verify(ComponentMap cmap) {\n    child.verify(cmap);\n    parent.verify(parent);\n  }\n", "raw_comment": "  /**\n   * Verifies all components in this container.\n   * Components in the child container use the provided ComponentMap\n   * to resolve dependency; while those from the parent container\n   * use the parent container itself for resolving dependency.\n   */\n", "code": "public void verify component map cmap child verify cmap parent verify parent\n", "comment": "verifies all components in this container\n"}
{"id": "2028283", "raw_code": "  public Component cast(Class type){\n    return Components.cast(this, type);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that returns the given type\n   * as its component instance type when getType() or verify(Dependency) is called.\n   * Unlike subsume(), this method allows \"down-cast\"\n   * where the current component instance type is a subtype of the given type.\n   * It also allows \"stupid-cast\" where the current\n   * component instance type has no is-a relationship with the target type.\n   * @param type the target type.\n   * @return the new Component object.\n   */\n", "code": "public component cast class type return components cast this type\n", "comment": "create a new component object that returns the given type\n"}
{"id": "2028291", "raw_code": "  public Component transform(Object key, Component cc){\n    return transform(cc);\n  }\n", "raw_comment": "  /**\n   * Transforms one Component object to another.\n   * By default, this delegates to transform(cc);\n   * @param key the component key.\n   * @param cc the component.\n   * @return the transformed Component object.\n   */\n", "code": "public component transform object key component cc return transform cc\n", "comment": "transforms one component object to another\n"}
{"id": "2028301", "raw_code": "  public Component proxy(Class[] itfs){\n    return Components.proxy(this, itfs);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that uses dynamic proxy\n   * to transform the return value 'this' Component creates\n   * to a dynamic proxy.\n   * @param itfs the interfaces to proxy to.\n   * @return the new Component object.\n   */\n", "code": "public component proxy class itfs return components proxy this itfs\n", "comment": "create a new component object that uses dynamic proxy\n"}
{"id": "2028318", "raw_code": "  public Component proxy(Class itf){\n    return Components.proxy(this, itf);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that uses dynamic proxy\n   * to transform the return value 'this' Component creates\n   * to a dynamic proxy.\n   * @param itf the interface to proxy to.\n   * @return the new Component object.\n   */\n", "code": "public component proxy class itf return components proxy this itf\n", "comment": "create a new component object that uses dynamic proxy\n"}
{"id": "2028338", "raw_code": "  public Component proxy(){\n    return Components.proxy(this);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that uses dynamic proxy\n   * to transform the return value 'this' Component creates\n   * to a dynamic proxy.\n   * The dynamic proxy will implement all the public interfaces\n   * that the type of \"this\" component implements.\n   * @return the new Component object.\n   */\n", "code": "public component proxy return components proxy this\n", "comment": "create a new component object that uses dynamic proxy\n"}
{"id": "2028347", "raw_code": "  public Object getComponentKey(){\n    return key;\n  }\n", "raw_comment": "  /**\n   * Get the component key.\n   * @return the component key.\n   */\n", "code": "public object get component key return key\n", "comment": "get the component key\n"}
{"id": "2028353", "raw_code": "  public Class getSource() {\n    return source;\n  }\n", "raw_comment": "  /**\n   * To get the source of the exception.\n   */\n", "code": "public class get source return source\n", "comment": "to get the source of the exception\n"}
{"id": "2028361", "raw_code": "  public Component map(jfun.yan.Map m){\n    return Monad.map(this, m);\n  }\n", "raw_comment": "  /**\n   * Create a new Component that upon creation, \n   * transforms the component instance\n   * to another instance.\n   * @param m the Map object.\n   * @return the new Component object.\n   */\n", "code": "public component map jfun yan map m return monad map this m\n", "comment": "create a new component that upon creation\n"}
{"id": "2028380", "raw_code": "  public Component mutate(Mutation m){\n    return Components.mutate(this, m);\n  }\n", "raw_comment": "  /**\n   * Create a new Component that upon creation, \n   * mutates the component instance\n   * before it is returned.\n   * @param m the Mutation object.\n   * @return the new Component object.\n   */  \n", "code": "public component mutate mutation m return components mutate this m\n", "comment": "create a new component that upon creation\n"}
{"id": "2028413", "raw_code": "  public Component incomplete(){\n    return Components.incomplete(this);\n  }\n", "raw_comment": "  /**\n   * By default, all components depended by this component\n   * will be verified when this component is verified.\n   * incomplete() creates a new Component object that\n   * suppresses the verification of dependency.\n   * @return the new Component object.\n   */\n", "code": "public component incomplete return components incomplete this\n", "comment": "by default all components depended by this component\n"}
{"id": "2028425", "raw_code": "  public Method getMethod() {\n    return mtd;\n  }\n", "raw_comment": "  /**\n   * Get the problematic method.\n   * @return the method.\n   */\n", "code": "public method get method return mtd\n", "comment": "get the problematic method\n"}
{"id": "2028456", "raw_code": "  public int getParameterCount() {\n    return num_params;\n  }\n", "raw_comment": "  /**\n   * Get the total number of parameters.\n   * This number is determined by the maximal ordinal position of the expected\n   * parameters.\n   * It may be different than getParameters().size() because certain parameter\n   * may not be expected. For example, a component may only expect parameters\n   * of ordinal position (0, 2, 3) with parameter 1 ignored.\n   * @return the total number of parameters. \n   */\n", "code": "public int get parameter count return num params\n", "comment": "get the total number of parameters\n"}
{"id": "2028459", "raw_code": "  public Map getParameters() {\n    return params;\n  }\n", "raw_comment": "  /**\n   * Get the parameters.\n   * @return a Map with the ordinal position as key and the parameter type as\n   * value.\n   */\n", "code": "public map get parameters return params\n", "comment": "get the parameters\n"}
{"id": "2028461", "raw_code": "  public Map getProperties() {\n    return props;\n  }\n", "raw_comment": "  /**\n   * Get the properties.\n   * @return a Map with the property type as value.\n   */\n", "code": "public map get properties return props\n", "comment": "get the properties\n"}
{"id": "2028463", "raw_code": "  public Class getComponentType(){\n    return rtype;\n  }\n", "raw_comment": "  /**\n   * Get the property type.\n   * @return the property type.\n   */\n", "code": "public class get component type return rtype\n", "comment": "get the property type\n"}
{"id": "2028490", "raw_code": "  public void registerConstructor(Class c){\n    registerConstructor(c, c);\n  }\n", "raw_comment": "  /**\n   * The component is transformed by {@link #defaultTransform(Component)},\n   * which makes it singleton.\n   * Override {@link #defaultTransform(Component)} if a different default behavior\n   * is desired.\n   */\n", "code": "public void register constructor class c register constructor c c\n", "comment": "the component is transformed by\n"}
{"id": "2028494", "raw_code": "  public Object getPropertyKey() {\n    return key;\n  }\n", "raw_comment": "  /**\n   * Gets the property key.\n   * @return the key.\n   */\n", "code": "public object get property key return key\n", "comment": "gets the property key\n"}
{"id": "2028496", "raw_code": "  public Object getObject() {\n    return obj;\n  }\n", "raw_comment": "  /**\n   * Gets the object that has the property.\n   * @return the object.\n   */\n", "code": "public object get object return obj\n", "comment": "gets the object that has the property\n"}
{"id": "2028499", "raw_code": "  protected Component defaultTransform(Component comp){\n    return comp.singleton();\n  }\n", "raw_comment": "  /**\n   * Transforms a component by calling singleton().\n   * registerConstructor and registerStaticMethod\n   * call this function to transform the component\n   * before registering to the container.\n   * Override this function if singleton() is not desired\n   * or a different transformation is needed.\n   * @param comp the component.\n   * @return the transformed component.\n   */\n", "code": "protected component default transform component comp return comp singleton\n", "comment": "transforms a component by calling singleton\n"}
{"id": "2028500", "raw_code": "  public Component ignoreProperty(Object key){\n    return withProperty(key, Components.useDefault());\n  }\n", "raw_comment": "  /**\n   * Ignore the property identified by a key and use the default mechanism.\n   * Equivalent as this.withProperty(key, Components.useDefault()).\n   * @param key the property key.\n   * @return the new Component object.\n   */\n", "code": "public component ignore property object key return with property key components use default\n", "comment": "ignore the property identified by a key and use the default mechanism\n"}
{"id": "2028512", "raw_code": "  public void registerConstructor(Object key, Class c){\n    registerComponent(key, defaultTransform(Components.ctor(c)));\n  }\n", "raw_comment": "  /**\n   * The component is transformed by {@link #defaultTransform(Component)},\n   * which makes it singleton.\n   * Override {@link #defaultTransform(Component)} if a different default behavior\n   * is desired.\n   */\n", "code": "public void register constructor object key class c register component key default transform components ctor c\n", "comment": "the component is transformed by\n"}
{"id": "2028521", "raw_code": "  public void registerConstructor(Class c, Class[] param_types){\n    registerConstructor(c, c, param_types);\n  }\n", "raw_comment": "  /**\n   * The component is transformed by {@link #defaultTransform(Component)},\n   * which makes it singleton.\n   * Override {@link #defaultTransform(Component)} if a different default behavior\n   * is desired.\n   */\n", "code": "public void register constructor class c class param types register constructor c c param types\n", "comment": "the component is transformed by\n"}
{"id": "2028527", "raw_code": "  public Component optionalProperty(Object key){\n    return Components.optionalProperty(this, key);\n  }\n", "raw_comment": "  /**\n   * Make a property identified by a key optional,\n   * so that when the property cannot be resolved or any of its\n   * subcomponent cannot be resolved, the default value is used instead.\n   * @param key the property key.\n   * @return the new Component object.\n   */\n", "code": "public component optional property object key return components optional property this key\n", "comment": "make a property identified by a key optional\n"}
{"id": "2028532", "raw_code": "  public void registerConstructor(Object key, Class c, Class[] param_types){\n    registerComponent(key, \n        defaultTransform(Components.ctor(c, param_types)));\n  }\n", "raw_comment": "  /**\n   * The component is transformed by {@link #defaultTransform(Component)},\n   * which makes it singleton.\n   * Override {@link #defaultTransform(Component)} if a different default behavior\n   * is desired.\n   */\n", "code": "public void register constructor object key class c class param types register component key default transform components ctor c param types\n", "comment": "the component is transformed by\n"}
{"id": "2028549", "raw_code": "  public void registerStaticMethod(Class c, String name){\n    final Component comp = Components.static_method(c, name);\n    registerComponent(defaultTransform(comp));\n  }\n", "raw_comment": "  /**\n   * The component is transformed by {@link #defaultTransform(Component)},\n   * which makes it singleton.\n   * Override {@link #defaultTransform(Component)} if a different default behavior\n   * is desired.\n   */\n", "code": "public void register static method class c string name final component comp components static method c name register component default transform comp\n", "comment": "the component is transformed by\n"}
{"id": "2028555", "raw_code": "  public Class getActualType() {\n    return actual_type;\n  }\n", "raw_comment": "  /**\n   * Get the actual argument type.\n   * @return the actual argument type.\n   */\n", "code": "public class get actual type return actual type\n", "comment": "get the actual argument type\n"}
{"id": "2028557", "raw_code": "  public Class getExpectedType() {\n    return expected_type;\n  }\n", "raw_comment": "  /**\n   * Get the expected type.\n   * @return the expected type.\n   */\n", "code": "public class get expected type return expected type\n", "comment": "get the expected type\n"}
{"id": "2028561", "raw_code": "  public Component optionalProperties(){\n    return Components.optionalProperties(this);\n  }\n", "raw_comment": "  /**\n   * Make sure the properties are optional.\n   * @return the new Component object.\n   */\n", "code": "public component optional properties return components optional properties this\n", "comment": "make sure the properties are optional\n"}
{"id": "2028563", "raw_code": "  public void registerStaticMethod(Object key, Class c, String name){\n    registerComponent(key, \n        defaultTransform(Components.static_method(c, name)));\n  }\n", "raw_comment": "  /**\n   * The component is transformed by {@link #defaultTransform(Component)},\n   * which makes it singleton.\n   * Override {@link #defaultTransform(Component)} if a different default behavior\n   * is desired.\n   */\n", "code": "public void register static method object key class c string name register component key default transform components static method c name\n", "comment": "the component is transformed by\n"}
{"id": "2028577", "raw_code": "  public void registerStaticMethod(Class c, String name, Class[] param_types){\n    final Component comp = Components.static_method(c, name, param_types);\n    registerComponent(defaultTransform(comp));\n  }\n", "raw_comment": "  /**\n   * The component is transformed by {@link #defaultTransform(Component)},\n   * which makes it singleton.\n   * Override {@link #defaultTransform(Component)} if a different default behavior\n   * is desired.\n   */\n", "code": "public void register static method class c string name class param types final component comp components static method c name param types register component default transform comp\n", "comment": "the component is transformed by\n"}
{"id": "2028589", "raw_code": "  public void registerStaticMethod(Object key, Class c, String name, Class[] param_types){\n    registerComponent(key, \n        defaultTransform(Components.static_method(c, name, param_types)));\n  }\n", "raw_comment": "  /**\n   * The component is transformed by {@link #defaultTransform(Component)},\n   * which makes it singleton.\n   * Override {@link #defaultTransform(Component)} if a different default behavior\n   * is desired.\n   */\n", "code": "public void register static method object key class c string name class param types register component key default transform components static method c name param types\n", "comment": "the component is transformed by\n"}
{"id": "2028593", "raw_code": "  public Component optionalParameter(int ind){\n    return Components.optionalParameter(this, ind);\n  }\n", "raw_comment": "  /**\n   * Make a parameter optional,\n   * so that when the argument cannot be resolved or any of its\n   * subcomponent cannot be resolved, the default value is used instead.\n   * @param ind the ordinal position of the parameter.\n   * @return the new Component object.\n   */\n", "code": "public component optional parameter int ind return components optional parameter this ind\n", "comment": "make a parameter optional\n"}
{"id": "2028594", "raw_code": "  public void checkElement(int i, Class type){}\n", "raw_comment": "  /**\n   * Subclasses may choose to override this method\n   * to provide additional checking for the element types and indexes.\n   * @param i the index of the element.\n   * @param type the element type.\n   */\n", "code": "public void check element int i class type\n", "comment": "subclasses may choose to override this method\n"}
{"id": "2028608", "raw_code": "  public ResourceLoader getPrimary(){\n    return primary;\n  }\n", "raw_comment": "  /**\n   * Get the primary resource.\n   */\n", "code": "public resource loader get primary return primary\n", "comment": "get the primary resource\n"}
{"id": "2028609", "raw_code": "  public ResourceLoader getAlternative(){\n    return alt;\n  }\n", "raw_comment": "  /**\n   * Get the alternative resource.\n   */\n", "code": "public resource loader get alternative return alt\n", "comment": "get the alternative resource\n"}
{"id": "2028618", "raw_code": "  public Component optionalParameters(){\n    return Components.optionalParameters(this);\n  }\n", "raw_comment": "  /**\n   * Make sure the parameters are optional.\n   * @return the new Component object.\n   */\n", "code": "public component optional parameters return components optional parameters this\n", "comment": "make sure the parameters are optional\n"}
{"id": "2028628", "raw_code": "  public Component withDefaultProperty(Object key, Creator def){\n    return Components.withDefaultProperty(this, key, def);\n  }\n", "raw_comment": "  /**\n   * Create a Component object that will use an alternative Creator object\n   * when a certain property is passed in as default.\n   * \n   * @param key the property key.\n   * @param def the alternative Creator object.\n   * @return the new Component object.\n   */\n", "code": "public component with default property object key creator def return components with default property this key def\n", "comment": "create a component object that will use an alternative creator object\n"}
{"id": "2028638", "raw_code": "  public Component withDefaultArgument(int ind, Creator def){\n    return Components.withDefaultArgument(this, ind, def);\n  }\n", "raw_comment": "  /**\n   * Create a Component object that will use an alternative Creator object\n   * when a certain parameter is passed in as default.\n   * \n   * @param ind the ordinal position of the parameter.\n   * @param def the alternative Creator object.\n   * @return the new Component object.\n   */\n", "code": "public component with default argument int ind creator def return components with default argument this ind def\n", "comment": "create a component object that will use an alternative creator object\n"}
{"id": "2028642", "raw_code": "  public Constructor getConstructor(Class[] param_types){\n    final Params params = new Params(param_types);\n    return (Constructor)ctors.get(params);\n  }\n", "raw_comment": "  /**\n   * Get the public Constructor object identified by an array of parameter types.\n   * @param param_types the parameter types. \n   * @return the Constructor. or null if not found.\n   */\n", "code": "public constructor get constructor class param types final params params new params param types return constructor ctors get params\n", "comment": "get the public constructor object identified by an array of parameter types\n"}
{"id": "2028648", "raw_code": "  public Component optional(){\n    return Monad.mplus(this, Components.useDefault());\n  }\n", "raw_comment": "  /**\n   * Creates an optional Component.\n   * If this component fails, it returns the special default value indicator.\n   * @return the new Component object.\n   */\n", "code": "public component optional return monad mplus this components use default\n", "comment": "creates an optional component\n"}
{"id": "2028660", "raw_code": "  public Component option(Object val){\n    return Monad.mplus(this, Components.value(val));\n  }\n", "raw_comment": "  /**\n   * Creates an optional Component.\n   * If this component fails, it uses the provided value as return value.\n   * @param val the alternative value.\n   * @return the new Component object.\n   */\n", "code": "public component option object val return monad mplus this components value val\n", "comment": "creates an optional component\n"}
{"id": "2028676", "raw_code": "  public Component recover(Recovery r){\n    return Monad.recover(this, r);\n  }\n", "raw_comment": "  /**\n   * Create a new Component object that will recover errors\n   * happened from this Component.\n   * @param r the Recovery object.\n   * @return the new Component object.\n   */ \n", "code": "public component recover recovery r return monad recover this r\n", "comment": "create a new component object that will recover errors\n"}
{"id": "2028682", "raw_code": "  public Component bind(Binder binder){\n    return Monad.bind(this, binder);\n  }\n", "raw_comment": "  /**\n   * Monadic 'bind' operation.\n   * It creates a new Component object.\n   * Upon instance creation, this Component object will\n   * <p>\n   * 1. invokes this component object to create an instance. <br>\n   * 2. feed the instance to the Binder object to get a second Creator object. <br>\n   * 3. Invoke the second Creator object to get a second instance. <br>\n   * 4. return the second instance as the instance of this Component. <br>\n   * </p>\n   * Since the actual component type is not known until creation time, \n   * null is returned for getType().\n   * @param binder the Binder object.\n   * @return the new Component object.\n   */  \n", "code": "public component bind binder binder return monad bind this binder\n", "comment": "monadic bind operation\n"}
{"id": "2028693", "raw_code": "  public Component bind(ComponentBinder binder){\n    return Monad.bind(this, binder);\n  }\n", "raw_comment": "  /**\n   * Monadic 'bind' operation.\n   * It creates a new Component object.\n   * Upon instance creation, this Component object will\n   * <p>\n   * 1. invokes this component object to create an instance. <br>\n   * 2. feed the instance to the Binder object to get a second Creator object. <br>\n   * 3. Invoke the second Creator object to get a second instance. <br>\n   * 4. return the second instance as the instance of this Component. <br>\n   * </p>\n   * Since the actual component type is not known until creation time, \n   * null is returned for getType().\n   * <br>\n   * The ComponentBinder object will also verifies the component\n   * type of this component when verifying.\n   * @param binder the ComponentBinder object.\n   * @return the new Component object.\n   */  \n", "code": "public component bind component binder binder return monad bind this binder\n", "comment": "monadic bind operation\n"}
{"id": "2028699", "raw_code": "  public Component ifelse(Component yes, Component no){\n    return Monad.ifelse(this, yes, no);\n  }\n", "raw_comment": "  /**\n   * Create a Component object according to the boolean value returned from this Component. \n   * @param yes the Component when the condition is true.\n   * @param no the Component when the condition is false;\n   * @return the conditional Component.\n   */ \n", "code": "public component ifelse component yes component no return monad ifelse this yes no\n", "comment": "create a component object according to the boolean value returned from this component\n"}
{"id": "2028707", "raw_code": "  public Method getMethod(String name, Class[] param_types, boolean suppress_security){\n    if(suppress_security)\n      return getAnyMethod(name, param_types);\n    else\n      return getMethod(name, param_types);\n  }\n", "raw_comment": "  /**\n   * Get the method identified by a signature.\n   * @param name the method name.\n   * @param param_types the formal parameter types.\n   * @param suppress_security whether to look at non-public ones.\n   * @return the Method object. or null if not found.\n   */\n", "code": "public method get method string name class param types boolean suppress security if suppress security return get any method name param types else return get method name param types\n", "comment": "get the method identified by a signature\n"}
{"id": "2028709", "raw_code": "  public Component followedBy(ComponentBinder binder){\n    return Monad.followedBy(this, binder);\n  }\n", "raw_comment": "  /**\n   * Create a staged component.\n   * On instantiation, it first creates the base object using this component,\n   * then the {@link jfun.yan.ComponentBinder} object is used\n   * to do certain side-effect to complete the work.\n   * The object created by this component is finally returned as the instance.\n   * <br>\n   * Bean component, for example, is an application of staged component.\n   * <br>\n   * The {@link jfun.yan.ComponentBinder} object also takes care of verification\n   * of the base component type. \n   * \n   * @param binder the ComponentBinder object to do the side effect.\n   * @return the new Component object.\n   */\n", "code": "public component followed by component binder binder return monad followed by this binder\n", "comment": "create a staged component\n"}
{"id": "2028710", "raw_code": "  protected Object getServiceKey(Service service){\n    return \"service.\" + service.getSimpleName();\n  }\n", "raw_comment": "  /**\n   * Get the key for caching a service.\n   * @param service the service.\n   * @return the key.\n   */\n", "code": "protected object get service key service service return service service get simple name\n", "comment": "get the key for caching a service\n"}
{"id": "2028714", "raw_code": "  public Method getMethod(String name, Class[] param_types){\n    return mtds.getMethod(new Sig(name, param_types));\n  }\n", "raw_comment": "  /**\n   * Get the public method identified by a signature.\n   * @param name the method name.\n   * @param param_types the formal parameter types.\n   * @return the Method object. or null if not found.\n   */\n", "code": "public method get method string name class param types return mtds get method new sig name param types\n", "comment": "get the public method identified by a signature\n"}
{"id": "2028727", "raw_code": "  public Component followedBy(Binder binder){\n    return Monad.followedBy(this, binder);\n  }\n", "raw_comment": "  /**\n   * Create a staged component.\n   * On instantiation, it first creates the base object using this component,\n   * then the {@link jfun.yan.Binder} object is used\n   * to do certain side-effect to complete the work.\n   * The object created by this component is finally returned as the instance.\n   * <br>\n   * Bean component, for example, is an application of staged component. \n   *\n   * @param binder the Binder object to do the side effect.\n   * @return the new Component object.\n   */\n", "code": "public component followed by binder binder return monad followed by this binder\n", "comment": "create a staged component\n"}
{"id": "2028749", "raw_code": "  public Component followedBy(Creator c2){\n    return Monad.followedBy(this, c2);\n  }\n", "raw_comment": "  /**\n   * Create a staged component.\n   * On instantiation, it first creates the base object using this component,\n   * then another Creator object is used\n   * to do certain side-effect to complete the work.\n   * The object created by this component is finally returned as the instance.\n   * <br>\n   * Bean component, for example, is an application of staged component. \n   * @param c2 the Component object to do the side-effect.\n   * @return the new Component object.\n   */\n", "code": "public component followed by creator c2 return monad followed by this c2\n", "comment": "create a staged component\n"}
{"id": "2028755", "raw_code": "    public Factory getServant(){\n        return servant;\n    }\n", "raw_comment": "    /**\n     * Gets the Factory that creates the servant object who backs this service.\n     * @return the Factory that creates the servant object.\n     */\n", "code": "public factory get servant return servant\n", "comment": "gets the factory that creates the servant object who backs this service\n"}
{"id": "2028760", "raw_code": "  public Field getField(String name, boolean suppress_security){\n    if(suppress_security)\n      return getAnyField(name);\n    else\n      return getField(name);\n  }\n", "raw_comment": "  /**\n   * Get the Field object identified by name.\n   * @param name the field name.\n   * @param suppress_security whether to look at non-public ones.\n   * @return the Field object. or null if not found.\n   */\n", "code": "public field get field string name boolean suppress security if suppress security return get any field name else return get field name\n", "comment": "get the field object identified by name\n"}
{"id": "2028765", "raw_code": "  public Component seq(Creator c2){\n    return Monad.seq(this, c2);\n  }\n", "raw_comment": "  /**\n   * Monadic 'sequence' operation.\n   * It sequentially execute this component and then another one\n   * and keep the result of the second component.\n   * @param c2 the next component.\n   * @return the new Component object.\n   */\n", "code": "public component seq creator c2 return monad seq this c2\n", "comment": "monadic sequence operation\n"}
{"id": "2028775", "raw_code": "  public Field getField(String name){\n    return flds.getField(name);\n  }\n", "raw_comment": "  /**\n   * Get the public Field object identified by name.\n   * @param name the field name.\n   * @return the Field object. or null if not found.\n   */\n", "code": "public field get field string name return flds get field name\n", "comment": "get the public field object identified by name\n"}
{"id": "2028780", "raw_code": "  public Component fromProperties(Object[] keys){\n    return Components.fromProperties(this, keys);\n  }\n", "raw_comment": "  /**\n   * Redirects resolution of arguments to properties.\n   * So that a parameter-based component (such as ctor or method)\n   * can be used as if it were a bean component,\n   * for which withProperty, withProperties can be used to customize.\n   * <br>\n   * It is useful when applying a parameter-based component to an algorithm\n   * that relies on property-based component.\n   * @param keys the property keys for parameters.\n   * The ordinal position of each key indicates the position of the parameter.\n   * @return the redirected Component object.\n   */  \n", "code": "public component from properties object keys return components from properties this keys\n", "comment": "redirects resolution of arguments to properties\n"}
{"id": "2028799", "raw_code": "  public Component fromArguments(Object[] keys){\n    return Components.fromArguments(this, keys);\n  }\n", "raw_comment": "  /**\n   * Redirects resolution of properties to arguments.\n   * So that a property-based component (such as bean)\n   * can be used as if it were a parameter-based on,\n   * for which withArgument, withArguments can be used to customize.\n   * <br>\n   * It is useful when applying a property-based component to an algorithm\n   * that relies on argument-based component.\n   * The factory() combinator, for example, relies on parameter-based component.\n   * @param keys the property keys to redirect.\n   * The ordinal position of each key indicates the position of the parameter.\n   * @return the redirected Component object.\n   */\n", "code": "public component from arguments object keys return components from arguments this keys\n", "comment": "redirects resolution of properties to arguments\n"}
{"id": "2028827", "raw_code": "  public Component seal(){\n    return Components.seal(this);\n  }\n", "raw_comment": "  /**\n   * Create a sealed component.\n   * A sealed component assumes responsibility to\n   * resolve its own dependencies. \n   * It does not attempt to look up the container\n   * to resolve any unresolved dependency.\n   * <br>\n   * seal can be used to disable auto-wiring at component level.\n   * @return the sealed Component object.\n   */\n", "code": "public component seal return components seal this\n", "comment": "create a sealed component\n"}
{"id": "2028830", "raw_code": "  public Component getServant(){\n    final Component cc = getComponent();\n    if(cc!=null) return cc;\n    if(this.implementationClass != null)\n      return Components.ctor(this.implementationClass);\n    if(this.serviceInterface != null)\n      return Components.ctor(this.serviceInterface);\n    throw raise(\n        \"at least one of \\\"component\\\", \\\"serviceClass\\\" or \\\"implementationClass\\\" has to be specified.\");  \n  }\n", "raw_comment": "  /**\n   * Get the Component for the actual servant.\n   */\n", "code": "public component get servant final component cc get component if cc null return cc if this implementation class null return components ctor this implementation class if this service interface null return components ctor this service interface throw raise at least one of component service class or implementation class has to be specified\n", "comment": "get the component for the actual servant\n"}
{"id": "2028854", "raw_code": "  public TypeFilteredPropertyPredicate addType(Class type){\n    try{\n      final BeanType btype = BeanType.instance(type);\n      final Set names = btype.getPropertyNames();\n      for(Iterator it=names.iterator();it.hasNext();){\n        final String key = (String)it.next();\n        final Method writer = btype.getWriter(key);\n        if(writer!=null){\n          addProperty(writer.getDeclaringClass(), key);\n        }\n      }\n    }\n    catch(IntrospectionException e){}\n    return this;\n  }\n", "raw_comment": "  /**\n   * Add property setters of an entire class to the filter list.\n   * @param type the type.\n   * @return this object.\n   */\n", "code": "public type filtered property predicate add type class type try final bean type btype bean type instance type final set names btype get property names for iterator it names iterator it has next final string key string it next final method writer btype get writer key if writer null add property writer get declaring class key catch introspection exception e return this\n", "comment": "add property setters of an entire class to the filter list\n"}
{"id": "2028855", "raw_code": "  public TypeFilteredPropertyPredicate addProperty(Class type, String key){\n    final Object slot = filter_types.get(key);\n    if(slot==null){\n      filter_types.put(key, type);\n    }\n    else{\n      final ArrayList list = toArrayList(slot);\n      list.add(type);\n      filter_types.put(key, list);\n    }\n    return this;\n  }\n", "raw_comment": "  /**\n   * Add a single property of a type to the filter list.\n   * @param type the declaring class.\n   * @param key the property key.\n   * @return this object.\n   */\n", "code": "public type filtered property predicate add property class type string key final object slot filter types get key if slot null filter types put key type else final array list list to array list slot list add type filter types put key list return this\n", "comment": "add a single property of a type to the filter list\n"}
{"id": "2028857", "raw_code": "  public Class getType() {\n    return componentType;\n  }\n", "raw_comment": "  /**\n   * Get the component type.\n   */\n", "code": "public class get type return component type\n", "comment": "get the component type\n"}
{"id": "2028878", "raw_code": "  public Class getType1() {\n    return t1;\n  }\n", "raw_comment": "  /**\n   * Gets the type of the first candidate component.s\n   * @return the component type.\n   */\n", "code": "public class get type1 return t1\n", "comment": "gets the type of the first candidate component\n"}
{"id": "2028880", "raw_code": "  public Class getType2() {\n    return t2;\n  }\n", "raw_comment": "  /**\n   * Gets the type of the second candidate component.s\n   * @return the component type.\n   */\n", "code": "public class get type2 return t2\n", "comment": "gets the type of the second candidate component\n"}
{"id": "2028927", "raw_code": "  public Function getFunction() {\n    return f;\n  }\n", "raw_comment": "  /**\n   * Gets the function object.\n   * @return the function object.\n   */\n", "code": "public function get function return f\n", "comment": "gets the function object\n"}
{"id": "2028930", "raw_code": "  public int getOrdinalPosition() {\n    return pos;\n  }\n", "raw_comment": "  /**\n   * Gets the ordinal position of the parameter.\n   * @return the ordinal position.\n   */\n", "code": "public int get ordinal position return pos\n", "comment": "gets the ordinal position of the parameter\n"}
{"id": "2028948", "raw_code": "  public Object getArrayObject() {\n    return arr;\n  }\n", "raw_comment": "  /**\n   * Get the array object that stores the elements.\n   */\n", "code": "public object get array object return arr\n", "comment": "get the array object that stores the elements\n"}
{"id": "2028949", "raw_code": "  public Component method(final java.lang.reflect.Method mtd){\n    return Components.bindMethod(this, mtd);\n  }\n", "raw_comment": "  /**\n   * Creates a Component that will call a certain method\n   * against the instance created by this Component.\n   * The return value of the method is used as the result of the\n   * created Component.\n   * @param mtd the method to call against the instance.\n   * @return the new Component object.\n   */\n", "code": "public component method final java lang reflect method mtd return components bind method this mtd\n", "comment": "creates a component that will call a certain method\n"}
{"id": "2028951", "raw_code": "  public int getBegin() {\n    return begin;\n  }\n", "raw_comment": "  /**\n   * Get the begin index.\n   */\n", "code": "public int get begin return begin\n", "comment": "get the begin index\n"}
{"id": "2028994", "raw_code": "  public Set getSet() {\n    return set;\n  }\n", "raw_comment": "  /**\n   * Get the Set object storing the component instances.\n   */\n", "code": "public set get set return set\n", "comment": "get the set object storing the component instances\n"}
{"id": "2029019", "raw_code": "  public Component field(final java.lang.reflect.Field fld){\n    return Components.bindField(this, fld);\n  }\n", "raw_comment": "  /**\n   * Creates a Component that will read a certain field\n   * from the instance created by this Component.\n   * @param fld the field to read.\n   * @return the new Component object.\n   */\n", "code": "public component field final java lang reflect field fld return components bind field this fld\n", "comment": "creates a component that will read a certain field\n"}
{"id": "2029047", "raw_code": "  public Component repeat(int times){\n    return Components.repeat(this, times);\n  }\n", "raw_comment": "  /**\n   * Create a new Component that repeatedly call this Component for\n   * certain amount of times.\n   * @param times the number of times to repeat.\n   * @return the new Component object.\n   */\n", "code": "public component repeat int times return components repeat this times\n", "comment": "create a new component that repeatedly call this component for\n"}
{"id": "2029048", "raw_code": "  public Component synchronize(){\n    return Components.synchronizedComponent(this);\n  }\n", "raw_comment": "  /**\n   * Create a Component that the \"create()\" method is put in a \n   * synchronized block to ensure thread safety.\n   * @return the Component object that is \"synchronized\".\n   */\n", "code": "public component synchronize return components synchronized component this\n", "comment": "create a component that the create method is put in a\n"}
{"id": "2029089", "raw_code": "  public void contextInitialized(ServletContextEvent event) {\n    this.yanLoader = createYanLoader();\n    this.yanLoader.initContainer(event.getServletContext());\n  }\n", "raw_comment": "  /**\n   * Initialize the root web application context.\n   */\n", "code": "public void context initialized servlet context event event this yan loader create yan loader this yan loader init container event get servlet context\n", "comment": "initialize the root web application context\n"}
{"id": "2029091", "raw_code": "  protected YanLoader createYanLoader() {\n    return new YanLoader();\n  }\n", "raw_comment": "  /**\n   * Create the YanLoader to use. Can be overridden in subclasses.\n   * @return the new YanLoader\n   */\n", "code": "protected yan loader create yan loader return new yan loader\n", "comment": "create the yan loader to use\n"}
{"id": "2029092", "raw_code": "  public void init() throws ServletException {\n    this.YanLoader = createYanLoader();\n    this.YanLoader.initContainer(getServletContext());\n  }\n", "raw_comment": "  /**\n   * Initialize the root web application context.\n   */\n", "code": "public void init throws servlet exception this yan loader create yan loader this yan loader init container get servlet context\n", "comment": "initialize the root web application context\n"}
{"id": "2029093", "raw_code": "  public YanLoader getYanLoader() {\n    return yanLoader;\n  }\n", "raw_comment": "  /**\n   * Return the YanLoader used by this listener.\n   */\n", "code": "public yan loader get yan loader return yan loader\n", "comment": "return the yan loader used by this listener\n"}
{"id": "2029096", "raw_code": "  public void contextDestroyed(ServletContextEvent event){\n    if (this.yanLoader != null) {\n      this.yanLoader.destroy(event.getServletContext());\n    }\n  }\n", "raw_comment": "  /**\n   * Close the root web application context.\n   */\n", "code": "public void context destroyed servlet context event event if this yan loader null this yan loader destroy event get servlet context\n", "comment": "close the root web application context\n"}
{"id": "2029099", "raw_code": "  public void destroy() {\n    if (this.YanLoader != null) {\n      this.YanLoader.destroy(getServletContext());\n    }\n  }\n", "raw_comment": "  /**\n   * Close the root web application context.\n   */\n", "code": "public void destroy if this yan loader null this yan loader destroy get servlet context\n", "comment": "close the root web application context\n"}
{"id": "2029101", "raw_code": "  public void service(HttpServletRequest request, HttpServletResponse response) throws IOException {\n    getServletContext().log(\n        \"Attempt to call service method on YanLoaderServlet as [\" +\n        request.getRequestURI() + \"] was ignored\");\n    response.sendError(HttpServletResponse.SC_BAD_REQUEST);\n  }\n", "raw_comment": "  /**\n   * This should never even be called since no mapping to this servlet should\n   * ever be created in web.xml. That's why a correctly invoked Servlet 2.3\n   * listener is much more appropriate for initialization work ;-)\n   */\n", "code": "public void service http servlet request request http servlet response response throws ioexception get servlet context log attempt to call service method on yan loader servlet as request get request uri was ignored response send error http servlet response sc bad request\n", "comment": "this should never even be called since no mapping to this servlet should\n"}
{"id": "2029119", "raw_code": "  public ServletContext getServletContext(){\n    return ctxt;\n  }\n", "raw_comment": "  /**\n   * To get the ServletContext object.\n   */\n", "code": "public servlet context get servlet context return ctxt\n", "comment": "to get the servlet context object\n"}
{"id": "2029121", "raw_code": "  public ResourceLoader getResourceLoader(){\n    return loader;\n  }\n", "raw_comment": "  /**\n   * To get the ResourceLoader object.\n   */\n", "code": "public resource loader get resource loader return loader\n", "comment": "to get the resource loader object\n"}
{"id": "2029130", "raw_code": "    protected Object getMutex(){\n      return getSession();\n    }\n", "raw_comment": "    /**\n     * This is not guaranteed to be safe. Better than nothing.\n     */\n", "code": "protected object get mutex return get session\n", "comment": "this is not guaranteed to be safe\n"}
{"id": "2029131", "raw_code": "    public Procedure getProcedure() {\n      return proc;\n    }\n", "raw_comment": "    /**\n     * To get the procedure to invoke.\n     */\n", "code": "public procedure get procedure return proc\n", "comment": "to get the procedure to invoke\n"}
{"id": "2029143", "raw_code": "  public Container initContainer(ServletContext ctxt){\n    return initContainer(\n        ClassLoaderUtils.guessClassLoader(getClass().getClassLoader()),\n        ctxt);\n  }\n", "raw_comment": "  /**\n   * Initialize this object by instantiating container and life cycle manager.\n   * Relevant servlet context parameters are read.\n   * @param ctxt the servlet context object.\n   * @return the Container object instantiated.\n   */\n", "code": "public container init container servlet context ctxt return init container class loader utils guess class loader get class get class loader ctxt\n", "comment": "initialize this object by instantiating container and life cycle manager\n"}
{"id": "2029144", "raw_code": "  public boolean isEmpty(){\n    return entries.isEmpty();\n  }\n", "raw_comment": "  /**\n   * Is any life-cycle phase defined at all?\n   */\n", "code": "public boolean is empty return entries is empty\n", "comment": "is any life cycle phase defined at all\n"}
{"id": "2029145", "raw_code": "  public ExceptionHandler getExceptionHandler() {\n    return handler;\n  }\n", "raw_comment": "  /**\n   * To get the exception handler of this phase.\n   */\n", "code": "public exception handler get exception handler return handler\n", "comment": "to get the exception handler of this phase\n"}
{"id": "2029147", "raw_code": "  public Object getPhaseKey() {\n    return key;\n  }\n", "raw_comment": "  /**\n   * To get the key of this phase.\n   */\n", "code": "public object get phase key return key\n", "comment": "to get the key of this phase\n"}
{"id": "2029153", "raw_code": "  public void put(Object key, Procedure proc, boolean reentrant){\n    entries.put(key, new Entry(proc, reentrant));\n  }\n", "raw_comment": "  /**\n   * To add a phase.\n   * @param key the key of the phase.\n   * @param proc the procedure to invoke for the phase.\n   * @param reentrant is the procedure re-entrant?\n   */\n", "code": "public void put object key procedure proc boolean reentrant entries put key new entry proc reentrant\n", "comment": "to add a phase\n"}
{"id": "2029156", "raw_code": "  public void remove(Object key){\n    entries.remove(key);\n  }\n", "raw_comment": "  /**\n   * To remove a phase definition.\n   * @param key the key of the phase.\n   */\n", "code": "public void remove object key entries remove key\n", "comment": "to remove a phase definition\n"}
{"id": "2029158", "raw_code": "  public boolean containsPhase(Object key){\n    return procs.containsKey(key);\n  }\n", "raw_comment": "  /**\n   * To determine if a certain phase exists in the life-cycle. \n   * @param key the key of the phase.\n   * @return true if existent.\n   */\n", "code": "public boolean contains phase object key return procs contains key key\n", "comment": "to determine if a certain phase exists in the life cycle\n"}
{"id": "2029160", "raw_code": "  public Entry get(Object key){\n    return (Entry)entries.get(key);\n  }\n", "raw_comment": "  /**\n   * To get a phase entry.\n   * @param key the key of the phase.\n   * @return the Entry object.\n   */\n", "code": "public entry get object key return entry entries get key\n", "comment": "to get a phase entry\n"}
{"id": "2029164", "raw_code": "  public Set keys(){\n    return entries.keySet();\n  }\n", "raw_comment": "  /**\n   * To get all the phase keys.\n   */\n", "code": "public set keys return entries key set\n", "comment": "to get all the phase keys\n"}
{"id": "2029168", "raw_code": "  public Collection entries(){\n    return Collections.unmodifiableCollection(entries.values());\n  }\n", "raw_comment": "  /**\n   * To get all the entries.\n   */\n", "code": "public collection entries return collections unmodifiable collection entries values\n", "comment": "to get all the entries\n"}
{"id": "2029180", "raw_code": "  public void addLiveObject(LiveObject lo){\n    history.add(lo);\n  }\n", "raw_comment": "  /**\n   * Add a LiveObject into the lifecycle manager.\n   * @param lo the LifeObject instance.\n   */\n", "code": "public void add live object live object lo history add lo\n", "comment": "add a live object into the lifecycle manager\n"}
{"id": "2029183", "raw_code": "  public Component withLifecycle(Component c, Life life){\n    return c.mutate(new InstanceTracker(life, history));\n  }\n", "raw_comment": "  /**\n   * To create a Component object that enables life-cycle support.\n   * @param c the Component to enable life-cycle support.\n   * @param life the Life object.\n   * @return a new Component object that supports life-cycle. \n   */\n", "code": "public component with lifecycle component c life life return c mutate new instance tracker life history\n", "comment": "to create a component object that enables life cycle support\n"}
{"id": "2029184", "raw_code": "  public Set getManagedInstances(){\n    return history;\n  }\n", "raw_comment": "  /**\n   * To get the managed {@link LiveObject} instances.\n   */\n", "code": "public set get managed instances return history\n", "comment": "to get the managed\n"}
{"id": "2029193", "raw_code": "  public void push(Object obj){\n    trace.push(obj);\n  }\n", "raw_comment": "  /**\n   * Pushes a resolution frame to the exception.\n   * @param obj the frame.\n   */\n", "code": "public void push object obj trace push obj\n", "comment": "pushes a resolution frame to the exception\n"}
{"id": "2029195", "raw_code": "  public Stack getResolutionTrace(){\n    return trace;\n  }\n", "raw_comment": "  /**\n   * Get the resolution trace.\n   * @return the resolution trace.\n   */\n", "code": "public stack get resolution trace return trace\n", "comment": "get the resolution trace\n"}
{"id": "2029197", "raw_code": "  public void printResolutionTrace(PrintStream out){\n    printResolutionTrace(new java.io.PrintWriter(out, true));\n  }\n", "raw_comment": "  /**\n   * Print the resolution trace.\n   * @param out the output stream.\n   */\n", "code": "public void print resolution trace print stream out print resolution trace new java io print writer out true\n", "comment": "print the resolution trace\n"}
{"id": "2029199", "raw_code": "  public void printResolutionTrace(java.io.PrintWriter out){\n    final int size = trace.size();\n    for(int i=0; i<size; i++){\n      out.println(trace.get(i));\n    }\n  }\n", "raw_comment": "  /**\n   * Print the resultion trace.\n   * @param out the output writer.\n   */\n", "code": "public void print resolution trace java io print writer out final int size trace size for int i 0 i size i out println trace get i\n", "comment": "print the resultion trace\n"}
{"id": "2029203", "raw_code": "  public void printResolutionTrace(){\n    printResolutionTrace(System.err);\n  }\n", "raw_comment": "  /**\n   * Prints the resolution trace to the standard error output.\n   */\n", "code": "public void print resolution trace print resolution trace system err\n", "comment": "prints the resolution trace to the standard error output\n"}
{"id": "2029213", "raw_code": "  public void clearResolutionTrace(){\n    trace.clear();\n  }\n", "raw_comment": "  /**\n   * Clear the resolution trace.\n   */\n", "code": "public void clear resolution trace trace clear\n", "comment": "clear the resolution trace\n"}
{"id": "2029250", "raw_code": "    public DefaultLifecycle opener(Procedure proc, boolean reentrant){\n      desc.opener(this, proc, reentrant);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"open\" phase.\n     * @param proc the phase procedure.\n     * @param reentrant whether the procedure is re-entrant.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle opener procedure proc boolean reentrant desc opener this proc reentrant return this\n", "comment": "to register the open phase\n"}
{"id": "2029258", "raw_code": "    public DefaultLifecycle closer(Procedure proc, boolean reentrant){\n      desc.closer(this, proc, reentrant);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"close\" phase.\n     * @param proc the phase procedure.\n     * @param reentrant whether the procedure is re-entrant.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle closer procedure proc boolean reentrant desc closer this proc reentrant return this\n", "comment": "to register the close phase\n"}
{"id": "2029264", "raw_code": "    public DefaultLifecycle initializer(Procedure proc, boolean reentrant){\n      desc.initializer(this, proc, reentrant);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"init\" phase.\n     * @param proc the phase procedure.\n     * @param reentrant whether the procedure is re-entrant.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle initializer procedure proc boolean reentrant desc initializer this proc reentrant return this\n", "comment": "to register the init phase\n"}
{"id": "2029267", "raw_code": "  public DefaultLifecycleDescriptor opener(Lifecycle lc, Procedure proc, boolean reentrant){\n    return addLifeProc(lc, opener, proc, reentrant);\n  }\n", "raw_comment": "  /**\n   * To register the \"open\" phase into a Lifecycle object.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @param reentrant whether the phase is reentrant.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor opener lifecycle lc procedure proc boolean reentrant return add life proc lc opener proc reentrant\n", "comment": "to register the open phase into a lifecycle object\n"}
{"id": "2029270", "raw_code": "    public DefaultLifecycle disposer(Procedure proc, boolean reentrant){\n      desc.disposer(this, proc, reentrant);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"dispose\" phase.\n     * @param proc the phase procedure.\n     * @param reentrant whether the procedure is re-entrant.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle disposer procedure proc boolean reentrant desc disposer this proc reentrant return this\n", "comment": "to register the dispose phase\n"}
{"id": "2029275", "raw_code": "  public DefaultLifecycleDescriptor closer(Lifecycle lc, Procedure proc, boolean reentrant){\n    return addLifeProc(lc, closer, proc, reentrant);\n  }\n", "raw_comment": "  /**\n   * To register the \"close\" phase into a Lifecycle object.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @param reentrant whether the phase is reentrant.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor closer lifecycle lc procedure proc boolean reentrant return add life proc lc closer proc reentrant\n", "comment": "to register the close phase into a lifecycle object\n"}
{"id": "2029277", "raw_code": "    public DefaultLifecycle verifier(Procedure proc, boolean reentrant){\n      desc.verifier(this, proc, reentrant);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"verify\" phase.\n     * @param proc the phase procedure.\n     * @param reentrant whether the procedure is re-entrant.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle verifier procedure proc boolean reentrant desc verifier this proc reentrant return this\n", "comment": "to register the verify phase\n"}
{"id": "2029283", "raw_code": "  public DefaultLifecycleDescriptor initializer(Lifecycle lc, Procedure proc, boolean reentrant){\n    return addLifeProc(lc, initializer, proc, reentrant);\n  }\n", "raw_comment": "  /**\n   * To register the \"init\" phase into a Lifecycle object.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @param reentrant whether the phase is reentrant.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor initializer lifecycle lc procedure proc boolean reentrant return add life proc lc initializer proc reentrant\n", "comment": "to register the init phase into a lifecycle object\n"}
{"id": "2029284", "raw_code": "    public DefaultLifecycle starter(Procedure proc, boolean reentrant){\n      desc.starter(this, proc, reentrant);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"start\" phase.\n     * @param proc the phase procedure.\n     * @param reentrant whether the procedure is re-entrant.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle starter procedure proc boolean reentrant desc starter this proc reentrant return this\n", "comment": "to register the start phase\n"}
{"id": "2029290", "raw_code": "    public DefaultLifecycle stopper(Procedure proc, boolean reentrant){\n      desc.stopper(this, proc, reentrant);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"stop\" phase.\n     * @param proc the phase procedure.\n     * @param reentrant whether the procedure is re-entrant.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle stopper procedure proc boolean reentrant desc stopper this proc reentrant return this\n", "comment": "to register the stop phase\n"}
{"id": "2029291", "raw_code": "  public DefaultLifecycleDescriptor disposer(Lifecycle lc, Procedure proc, boolean reentrant){\n    return addLifeProc(lc, disposer, proc, reentrant);\n  }\n", "raw_comment": "  /**\n   * To register the \"dispose\" phase into a Lifecycle object.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @param reentrant whether the phase is reentrant.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor disposer lifecycle lc procedure proc boolean reentrant return add life proc lc disposer proc reentrant\n", "comment": "to register the dispose phase into a lifecycle object\n"}
{"id": "2029294", "raw_code": "    public DefaultLifecycle opener(Procedure proc){\n      desc.opener(this, proc);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"open\" phase as re-entrant.\n     * @param proc the phase procedure.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle opener procedure proc desc opener this proc return this\n", "comment": "to register the open phase as re entrant\n"}
{"id": "2029295", "raw_code": "  public DefaultLifecycleDescriptor verifier(Lifecycle lc, Procedure proc, boolean reentrant){\n    return addLifeProc(lc, verifier, proc, reentrant);\n  }\n", "raw_comment": "  /**\n   * To register the \"verify\" phase into a Lifecycle object.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @param reentrant whether the phase is reentrant.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor verifier lifecycle lc procedure proc boolean reentrant return add life proc lc verifier proc reentrant\n", "comment": "to register the verify phase into a lifecycle object\n"}
{"id": "2029296", "raw_code": "    public DefaultLifecycle closer(Procedure proc){\n      desc.closer(this, proc);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"close\" phase as re-entrant.\n     * @param proc the phase procedure.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle closer procedure proc desc closer this proc return this\n", "comment": "to register the close phase as re entrant\n"}
{"id": "2029298", "raw_code": "  public DefaultLifecycleDescriptor starter(Lifecycle lc, Procedure proc, boolean reentrant){\n    return addLifeProc(lc, starter, proc, reentrant);\n  }\n", "raw_comment": "  /**\n   * To register the \"start\" phase into a Lifecycle object.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @param reentrant whether the phase is reentrant.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor starter lifecycle lc procedure proc boolean reentrant return add life proc lc starter proc reentrant\n", "comment": "to register the start phase into a lifecycle object\n"}
{"id": "2029299", "raw_code": "    public DefaultLifecycle initializer(Procedure proc){\n      desc.initializer(this, proc);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"init\" phase as non-reentrant.\n     * @param proc the phase procedure.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle initializer procedure proc desc initializer this proc return this\n", "comment": "to register the init phase as non reentrant\n"}
{"id": "2029301", "raw_code": "  public DefaultLifecycleDescriptor stopper(Lifecycle lc, Procedure proc, boolean reentrant){\n    return addLifeProc(lc, stopper, proc, reentrant);\n  }\n", "raw_comment": "  /**\n   * To register the \"stop\" phase into a Lifecycle object.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @param reentrant whether the phase is reentrant.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor stopper lifecycle lc procedure proc boolean reentrant return add life proc lc stopper proc reentrant\n", "comment": "to register the stop phase into a lifecycle object\n"}
{"id": "2029302", "raw_code": "    public DefaultLifecycle disposer(Procedure proc){\n      desc.disposer(this, proc);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"dispose\" phase as non-reentrant.\n     * @param proc the phase procedure.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle disposer procedure proc desc disposer this proc return this\n", "comment": "to register the dispose phase as non reentrant\n"}
{"id": "2029304", "raw_code": "    public DefaultLifecycle verifier(Procedure proc){\n      desc.verifier(this, proc);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"verify\" phase as reentrant.\n     * @param proc the phase procedure.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle verifier procedure proc desc verifier this proc return this\n", "comment": "to register the verify phase as reentrant\n"}
{"id": "2029305", "raw_code": "  public DefaultLifecycleDescriptor opener(Lifecycle lc, Procedure proc){\n    return opener(lc, proc, true);\n  }\n", "raw_comment": "  /**\n   * To register the \"open\" phase into a Lifecycle object.<br>\n   * The phase allows re-entry.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor opener lifecycle lc procedure proc return opener lc proc true\n", "comment": "to register the open phase into a lifecycle object\n"}
{"id": "2029307", "raw_code": "    public DefaultLifecycle starter(Procedure proc){\n      desc.starter(this, proc);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"start\" phase as re-entrant.\n     * @param proc the phase procedure.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle starter procedure proc desc starter this proc return this\n", "comment": "to register the start phase as re entrant\n"}
{"id": "2029308", "raw_code": "  public DefaultLifecycleDescriptor closer(Lifecycle lc, Procedure proc){\n    return closer(lc, proc, true);\n  }\n", "raw_comment": "  /**\n   * To register the \"close\" phase into a Lifecycle object.<br>\n   * The phase allows re-entry.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor closer lifecycle lc procedure proc return closer lc proc true\n", "comment": "to register the close phase into a lifecycle object\n"}
{"id": "2029310", "raw_code": "    public DefaultLifecycle stopper(Procedure proc){\n      desc.stopper(this, proc);\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"stop\" phase as re-entrant.\n     * @param proc the phase procedure.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle stopper procedure proc desc stopper this proc return this\n", "comment": "to register the stop phase as re entrant\n"}
{"id": "2029311", "raw_code": "  public DefaultLifecycleDescriptor initializer(Lifecycle lc, Procedure proc){\n    return initializer(lc, proc, false);\n  }\n", "raw_comment": "  /**\n   * To register the \"init\" phase into a Lifecycle object.<br>\n   * The phase ignores re-entry.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor initializer lifecycle lc procedure proc return initializer lc proc false\n", "comment": "to register the init phase into a lifecycle object\n"}
{"id": "2029312", "raw_code": "  public void addBeanPostProcessor(String name, Component bpp){\n    names.add(name);\n    queue.add(bpp);\n  }\n", "raw_comment": "  /**\n   * Add a Component that instantiates BeanPostProcessor.\n   * @param name the name of the component.\n   * @param bpp the component.\n   */\n", "code": "public void add bean post processor string name component bpp names add name queue add bpp\n", "comment": "add a component that instantiates bean post processor\n"}
{"id": "2029313", "raw_code": "    public DefaultLifecycle opener(String method_name){\n      opener(Procedures.method(method_name));\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"open\" phase as re-entrant.\n     * @param method_name the name of the parameter-less method.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle opener string method name opener procedures method method name return this\n", "comment": "to register the open phase as re entrant\n"}
{"id": "2029315", "raw_code": "  public String getName(int i){\n    return (String)names.get(i);\n  }\n", "raw_comment": "  /**\n   * Get the name of a BeanPostProcessor component.\n   * @param i the ordinal position of the component.\n   * @return the name.\n   */\n", "code": "public string get name int i return string names get i\n", "comment": "get the name of a bean post processor component\n"}
{"id": "2029316", "raw_code": "  public Component getBeanPostProcessor(int i){\n    return (Component)queue.get(i);\n  }\n", "raw_comment": "  /**\n   * Get a BeanPostProcessor component.\n   * @param i the ordinal position of the component.\n   * @return the name.\n   */\n", "code": "public component get bean post processor int i return component queue get i\n", "comment": "get a bean post processor component\n"}
{"id": "2029317", "raw_code": "  public int size(){\n    return names.size();\n  }\n", "raw_comment": "  /**\n   * To get the number of BeanPostProcessor components stored in the queue.\n   */\n", "code": "public int size return names size\n", "comment": "to get the number of bean post processor components stored in the queue\n"}
{"id": "2029319", "raw_code": "    public DefaultLifecycle closer(String method_name){\n      closer(Procedures.method(method_name));\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"close\" phase as re-entrant.\n     * @param method_name the name of the parameter-less method.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle closer string method name closer procedures method method name return this\n", "comment": "to register the close phase as re entrant\n"}
{"id": "2029320", "raw_code": "  public DefaultLifecycleDescriptor disposer(Lifecycle lc, Procedure proc){\n    return disposer(lc, proc, false);\n  }\n", "raw_comment": "  /**\n   * To register the \"dispose\" phase into a Lifecycle object.<br>\n   * The phase ignores re-entry.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor disposer lifecycle lc procedure proc return disposer lc proc false\n", "comment": "to register the dispose phase into a lifecycle object\n"}
{"id": "2029322", "raw_code": "    public DefaultLifecycle initializer(String method_name){\n      initializer(Procedures.method(method_name));\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"init\" phase as non-reentrant.\n     * @param method_name the name of the parameter-less method.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle initializer string method name initializer procedures method method name return this\n", "comment": "to register the init phase as non reentrant\n"}
{"id": "2029323", "raw_code": "  public DefaultLifecycleDescriptor verifier(Lifecycle lc, Procedure proc){\n    return verifier(lc, proc, true);\n  }\n", "raw_comment": "  /**\n   * To register the \"verify\" phase into a Lifecycle object.<br>\n   * The phase allows re-entry.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor verifier lifecycle lc procedure proc return verifier lc proc true\n", "comment": "to register the verify phase into a lifecycle object\n"}
{"id": "2029325", "raw_code": "    public DefaultLifecycle disposer(String method_name){\n      disposer(Procedures.method(method_name));\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"dispose\" phase as non-reentrant.\n     * @param method_name the name of the parameter-less method.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle disposer string method name disposer procedures method method name return this\n", "comment": "to register the dispose phase as non reentrant\n"}
{"id": "2029328", "raw_code": "  public DefaultLifecycleDescriptor starter(Lifecycle lc, Procedure proc){\n    return starter(lc, proc, true);\n  }\n", "raw_comment": "  /**\n   * To register the \"start\" phase into a Lifecycle object.<br>\n   * The phase allows re-entry.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor starter lifecycle lc procedure proc return starter lc proc true\n", "comment": "to register the start phase into a lifecycle object\n"}
{"id": "2029329", "raw_code": "  public ApplicationContext getApplicationContext(){\n    return actxt;\n  }\n", "raw_comment": "  /**\n   * Get the ApplicationContext object.\n   */\n", "code": "public application context get application context return actxt\n", "comment": "get the application context object\n"}
{"id": "2029330", "raw_code": "    public DefaultLifecycle verifier(String method_name){\n      verifier(Procedures.method(method_name));\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"verify\" phase as reentrant.\n     * @param method_name the name of the parameter-less method.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle verifier string method name verifier procedures method method name return this\n", "comment": "to register the verify phase as reentrant\n"}
{"id": "2029331", "raw_code": "  public void manageDisposableBean(DisposableBean db){\n    bean_lifecycle.manageInstance(new BeanDisposer(db));\n  }\n", "raw_comment": "  /**\n   * Report an existence of a DisposableBean object.\n   * @param db the DisposableBean object.\n   */\n", "code": "public void manage disposable bean disposable bean db bean lifecycle manage instance new bean disposer db\n", "comment": "report an existence of a disposable bean object\n"}
{"id": "2029333", "raw_code": "  public void addBeanPostProcessor(String key, Class type, Component bpp){\n    if(DestructionAwareBeanPostProcessor.class.isAssignableFrom(type)){\n      destructions.addBeanPostProcessor(key, bpp);\n    }\n    if(BeanPostProcessor.class.isAssignableFrom(type)){\n      processors.addBeanPostProcessor(key, bpp);\n    }\n  }\n", "raw_comment": "  /**\n   * Report an existence of a Component that instantiates BeanPostProcessor.\n   * @param key the key of the component.\n   * @param type the type of the component.\n   * @param bpp the component that instantiates BeanPostProcessor.\n   */\n", "code": "public void add bean post processor string key class type component bpp if destruction aware bean post processor class is assignable from type destructions add bean post processor key bpp if bean post processor class is assignable from type processors add bean post processor key bpp\n", "comment": "report an existence of a component that instantiates bean post processor\n"}
{"id": "2029334", "raw_code": "  public DefaultLifecycleDescriptor stopper(Lifecycle lc, Procedure proc){\n    return stopper(lc, proc, true);\n  }\n", "raw_comment": "  /**\n   * To register the \"stop\" phase into a Lifecycle object.<br>\n   * The phase allows re-entry.\n   * @param lc the Lifecycle object.\n   * @param proc the Procedure for the phase.\n   * @return this LifecycleDescriptor object itself.\n   */\n", "code": "public default lifecycle descriptor stopper lifecycle lc procedure proc return stopper lc proc true\n", "comment": "to register the stop phase into a lifecycle object\n"}
{"id": "2029335", "raw_code": "    public DefaultLifecycle starter(String method_name){\n      starter(Procedures.method(method_name));\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"start\" phase as re-entrant.\n     * @param method_name the name of the parameter-less method.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle starter string method name starter procedures method method name return this\n", "comment": "to register the start phase as re entrant\n"}
{"id": "2029336", "raw_code": "  public BeanPostProcessorQueue getProcessorQueue(){\n    return processors;\n  }\n", "raw_comment": "  /**\n   * Get all the BeanPostProcessor components.\n   */\n", "code": "public bean post processor queue get processor queue return processors\n", "comment": "get all the bean post processor components\n"}
{"id": "2029337", "raw_code": "  public BeanPostProcessorQueue getDestructionAwares(){\n    return destructions;\n  }\n", "raw_comment": "  /**\n   * Get all the DestructionAwareBeanPostProcessor components.\n   */\n", "code": "public bean post processor queue get destruction awares return destructions\n", "comment": "get all the destruction aware bean post processor components\n"}
{"id": "2029339", "raw_code": "    public DefaultLifecycle stopper(String method_name){\n      stopper(Procedures.method(method_name));\n      return this;\n    }\n", "raw_comment": "    /**\n     * To register the \"stop\" phase as re-entrant.\n     * @param method_name the name of the parameter-less method.\n     * @return this DefaultLifecycle object itself.\n     */\n", "code": "public default lifecycle stopper string method name stopper procedures method method name return this\n", "comment": "to register the stop phase as re entrant\n"}
{"id": "2029348", "raw_code": "    public Component manage(Component c){\n      if(this.isEmpty()) return c;\n      return withLifecycle(c, this);\n    }\n", "raw_comment": "    /**\n     * To create a Component with the current lifecycle.\n     * @param c the Component to be managed by the lifecycle.\n     * @return the new Component object with lifecycle management.\n     */\n", "code": "public component manage component c if this is empty return c return with lifecycle c this\n", "comment": "to create a component with the current lifecycle\n"}
{"id": "2029353", "raw_code": "  public Phase getCloser() {\n    return closer;\n  }\n", "raw_comment": "  /**\n   * To get the \"closer\" phase.\n   */\n", "code": "public phase get closer return closer\n", "comment": "to get the closer phase\n"}
{"id": "2029360", "raw_code": "    public void manageInstance(Object obj){\n      if(this.isEmpty()) return;\n      addLiveObject(bear(obj));\n    }\n", "raw_comment": "    /**\n     * Manage an instance's life. \n     * @param obj the instance.\n     */\n", "code": "public void manage instance object obj if this is empty return add live object bear obj\n", "comment": "manage an instances life\n"}
{"id": "2029370", "raw_code": "  public void setCloser(Phase closer) {\n    this.closer = closer;\n  }\n", "raw_comment": "  /**\n   * To set the \"close\" phase.\n   * @param closer the phase.\n   */\n", "code": "public void set closer phase closer this closer closer\n", "comment": "to set the close phase\n"}
{"id": "2029388", "raw_code": "  public Phase getDisposer() {\n    return disposer;\n  }\n", "raw_comment": "  /**\n   * To get the \"disposer\" phase.\n   */\n", "code": "public phase get disposer return disposer\n", "comment": "to get the disposer phase\n"}
{"id": "2029399", "raw_code": "  protected Component getMandatory(){\n    checkMandatory(\"component\", cc);\n    return cc;\n  }\n", "raw_comment": "  /**\n   * Get the Component object.\n   * Exception is thrown if it has not been set yet.\n   */\n", "code": "protected component get mandatory check mandatory component cc return cc\n", "comment": "get the component object\n"}
{"id": "2029406", "raw_code": "  public PropertyBinder getPropertyAutowireMode() {\n    final PropertyBinder mode = super.getPropertyAutowireMode();\n    if(mode==null) return null;\n    return SpringUtils.getAutowireWithoutAwareMarkerInterfaces(mode);\n  }\n", "raw_comment": "  /** \n   * Decorate the autowire mode by filtering out setters defined\n   * in the Spring XXXAware marker interfaces.\n   */\n", "code": "public property binder get property autowire mode final property binder mode super get property autowire mode if mode null return null return spring utils get autowire without aware marker interfaces mode\n", "comment": "decorate the autowire mode by filtering out setters defined\n"}
{"id": "2029407", "raw_code": "  public void setDisposer(Phase disposer) {\n    this.disposer = disposer;\n  }\n", "raw_comment": "  /**\n   * To set the \"dispose\" phase.\n   * @param disposer the phase.\n   */\n", "code": "public void set disposer phase disposer this disposer disposer\n", "comment": "to set the dispose phase\n"}
{"id": "2029409", "raw_code": "  protected void delegateTo(Component cc){\n    this.cc = cc;\n  }\n", "raw_comment": "  /**\n   * Subclass override this method to wrap around the delegate target.\n   * @param cc the delegate target.\n   */\n", "code": "protected void delegate to component cc this cc cc\n", "comment": "subclass override this method to wrap around the delegate target\n"}
{"id": "2029421", "raw_code": "  public boolean isVal1Set() {\n    return set1;\n  }\n", "raw_comment": "  /**\n   * Is the val1 attribute set?\n   */\n", "code": "public boolean is val1 set return set1\n", "comment": "is the val1 attribute set\n"}
{"id": "2029427", "raw_code": "  public boolean isVal2Set() {\n    return set2;\n  }\n", "raw_comment": "  /**\n   * Is the val2 attribute set?\n   */\n", "code": "public boolean is val2 set return set2\n", "comment": "is the val2 attribute set\n"}
{"id": "2029428", "raw_code": "  public Phase getInitializer() {\n    return initializer;\n  }\n", "raw_comment": "  /**\n   * To get the \"init\" phase.\n   */\n", "code": "public phase get initializer return initializer\n", "comment": "to get the init phase\n"}
{"id": "2029449", "raw_code": "  public void setInitializer(Phase initializer) {\n    this.initializer = initializer;\n  }\n", "raw_comment": "  /**\n   * To set the \"init\" phase.\n   * @param initializer the phase.\n   */\n", "code": "public void set initializer phase initializer this initializer initializer\n", "comment": "to set the init phase\n"}
{"id": "2029471", "raw_code": "  public Phase getOpener() {\n    return opener;\n  }\n", "raw_comment": "  /**\n   * To get the \"open\" phase.\n   */\n", "code": "public phase get opener return opener\n", "comment": "to get the open phase\n"}
{"id": "2029484", "raw_code": "  protected boolean isEagerlyInstantiating(){\n    if(eager_mode_specified){\n      return eager_init;\n    }\n    else{\n      return this.getNutEnvironment().isEagerlyInstantiating();\n    }\n  }\n", "raw_comment": "  /**\n   * Is this registration eagerly instantiated?\n   */\n", "code": "protected boolean is eagerly instantiating if eager mode specified return eager init else return this get nut environment is eagerly instantiating\n", "comment": "is this registration eagerly instantiated\n"}
{"id": "2029487", "raw_code": "  protected void registerValue(Object key, Object val){\n    if(val==null) return;\n    if(isEagerlyInstantiating() && val instanceof Creator){\n      registerEagerInstantiation(NutsUtils.asComponent(val));\n    }\n    register(key, val, overridable, overriding);\n  }\n", "raw_comment": "  /**\n   * Dynamically register a value. \n   * @param key the key.\n   * @param val the value.\n   */\n", "code": "protected void register value object key object val if val null return if is eagerly instantiating val instanceof creator register eager instantiation nuts utils as component val register key val overridable overriding\n", "comment": "dynamically register a value\n"}
{"id": "2029493", "raw_code": "  public void setOpener(Phase opener) {\n    this.opener = opener;\n  }\n", "raw_comment": "  /**\n   * To set the \"open\" phase.\n   * @param opener the phase.\n   */\n", "code": "public void set opener phase opener this opener opener\n", "comment": "to set the open phase\n"}
{"id": "2029514", "raw_code": "  public Phase getStarter() {\n    return starter;\n  }\n", "raw_comment": "  /**\n   * To get the \"start\" phase.\n   */\n", "code": "public phase get starter return starter\n", "comment": "to get the start phase\n"}
{"id": "2029535", "raw_code": "  public void setStarter(Phase starter) {\n    this.starter = starter;\n  }\n", "raw_comment": "  /**\n   * To set the \"start\" phase.\n   * @param starter the phase.\n   */\n", "code": "public void set starter phase starter this starter starter\n", "comment": "to set the start phase\n"}
{"id": "2029544", "raw_code": "  protected Object calcFQN(Object id){\n    if(prefix==null){\n      if(suffix==null)\n        return id;\n      else\n        return \"\"+id+suffix;\n    }\n    else if(suffix==null){\n      return prefix+id;\n    }\n    else\n      return prefix+id+suffix;\n  }\n", "raw_comment": "  /**\n   * Calculate the fully qualified name using the prefix and suffix.\n   * @param id the id.\n   * @return the fully qualified id.\n   */\n", "code": "protected object calc fqn object id if prefix null if suffix null return id else return id suffix else if suffix null return prefix id else return prefix id suffix\n", "comment": "calculate the fully qualified name using the prefix and suffix\n"}
{"id": "2029548", "raw_code": "  protected void loop(Object id, Object val){\n    registerValue(calcFQN(id), getMandatoryBody().call(createArgs(val)));\n  }\n", "raw_comment": "  /**\n   * Loop once by calling the body function and register the result. prefix, suffix and the value is passed\n   * to the funciton. If prefix or suffix is not specified, it is omitted from the argument list.\n   * @param id the id for the registration.\n   * @param val the value for the loop.\n   */\n", "code": "protected void loop object id object val register value calc fqn id get mandatory body call create args val\n", "comment": "loop once by calling the body function and register the result\n"}
{"id": "2029551", "raw_code": "  public Phase getStopper() {\n    return stopper;\n  }\n", "raw_comment": "  /**\n   * To get the \"stop\" phase.\n   */\n", "code": "public phase get stopper return stopper\n", "comment": "to get the stop phase\n"}
{"id": "2029553", "raw_code": "  protected void loop(Object id, Object val1, Object val2){\n    registerValue(calcFQN(id), getMandatoryBody().call(createArgs(val1, val2)));\n  }\n", "raw_comment": "  /**\n   * Loop once by calling the body function and register the result. prefix, suffix and the\n   * 2 values are passed to the funciton.\n   * If prefix or suffix is not specified, it is omitted from the argument list.\n   * @param id the id for the registration.\n   * @param val1 the first value.\n   * @param val2 the second value.\n   */\n", "code": "protected void loop object id object val1 object val2 register value calc fqn id get mandatory body call create args val1 val2\n", "comment": "loop once by calling the body function and register the result\n"}
{"id": "2029564", "raw_code": "  public void setStopper(Phase stopper) {\n    this.stopper = stopper;\n  }\n", "raw_comment": "  /**\n   * To set the \"stop\" phase.\n   * @param stopper the phase.\n   */\n", "code": "public void set stopper phase stopper this stopper stopper\n", "comment": "to set the stop phase\n"}
{"id": "2029578", "raw_code": "  public Phase getVerifier() {\n    return verifier;\n  }\n", "raw_comment": "  /**\n   * To get the \"verify\" phase.\n   */\n", "code": "public phase get verifier return verifier\n", "comment": "to get the verify phase\n"}
{"id": "2029580", "raw_code": "  public Class getDeclaringClass(){\n    return type;\n  }\n", "raw_comment": "  /**\n   * Get the class that declares the constructor.\n   */\n", "code": "public class get declaring class return type\n", "comment": "get the class that declares the constructor\n"}
{"id": "2029588", "raw_code": "  protected Component evaluateNoLifecycle(){\n    checkMandatory(\"class\", type);\n    final Constructor ctor = lookupConstructor();\n    Component result = Components.fun(Functions.ctor(ctor));\n    return decorateComponent(result);\n  }\n", "raw_comment": "  /**\n   * Evaluate the Component without applying life cycle.\n   * Subclass can call this method and apply customized lifecycle.\n   */\n", "code": "protected component evaluate no lifecycle check mandatory class type final constructor ctor lookup constructor component result components fun functions ctor ctor return decorate component result\n", "comment": "evaluate the component without applying life cycle\n"}
{"id": "2029589", "raw_code": "  public void setVerifier(Phase verifier) {\n    this.verifier = verifier;\n  }\n", "raw_comment": "  /**\n   * To set the \"verify\" phase.\n   * @param verifier the phase.\n   */\n", "code": "public void set verifier phase verifier this verifier verifier\n", "comment": "to set the verify phase\n"}
{"id": "2029612", "raw_code": "  protected Binder getMandatory(){\n    checkMandatory(\"binder\", binder);\n    return binder;\n  }\n", "raw_comment": "  /**\n   * Get the binder object.\n   * Exception is thrown if the binder is not set yet.\n   */\n", "code": "protected binder get mandatory check mandatory binder binder return binder\n", "comment": "get the binder object\n"}
{"id": "2029626", "raw_code": "  public void setKey_type(Class key_type) {\n    throw raise(\"attribute \\\"key-type\\\" not supported.\");\n  }\n", "raw_comment": "  /**\n   * Disable \"key-type\" by throwing exception.\n   */\n", "code": "public void set key type class key type throw raise attribute key type not supported\n", "comment": "disable key type by throwing exception\n"}
{"id": "2029629", "raw_code": "  public void setOf(Class of) {\n    throw raise(\"attribute \\\"of\\\" not supported.\");\n  }\n", "raw_comment": "  /**\n   * Disable \"of\" by throwing exception.\n   */\n", "code": "public void set of class of throw raise attribute of not supported\n", "comment": "disable of by throwing exception\n"}
{"id": "2029633", "raw_code": "  public void setType(Class type) {\n    if(type!=null&&!type.isInterface()){\n      raise(Misc.getTypeName(type) + \" is not an interface\");\n    }\n    this.type = type;\n  }\n", "raw_comment": "  /**\n   * Set the factory interface. The default value is {@link jfun.yan.factory.Factory}\n   */\n", "code": "public void set type class type if type null type is interface raise misc get type name type is not an interface this type type\n", "comment": "set the factory interface\n"}
{"id": "2029648", "raw_code": "  public Class getType(Class deftype){\n    return type==null?deftype:type;\n  }\n", "raw_comment": "  /**\n   * get the type attribute.\n   * @param deftype The default type if the type is not set.\n   * @return the type.\n   */\n", "code": "public class get type class deftype return type null deftype type\n", "comment": "get the type attribute\n"}
{"id": "2029705", "raw_code": "  public int getMaxArgsCount(){\n    return max_arg_num;\n  }\n", "raw_comment": "  /**\n   * Get the maximum number of the arguments.\n   * @return the value of the maximal 1-based ordinal position of\n   * arguments.\n   * -1 is returned if no \"args\" or \"arg\" is specified.\n   */\n", "code": "public int get max args count return max arg num\n", "comment": "get the maximum number of the arguments\n"}
{"id": "2029756", "raw_code": "  public boolean containsExplicitProperty(String key){\n    if(prop_names!=null){\n      for(int i=0; i<prop_names.length; i++){\n        final String name = prop_names[i];\n        if(name!=null && name.equals(key)){\n          return true;\n        }\n      }\n    }\n    final int sz = prop_elements.size();\n    for(int i=0; i<sz; i++){\n      final Prop prop = (Prop)prop_elements.get(i);\n      if(prop.getKey().equals(key)){\n        return true;\n      }\n    }\n    return false;\n  }\n", "raw_comment": "  /**\n   * Is the a property explicitly specified?\n   * @param key the property key.\n   */\n", "code": "public boolean contains explicit property string key if prop names null for int i 0 i prop names length i final string name prop names i if name null name equals key return true final int sz prop elements size for int i 0 i sz i final prop prop prop prop elements get i if prop get key equals key return true return false\n", "comment": "is the a property explicitly specified\n"}
{"id": "2029770", "raw_code": "  public PropertyBinder getAutoWire(){\n    return prop_autowire_mode;\n  }\n", "raw_comment": "  /**\n   * Get the specified autowire mode.\n   */\n", "code": "public property binder get auto wire return prop autowire mode\n", "comment": "get the specified autowire mode\n"}
{"id": "2029789", "raw_code": "  protected boolean isBeanByDefault(){\n    return false;\n  }\n", "raw_comment": "  /**\n   * When no property names is specified, no property values are set,\n   * do we by default create a bean component?\n   */\n", "code": "protected boolean is bean by default return false\n", "comment": "when no property names is specified no property values are set\n"}
{"id": "2029802", "raw_code": "  protected Component informAwares(Component c){\n    return c;\n  }\n", "raw_comment": "  /**\n   * In case the component implements any marker interface or has any specific\n   * method signature that is used to automatically set property, call them\n   * and set the corresponding properties.\n   * @param c the component.\n   * @return the Component object that informs the \"aware\"s.\n   */\n", "code": "protected component inform awares component c return c\n", "comment": "in case the component implements any marker interface or has any specific\n"}
{"id": "2029811", "raw_code": "  public PropertyBinder getPropertyAutowireMode(){\n    if(prop_autowire_str==null){\n      //use default\n      return getPropertyWiring(null);\n    }\n    else return prop_autowire_mode;\n  }\n", "raw_comment": "  /**\n   * Get the auto wire mode for properties.\n   * If not specified, use the global default setting.\n   */\n", "code": "public property binder get property autowire mode if prop autowire str null use default return get property wiring null else return prop autowire mode\n", "comment": "get the auto wire mode for properties\n"}
{"id": "2029816", "raw_code": "  public ParameterBinder getParameterAutowireMode(){\n    if(param_autowire_str==null){\n      return getParameterWiring(null);\n    }\n    else return param_autowire_mode;\n  }\n", "raw_comment": "  /**\n   * Get the auto wire mode for parameters.\n   * If not specified, use the global default setting.\n   */\n", "code": "public parameter binder get parameter autowire mode if param autowire str null return get parameter wiring null else return param autowire mode\n", "comment": "get the auto wire mode for parameters\n"}
{"id": "2029817", "raw_code": "  public Method getAdder(String name){\n    return (Method)adders.get(name);\n  }\n", "raw_comment": "  /**\n   * To get the adder method for a given name.\n   * @param name the name of the adder.\n   * @return the adder method. null is returned if not found.\n   */\n", "code": "public method get adder string name return method adders get name\n", "comment": "to get the adder method for a given name\n"}
{"id": "2029818", "raw_code": "  public Method getAnonymousAdder(Object arg){\n    return anonymous_adder_suite.getMethod(arg);\n  }\n", "raw_comment": "  /**\n   * Get the adder method for adding sub-elements anonymously.\n   * @param arg the argument to be added.\n   * @return the method.\n   * @throws IllegalArgumentException if a method cannot be found for the given argument\n   * or if ambiguity happens.\n   */\n", "code": "public method get anonymous adder object arg return anonymous adder suite get method arg\n", "comment": "get the adder method for adding sub elements anonymously\n"}
{"id": "2029821", "raw_code": "  public Class getAdderType(String name){\n    return (Class)addertypes.get(name);\n  }\n", "raw_comment": "  /**\n   * To get the parameter type for a given adder method.\n   * @param name the name of the adder.\n   * @return the parameter type. null is returned if not found.\n   */\n", "code": "public class get adder type string name return class addertypes get name\n", "comment": "to get the parameter type for a given adder method\n"}
{"id": "2029822", "raw_code": "  public boolean isAllProperties(){\n    return(prop_names!=null && prop_names.length==1 \n        && Constants.WILDCARD.equals(prop_names[0]));\n  }\n", "raw_comment": "  /**\n   * Is wildcard used?\n   */\n", "code": "public boolean is all properties return prop names null prop names length 1 constants wildcard equals prop names 0\n", "comment": "is wildcard used\n"}
{"id": "2029824", "raw_code": "  public boolean isCollectionNut() {\n    return collection;\n  }\n", "raw_comment": "  /**\n   * Is this a collection nut?\n   * <p>\n   * A collection nut is one that has a <code>set</code> with\n   * an array parameter.\n   * </p>\n   */\n", "code": "public boolean is collection nut return collection\n", "comment": "is this a collection nut\n"}
{"id": "2029827", "raw_code": "  public Evaluator getEvaluator() {\n    return evaluator;\n  }\n", "raw_comment": "  /**\n   * Get the Evaluator object that evaluates a Nut object.\n   */\n", "code": "public evaluator get evaluator return evaluator\n", "comment": "get the evaluator object that evaluates a nut object\n"}
{"id": "2029831", "raw_code": "  public Map getPropertyDescriptors(){\n    return props;\n  }\n", "raw_comment": "  /**\n   * Get a map of the property descriptors for this type.\n   */\n", "code": "public map get property descriptors return props\n", "comment": "get a map of the property descriptors for this type\n"}
{"id": "2029832", "raw_code": "  protected Component decorateComponent(Component component){\n    return applyProperties(applyArguments(informAwares(component)));\n  }\n", "raw_comment": "  /**\n   * Apply arguments and then properties to the component.\n   * @param component the component to apply arguments and properties.\n   * @return the result.\n   */\n", "code": "protected component decorate component component component return apply properties apply arguments inform awares component\n", "comment": "apply arguments and then properties to the component\n"}
{"id": "2029834", "raw_code": "  public NutDescriptor getSubDescriptor(String name){\n    return (NutDescriptor)rdesc.sub_descriptors.get(name);\n  }\n", "raw_comment": "  /**\n   * Get the NutDescriptor object for a given sub-element.\n   * @param name the name of the sub-element.\n   * @return the NutDescriptor. null if not found.\n   */\n", "code": "public nut descriptor get sub descriptor string name return nut descriptor rdesc sub descriptors get name\n", "comment": "get the nut descriptor object for a given sub element\n"}
{"id": "2029837", "raw_code": "  public Method getSetter(){\n    return cdesc.setter;\n  }\n", "raw_comment": "  /**\n   * If the Nut is a collection nut, get the method corresponding\n   * to the <code>set</code> method.\n   * @return the setter method.\n   */\n", "code": "public method get setter return cdesc setter\n", "comment": "if the nut is a collection nut get the method corresponding\n"}
{"id": "2029839", "raw_code": "  public boolean isGloballyDefined(){\n    return globallyDefined;\n  }\n", "raw_comment": "  /**\n   * Is this tag defined globally?\n   */\n", "code": "public boolean is globally defined return globally defined\n", "comment": "is this tag defined globally\n"}
{"id": "2029840", "raw_code": "  public Class getSetterElementType(){\n    return cdesc.elem_type;\n  }\n", "raw_comment": "  /**\n   * If the Nut is a collection nut, get the element type of the\n   * array parameter for the <code>set</code> method.\n   * For example, <code>getSetterElementType()</code> returns String\n   * if the type has a public <code>void set(String[])</code> method.\n   * @return the element type.\n   */\n", "code": "public class get setter element type return cdesc elem type\n", "comment": "if the nut is a collection nut get the element type of the\n"}
{"id": "2029847", "raw_code": "  public int getSequenceNumber(){\n    return seq_no;\n  }\n", "raw_comment": "  /**\n   * Get the sequence number starting from 0.\n   * This number is relative to the order the tag is defined within the current scope.\n   */\n", "code": "public int get sequence number return seq no\n", "comment": "get the sequence number starting from 0\n"}
{"id": "2029863", "raw_code": "  public int getColumnNo() {\n    return col;\n  }\n", "raw_comment": "  /**\n   * Get the 1-based column number.\n   */\n", "code": "public int get column no return col\n", "comment": "get the 1 based column number\n"}
{"id": "2029865", "raw_code": "  public int getLineNo() {\n    return line;\n  }\n", "raw_comment": "  /**\n   * Get the 1-based line number.\n   */\n", "code": "public int get line no return line\n", "comment": "get the 1 based line number\n"}
{"id": "2029875", "raw_code": "  public Object getComponentId() {\n    return id;\n  }\n", "raw_comment": "  /**\n   * Get the id of the component within the containing module.\n   */\n", "code": "public object get component id return id\n", "comment": "get the id of the component within the containing module\n"}
{"id": "2029878", "raw_code": "  public Object getModuleId() {\n    return module_id;\n  }\n", "raw_comment": "  /**\n   * Get the id of the containing module.\n   */\n", "code": "public object get module id return module id\n", "comment": "get the id of the containing module\n"}
{"id": "2029880", "raw_code": "  public Location getTagLocation(){\n    return loc;\n  }\n", "raw_comment": "  /**\n   * Get this tag's location within the configuration file.\n   */\n", "code": "public location get tag location return loc\n", "comment": "get this tags location within the configuration file\n"}
{"id": "2029881", "raw_code": "  public int getEvaluationSequence(){\n    return evaluation_seq;\n  }\n", "raw_comment": "  /**\n   * Get the sequence number in the order of tag evaluation.\n   */\n", "code": "public int get evaluation sequence return evaluation seq\n", "comment": "get the sequence number in the order of tag evaluation\n"}
{"id": "2029884", "raw_code": "  public int getDeclarationSequence(){\n    return declaration_seq;\n  }\n", "raw_comment": "  /**\n   * Get the sequence number in the order of tag declaration.\n   */\n", "code": "public int get declaration sequence return declaration seq\n", "comment": "get the sequence number in the order of tag declaration\n"}
{"id": "2029891", "raw_code": "  public void initSequenceNumber(int seq){\n    this.seq_no = seq;\n  }\n", "raw_comment": "  /**\n   * To set the sequence number of the tag in the enclosing scope.\n   * @param seq the sequence number.\n   */\n", "code": "public void init sequence number int seq this seq no seq\n", "comment": "to set the sequence number of the tag in the enclosing scope\n"}
{"id": "2029900", "raw_code": "  public void initGloballyDefined(boolean gd){\n    this.globallyDefined = gd;\n  }\n", "raw_comment": "  /**\n   * To set whether the tag is defined globally.\n   * @param gd the flag.\n   */\n", "code": "public void init globally defined boolean gd this globally defined gd\n", "comment": "to set whether the tag is defined globally\n"}
{"id": "2029910", "raw_code": "  public void initTagLocation(Location loc){\n    this.loc = loc;\n  }\n", "raw_comment": "  /**\n   * The framework calls this method to set the location.\n   * @param loc the location.\n   */\n", "code": "public void init tag location location loc this loc loc\n", "comment": "the framework calls this method to set the location\n"}
{"id": "2029918", "raw_code": "  public void initNutEnvironment(NutEnvironment env){\n    this.env = env;\n  }\n", "raw_comment": "  /**\n   * The framework calls this method to set the environment.\n   * @param env the environment.\n   */\n", "code": "public void init nut environment nut environment env this env env\n", "comment": "the framework calls this method to set the environment\n"}
{"id": "2029923", "raw_code": "  public ClassLoader getComponentClassLoader() {\n    return env.getComponentClassLoader();\n  }\n", "raw_comment": "  /**\n   * Get the class loader used to load the component classes.\n   */\n", "code": "public class loader get component class loader return env get component class loader\n", "comment": "get the class loader used to load the component classes\n"}
{"id": "2029930", "raw_code": "  public ClassLoader getNutClassLoader(String classpath){\n    try{\n      return NutsUtils.getClassLoader(getClass().getClassLoader(),\n          classpath, \n          env.getBaseDir());\n    }\n    catch(MalformedURLException e){\n      throw new ConfigurationException(\"invalid classpath\", \n          loc);\n    }\n  }\n", "raw_comment": "  /**\n   * Get a ClassLoader object that uses the current ClassLoader\n   * as parent, and tries an alternative classpath if the resource\n   * or class is not found.\n   * \n   * @param classpath the alternative classpath. null if unspecified.\n   * @return the ClassLoader object.\n   */\n", "code": "public class loader get nut class loader string classpath try return nuts utils get class loader get class get class loader classpath env get base dir catch malformed urlexception e throw new configuration exception invalid classpath loc\n", "comment": "get a class loader object that uses the current class loader\n"}
{"id": "2029937", "raw_code": "  public void initTagName(String name){\n    this.tagname = name;\n  }\n", "raw_comment": "  /**\n   * The framework calls this method to set the tag name.\n   * @param name the tag name.\n   */\n", "code": "public void init tag name string name this tagname name\n", "comment": "the framework calls this method to set the tag name\n"}
{"id": "2029944", "raw_code": "  public NutEnvironment getNutEnvironment() {\n    return env;\n  }\n", "raw_comment": "  /**\n   * Get the environment that the Nut object is running in.\n   */\n", "code": "public nut environment get nut environment return env\n", "comment": "get the environment that the nut object is running in\n"}
{"id": "2029946", "raw_code": "  public ParameterBinder getParameterWiring(){\n    return param_wiring;\n  }\n", "raw_comment": "  /**\n   * Get the default parameter auto-wiring mode. \n   * Null is returned if manual-wiring is default. \n   */\n", "code": "public parameter binder get parameter wiring return param wiring\n", "comment": "get the default parameter auto wiring mode\n"}
{"id": "2029948", "raw_code": "  public PropertyBinder getPropertyWiring(){\n    return prop_wiring;\n  }\n", "raw_comment": "  /**\n   * Get the default property auto-wiring mode.\n   * Null is returned if manual-wiring is default.\n   */\n", "code": "public property binder get property wiring return prop wiring\n", "comment": "get the default property auto wiring mode\n"}
{"id": "2029951", "raw_code": "  public SingletonMode getSingletonMode(){\n    return singleton_mode;\n  }\n", "raw_comment": "  /**\n   * Get the default singleton mode.\n   * Null is returned if singleton is disabled by default.\n   */\n", "code": "public singleton mode get singleton mode return singleton mode\n", "comment": "get the default singleton mode\n"}
{"id": "2029954", "raw_code": "  public Object convert(Class target_type, Object v){\n    return env.convert(target_type, v, loc);\n  }\n", "raw_comment": "  /**\n   * Convert an object to a target type.\n   * @param target_type the target type.\n   * @param v the object to be converted.\n   * @return the object of the target type.\n   */\n", "code": "public object convert class target type object v return env convert target type v loc\n", "comment": "convert an object to a target type\n"}
{"id": "2029959", "raw_code": "  public Stack getDependencyTrace(){\n    return trace;\n  }\n", "raw_comment": "  /**\n   * Get the dependency trace that caused the cycle.\n   * \n   */\n", "code": "public stack get dependency trace return trace\n", "comment": "get the dependency trace that caused the cycle\n"}
{"id": "2029961", "raw_code": "  public void printDependencyTrace(PrintStream out){\n    printDependencyTrace(new java.io.PrintWriter(out, true));\n  }\n", "raw_comment": "  /**\n   * Print the dependency trace.\n   * @param out the output stream.\n   */\n", "code": "public void print dependency trace print stream out print dependency trace new java io print writer out true\n", "comment": "print the dependency trace\n"}
{"id": "2029962", "raw_code": "  public void printDependencyTrace(java.io.PrintWriter out){\n    final int size = trace.size();\n    for(int i=0; i<size; i++){\n      out.println(trace.get(i));\n    }\n  }\n", "raw_comment": "  /**\n   * Print the dependency trace.\n   * @param out the output writer.\n   */\n", "code": "public void print dependency trace java io print writer out final int size trace size for int i 0 i size i out println trace get i\n", "comment": "print the dependency trace\n"}
{"id": "2029964", "raw_code": "  public void printDependencyTrace(){\n    printDependencyTrace(System.err);\n  }\n", "raw_comment": "  /**\n   * Prints the dependency trace to the standard error output.\n   */\n", "code": "public void print dependency trace print dependency trace system err\n", "comment": "prints the dependency trace to the standard error output\n"}
{"id": "2029965", "raw_code": "  public Component cast(final Class target_type, Component c){\n    return env.cast(target_type, c, this.getTagLocation());\n  }\n", "raw_comment": "  /**\n   * Transforms a Component so that the instantiated instance\n   * is converted to the target type.\n   * @param target_type the target type.\n   * @param c the component.\n   * @return the new Component with the conversion in effect.\n   */\n", "code": "public component cast final class target type component c return env cast target type c this get tag location\n", "comment": "transforms a component so that the instantiated instance\n"}
{"id": "2029977", "raw_code": "  public void registerEagerInstantiation(Component c){\n    if(!globallyDefined){\n      raise(\"only global tags can be registered as eager instantiated\");\n    }\n    /*\n    if(id==null){\n      raise(\"id is required to eager initialize a Component\");\n    }*/\n    env.registerEagerInstantiation(seq_no, id, c);\n  }\n", "raw_comment": "  /**\n   * Register a Component to be eagerly instantiated using the current tag's id.\n   * @param c the Component to be eagerly instantiated.\n   */\n", "code": "public void register eager instantiation component c if globally defined raise only global tags can be registered as eager instantiated if id null raise id is required to eager initialize a component env register eager instantiation seq no id c\n", "comment": "register a component to be eagerly instantiated using the current tags id\n"}
{"id": "2029984", "raw_code": "  public ConfigurationException raise(String msg){\n    throw new ConfigurationException(tagname+\": \" + msg, loc);\n  }\n", "raw_comment": "  /**\n   * Throws a ConfigurationException with the current tag name and location information.\n   * @param msg the error message.\n   * @return This method never returns. The return type is for\n   * callers to get around of the type system so that you can say\n   * \"throw raise(...)\".\n   */\n", "code": "public configuration exception raise string msg throw new configuration exception tagname msg loc\n", "comment": "throws a configuration exception with the current tag name and location information\n"}
{"id": "2029988", "raw_code": "  public ConfigurationException raise(Throwable e){\n    throw new ConfigurationException(tagname+\": \" + e.getMessage(), e, loc);\n  }\n", "raw_comment": "  /**\n   * Throws a ConfigurationException with the current tag name and location information.\n   * @param e the nested exception.\n   * @return This method never returns. The return type is for\n   * callers to get around of the type system so that you can say\n   * \"throw raise(...)\".\n   */\n", "code": "public configuration exception raise throwable e throw new configuration exception tagname e get message e loc\n", "comment": "throws a configuration exception with the current tag name and location information\n"}
{"id": "2029994", "raw_code": "  protected void checkMandatory(String attrname, Object v){\n    if(v==null)\n      raise(\"missing mandatory attribute <\"+attrname +\">\");\n  }\n", "raw_comment": "  /**\n   * Make sure an object is not null. \n   * Proper error message is reported otherwise.\n   * @param attrname the name of the checked attribute.\n   * @param v the attribute value.\n   */\n", "code": "protected void check mandatory string attrname object v if v null raise missing mandatory attribute attrname\n", "comment": "make sure an object is not null\n"}
{"id": "2030005", "raw_code": "  protected void checkDuplicate(String attrname, Object v){\n    if(v!=null){\n      raise(\"attribute <\"+attrname+\"> already specified.\");\n    }\n  }\n", "raw_comment": "  /**\n   * Makes sure that a certain attribute is not set yet\n   * to avoid duplicate setting.\n   * @param attrname the attribute name.\n   * @param v the attribute value.\n   */\n", "code": "protected void check duplicate string attrname object v if v null raise attribute attrname already specified\n", "comment": "makes sure that a certain attribute is not set yet\n"}
{"id": "2030014", "raw_code": "  /*protected void checkSingleChild(Object[] vals){\n    if(vals.length>1)\n      throw raise(\"only one sub-element is allowed\");\n  }*/\n", "raw_comment": "  /**\n   * Makes sure the array only contains one element.\n   * This is useful for tags accepting only one sub-element.\n   * @param vals the value array.\n   */\n", "code": "protected void check single child object vals if vals length 1 throw raise only one sub element is allowed\n", "comment": "makes sure the array only contains one element\n"}
{"id": "2030020", "raw_code": "  public ParameterBinder getParameterWiring(String mode){\n    return env.getParameterWiringMode(mode, loc);\n  }\n", "raw_comment": "  /**\n   * To get the ParameterBinder object that encapsulates the auto-wiring strategy\n   * for a autowire mode specified by the mode name.\n   * \n   * @param mode the mode name.\n   * @return the ParameterBinder object for the auto-wiring strategy.\n   * null is returned if this indicates a manual-wire.\n   */\n", "code": "public parameter binder get parameter wiring string mode return env get parameter wiring mode mode loc\n", "comment": "to get the parameter binder object that encapsulates the auto wiring strategy\n"}
{"id": "2030024", "raw_code": "  public PropertyBinder getPropertyWiring(String mode){\n    return env.getPropertyWiringMode(mode, loc);\n  }\n", "raw_comment": "  /**\n   * To get the PropertyBinder object that encapsulates the auto-wiring strategy\n   * for a autowire mode specified by the mode name.\n   * \n   * @param mode the mode name.\n   * @return the PropertyBinder object for the auto-wiring strategy.\n   * null is returned if this indicates a manual-wire.\n   */\n", "code": "public property binder get property wiring string mode return env get property wiring mode mode loc\n", "comment": "to get the property binder object that encapsulates the auto wiring strategy\n"}
{"id": "2030194", "raw_code": "  public boolean isDeserializable(Class type){\n    return type.isAssignableFrom(String.class) \n      || deserializers.get(type)!=null\n      || PropertyEditorManager.findEditor(type)!=null;\n  }\n", "raw_comment": "  /**\n   * To determine if string literal can be converted to the target type.\n   * PropertyEditor is also searched if the type is not by default\n   * deserializable by the framework\n   * @param type the target type.\n   * @return true if convertible.\n   */\n", "code": "public boolean is deserializable class type return type is assignable from string class deserializers get type null property editor manager find editor type null\n", "comment": "to determine if string literal can be converted to the target type\n"}
{"id": "2030204", "raw_code": "  public Map preInstantiate(Container container, Map store){\n    final UID[] keys = getOrderedUIDs();\n    for(int i=0; i<keys.length; i++){\n      final UID key = keys[i];\n      final Creator c = (Creator)eager_instantiations.get(key);\n      store.put(key, container.instantiateComponent(key, c));\n    }\n    return store;\n  }\n", "raw_comment": "  /**\n   * Pre-initialize eagerly instantiated components.\n   * @param container the container to resolve dependency for these components.\n   * @param store the Map object to collect the instantiated results.\n   * The map key is {@link UID}, which is a combination of the module id and the component id.\n   * @return reference to the Map object.\n   */\n", "code": "public map pre instantiate container container map store final uid keys get ordered uids for int i 0 i keys length i final uid key keys i final creator c creator eager instantiations get key store put key container instantiate component key c return store\n", "comment": "pre initialize eagerly instantiated components\n"}
{"id": "2030211", "raw_code": "  public Map preInstantiate(Container container){\n    return preInstantiate(container, new HashMap());    \n  }\n", "raw_comment": "  /**\n   * Pre-initialize eagerly instantiated components.\n   * @param container the container to resolve dependency for these components.\n   * @return the Map object to collect the instantiated results.\n   * The map key is {@link UID}, which is a combination of the module id and the component id.\n   */\n", "code": "public map pre instantiate container container return pre instantiate container new hash map\n", "comment": "pre initialize eagerly instantiated components\n"}
{"id": "2030212", "raw_code": "  public Map preInstantiate(Map store){\n    return preInstantiate(yan, store);\n  }\n", "raw_comment": "  /**\n   * Pre-initialize eagerly instantiated components.\n   * @param store the Map object to collect the instantiated results.\n   * The map key is {@link UID}, which is a combination of the module id and the component id.\n   * @return reference to the Map object.\n   */\n", "code": "public map pre instantiate map store return pre instantiate yan store\n", "comment": "pre initialize eagerly instantiated components\n"}
{"id": "2030214", "raw_code": "  public Map preInstantiate(){\n    return preInstantiate(yan);\n  }  \n", "raw_comment": "  /**\n   * Pre-initialize eagerly instantiated components.\n   * @return the Map object to collect the instantiated results.\n   * The map key is {@link UID}, which is a combination of the module id and the component id.\n   */\n", "code": "public map pre instantiate return pre instantiate yan\n", "comment": "pre initialize eagerly instantiated components\n"}
{"id": "2030216", "raw_code": "  public DefaultLifecycleManager getLifecycleManager() {\n    return manager;\n  }\n", "raw_comment": "  /**\n   * To get the lifecycle manager used by this processor.\n   */\n", "code": "public default lifecycle manager get lifecycle manager return manager\n", "comment": "to get the lifecycle manager used by this processor\n"}
{"id": "2030227", "raw_code": "  public File getBaseDir() {\n    return basedir;\n  }\n", "raw_comment": "  /**\n   * To get the base directory used by the processor.\n   */\n", "code": "public file get base dir return basedir\n", "comment": "to get the base directory used by the processor\n"}
{"id": "2030229", "raw_code": "  public ClassLoader getClassLoader() {\n    return cloader;\n  }\n", "raw_comment": "  /**\n   * To get the ClassLoader used to load component classes.\n   */\n", "code": "public class loader get class loader return cloader\n", "comment": "to get the class loader used to load component classes\n"}
{"id": "2030232", "raw_code": "  public ResourceLoader getResourceLoader(){\n    return rloader;\n  }\n", "raw_comment": "  /**\n   * To get the ResourceLoader used to load resources.\n   */\n", "code": "public resource loader get resource loader return rloader\n", "comment": "to get the resource loader used to load resources\n"}
{"id": "2030235", "raw_code": "  public void registerAutoWiring(String mode_name, PropertyBinder mode){\n    custom_wiring_modes.addWiringMode(mode_name, mode);\n  }\n", "raw_comment": "  /**\n   * Register a property autowiring mode. Any existent mode or predefined mode\n   * with the same name will be overriden.\n   * @param mode_name the mode name.\n   * @param mode the PropertyBinder object encapsulating the autowiring logic.\n   */\n", "code": "public void register auto wiring string mode name property binder mode custom wiring modes add wiring mode mode name mode\n", "comment": "register a property autowiring mode\n"}
{"id": "2030238", "raw_code": "  public void registerAutoWiring(String mode_name, ParameterBinder mode){\n    custom_wiring_modes.addWiringMode(mode_name, mode);\n  }\n", "raw_comment": "  /**\n   * Register a parameter autowiring mode. Any existent mode or predefined mode\n   * with the same name will be overriden.\n   * @param mode_name the mode name.\n   * @param mode the ParameterBinder object encapsulating the autowiring logic.\n   */\n", "code": "public void register auto wiring string mode name parameter binder mode custom wiring modes add wiring mode mode name mode\n", "comment": "register a parameter autowiring mode\n"}
{"id": "2030245", "raw_code": "    protected Component prepSER_isSerializable(Container yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>isSerializable</em>. Overload this function, if the Component supports\n     * serialization.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ser is serializable container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em is serializable em\n"}
{"id": "2030246", "raw_code": "  public Object findService(Object key){\n    return services.get(key);\n  }\n", "raw_comment": "  /**\n   * To find the service object registered using\n   * {@link #registerService(Object, Object)}.\n   * @param key the key to the service object.\n   * @return the service object.\n   * null is returned if no object is registered under this key.\n   */\n", "code": "public object find service object key return services get key\n", "comment": "to find the service object registered using\n"}
{"id": "2030250", "raw_code": "  public void registerService(Object key, Object service){\n    services.put(key, service);\n  }\n", "raw_comment": "  /**\n   * To register a service object that can be read by customized Nuts classes\n   * through the call of {@link NutEnvironment#findService(Object)}.\n   * <p>\n   * register and unregister are thread safe.\n   * </p>\n   * @param key the service key.\n   * @param service the service object.\n   */\n", "code": "public void register service object key object service services put key service\n", "comment": "to register a service object that can be read by customized nuts classes\n"}
{"id": "2030252", "raw_code": "  public void unregisterService(Object key){\n    services.remove(key);\n  }\n", "raw_comment": "  /**\n   * To unregister a service object. No-op if the key is not found.\n   * @param key the key of the service object.\n   */\n", "code": "public void unregister service object key services remove key\n", "comment": "to unregister a service object\n"}
{"id": "2030257", "raw_code": "  public Set getServiceKeys(){\n    return services.keySet();\n  }\n", "raw_comment": "  /**\n   * Get the set of the keys of the service objects.\n   */\n", "code": "public set get service keys return services key set\n", "comment": "get the set of the keys of the service objects\n"}
{"id": "2030258", "raw_code": "    protected Component prepSER_isXStreamSerializable(Container yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>isXStreamSerializable</em>. Overload this function, if the Component supports\n     * serialization.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ser is xstream serializable container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em is xstream serializable em\n"}
{"id": "2030260", "raw_code": "  public void registerNut(String key, NutDescriptor desc){\n    external_nuts.put(key, desc);\n  }\n", "raw_comment": "  /**\n   * Add an external nut descriptor for the processor to use.\n   * @param key the key of the nut.\n   * @param desc the descriptor.\n   */\n", "code": "public void register nut string key nut descriptor desc external nuts put key desc\n", "comment": "add an external nut descriptor for the processor to use\n"}
{"id": "2030261", "raw_code": "    protected Component prepVER_verificationFails(Container yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>verificationFailsWithUnsatisfiedDependency</em>. Overload this function, if the\n     * Component's verification can fail e.g. due to an unresolved dependency.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test, that fails for the verification, e.g. because of a compoennt with missing\n     *               dependencies. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ver verification fails container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em verification fails with unsatisfied dependency em\n"}
{"id": "2030263", "raw_code": "  public NutDescriptor findNut(String key){\n    return (NutDescriptor)external_nuts.get(key);\n  }\n", "raw_comment": "  /**\n   * Get a NutDescriptor registered by putNut().\n   * @param key the key of the NutDescriptor.\n   * @return the NutDescriptor object.\n   * Null is returned if the key is not found.\n   */\n", "code": "public nut descriptor find nut string key return nut descriptor external nuts get key\n", "comment": "get a nut descriptor registered by put nut\n"}
{"id": "2030267", "raw_code": "  public void removeNut(String key){\n    external_nuts.remove(key);\n  }\n", "raw_comment": "  /**\n   * Unregister a NutDescriptor.\n   * @param key the key of the NutDescriptor.\n   */\n", "code": "public void remove nut string key external nuts remove key\n", "comment": "unregister a nut descriptor\n"}
{"id": "2030268", "raw_code": "    protected Component prepINS_createsNewInstances(Container yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>createsNewInstances</em>. Overload this function, if the Component is instantiating. It\n     * should create a new instance with every call.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ins creates new instances container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em creates new instances em\n"}
{"id": "2030270", "raw_code": "  public void registerVariable(String key, Object val){\n    variables.put(key, val);\n  }\n", "raw_comment": "  /**\n   * Register a variable that can be referenced in the xml file\n   * using \"$varname\" syntax.\n   * @param key the variable name.\n   * @param val the variable value.\n   */\n", "code": "public void register variable string key object val variables put key val\n", "comment": "register a variable that can be referenced in the xml file\n"}
{"id": "2030273", "raw_code": "  public Object getVariable(String key){\n    return variables.get(key);\n  }\n", "raw_comment": "  /**\n   * To get a variable value.\n   * @param key the variable name.\n   * @return the variable value. Or null if not found.\n   */\n", "code": "public object get variable string key return variables get key\n", "comment": "to get a variable value\n"}
{"id": "2030277", "raw_code": "  public boolean hasVariable(String key){\n    return variables.containsKey(key);\n  }\n", "raw_comment": "  /**\n   * Checks whether a variable name exists.\n   * @param key the variable name.\n   */\n", "code": "public boolean has variable string key return variables contains key key\n", "comment": "checks whether a variable name exists\n"}
{"id": "2030278", "raw_code": "    protected Component prepINS_runtimeExceptionIsRethrown(Container yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>runtimeExceptionIsRethrown</em>. Overload this function, if the Component is\n     * instantiating.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test with a component that fails with a {@link RuntimeException}at\n     *               instantiation. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ins runtime exception is rethrown container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em runtime exception is rethrown em\n"}
{"id": "2030280", "raw_code": "  public void removeVariable(String key){\n    variables.remove(key);\n  }\n", "raw_comment": "  /**\n   * To remove a registration of a variable.\n   * @param key the variable name.\n   */\n", "code": "public void remove variable string key variables remove key\n", "comment": "to remove a registration of a variable\n"}
{"id": "2030283", "raw_code": "  public Set getNutKeys(){\n    return external_nuts.keySet();\n  }\n", "raw_comment": "  /**\n   * Get the set of keys of Nut descriptors.\n   */\n", "code": "public set get nut keys return external nuts key set\n", "comment": "get the set of keys of nut descriptors\n"}
{"id": "2030288", "raw_code": "  public NutsProcessor createMetaProcessor(ClassLoader loader){\n    return createMetaProcessor(loader, new ClassLoader2ResourceLoader(loader));\n  }\n", "raw_comment": "  /**\n   * Create an NutsProcessor object that's gonna be used to\n   * load meta configuration of Nut classes.\n   * <p>\n   * The default singleton mode is \"off\" and the default parameter auto-wiring\n   * mode is \"bytype\".\n   * </p>\n   * <p>\n   * All the service objects and externally registered nuts descriptors\n   * will be copied to this new NutsProcessor object.\n   * </p>\n   * <p>\n   * It is fine to create an NutsProcessor object by calling\n   * the constructor directly.\n   * Any NutsProcessor object can be used to interpret meta configuration.\n   * </p>\n   * <p> \n   * This method just makes it more convenient\n   * to set the default settings and copy the existing service objects\n   * and externally registered nut descriptors. \n   * </p>\n   * @param loader The class loader to load classes and resources.\n   * @return the new NutsProcessor object.\n   */\n", "code": "public nuts processor create meta processor class loader loader return create meta processor loader new class loader2 resource loader loader\n", "comment": "create an nuts processor object thats gonna be used to\n"}
{"id": "2030291", "raw_code": "  public NutsProcessor createMetaInterpreter(){\n    return createMetaProcessor(cloader, rloader);\n  }\n", "raw_comment": "  /**\n   * Create an NutsProcessor object that's gonna be used to\n   * load meta configuration of Nut classes.\n   * <p>\n   * The component classloader is used to load classes. \n   * </p>\n   * <p>\n   * The default singleton mode is \"off\" and the default parameter auto-wiring\n   * mode is \"bytype\".\n   * </p>\n   * <p>\n   * All the service objects and externally registered nuts descriptors\n   * will be copied to this new NutsProcessor object.\n   * </p>\n   * <p>\n   * It is fine to create an NutsProcessor object by calling\n   * the constructor directly.\n   * Any NutsProcessor object can be used to interpret meta configuration.\n   * </p>\n   * <p> \n   * This method just makes it more convenient\n   * to set the default settings and copy the existing service objects\n   * and externally registered nut descriptors. \n   * </p>\n   * @return the new NutsProcessor object.\n   */\n", "code": "public nuts processor create meta interpreter return create meta processor cloader rloader\n", "comment": "create an nuts processor object thats gonna be used to\n"}
{"id": "2030297", "raw_code": "    protected Component prepRES_failingVerificationWithCyclicDependencyException(Container yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>failingVerificationWithCyclicDependencyException</em>. Overload this function, if the\n     * Component is resolves dependencies.\n     * @param yan container, used to register dependencies.\n     * @return a Component of the type to test with a component that has cyclic dependencies. You have to register the\n     *               component itself in the pico.\n     */\n", "code": "protected component prep res failing verification with cyclic dependency exception container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em failing verification with cyclic dependency exception em\n"}
{"id": "2030958", "raw_code": "  public Component factory(Class factory_type){\n    return Components.factory(this, factory_type);\n  }\n", "raw_comment": "  /**\n   * Create a Component that instantiates a factory interface.\n   * 'this' component is used as the component for product object.\n   * All factory methods in the factory interface will delegate\n   * to the product component ('this' component) to create the product.\n   * \n   * @param factory_type the class object of the factory interface.\n   * @return the factory component.\n   */\n", "code": "public component factory class factory type return components factory this factory type\n", "comment": "create a component that instantiates a factory interface\n"}
{"id": "2031100", "raw_code": "  public Component echo(){\n    return Components.echo(this);\n  }\n", "raw_comment": "  /**\n   * Make sure the component will notify the listener when an\n   * instance is instantiated.\n   * @return the Component that notifies the listener.\n   */\n", "code": "public component echo return components echo this\n", "comment": "make sure the component will notify the listener when an\n"}
{"id": "2031119", "raw_code": "  public Container getChild() {\n    return child;\n  }\n", "raw_comment": "  /**\n   * Get the child container.\n   * @return the child container.\n   */\n", "code": "public container get child return child\n", "comment": "get the child container\n"}
{"id": "2031120", "raw_code": "  public Container getParent() {\n    return parent;\n  }\n", "raw_comment": "  /**\n   * Get the parent container.\n   * @return the parent container.\n   */\n", "code": "public container get parent return parent\n", "comment": "get the parent container\n"}
{"id": "2031129", "raw_code": "  public Dependency getDependencyOfType(Class type, ComponentMap cmap){\n    if(child.getComponentOfType(type)!=null)\n      return child.getDependencyOfType(type, cmap);\n    else return parent.getDependencyOfType(type, parent);\n  }\n", "raw_comment": "  /**\n   * Gets the Dependency object for a component of\n   * a provided type.\n   * <br>\n   * If the component type can be found in the child container,\n   * the dependency is looked up in the child container.\n   * Otherwise, parent container is looked up and the parent container\n   * is used to resolve all cascaded dependencies. \n   */\n", "code": "public dependency get dependency of type class type component map cmap if child get component of type type null return child get dependency of type type cmap else return parent get dependency of type type parent\n", "comment": "gets the dependency object for a component of\n"}
{"id": "2031165", "raw_code": "  public Component bind(VerificationBinder binder){\n    return Monad.bind(this, binder);\n  }\n", "raw_comment": "  /**\n   * Monadic 'bind' operation.\n   * It creates a new Component object.\n   * Upon instance creation, this Component object will\n   * 1. invokes this component object to create an instance. <br>\n   * 2. feed the instance to the Binder object to get a second Creator object. <br>\n   * 3. Invoke the second Creator object to get a second instance. <br>\n   * 4. return the second instance as the instance of this Component. <br>\n   * Since the actual component type is not known until creation time, \n   * null is returned for getType().\n   * <br>\n   * The VerificationBinder object will also verifies the component\n   * type of this component when verifying.\n   * @param binder the VerificationBinder object.\n   * @return the new Component object.\n   */  \n", "code": "public component bind verification binder binder return monad bind this binder\n", "comment": "monadic bind operation\n"}
{"id": "2031174", "raw_code": "  public Component followedBy(VerificationBinder binder){\n    return Monad.followedBy(this, binder);\n  }\n", "raw_comment": "  /**\n   * Create a staged component.\n   * On instantiation, it first creates the base object using this component,\n   * then the {@link jfun.yan.VerificationBinder} object is used\n   * to do certain side-effect to complete the work.\n   * The object created by this component is finally returned as the instance.\n   * <br>\n   * Bean component, for example, is an application of staged component.\n   * <br>\n   * The {@link jfun.yan.VerificationBinder} object also takes care of verification\n   * of the base component type. \n   * \n   * @param binder the VerificationBinder object to do the side effect.\n   * @return the new Component object.\n   */\n", "code": "public component followed by verification binder binder return monad followed by this binder\n", "comment": "create a staged component\n"}
{"id": "2031205", "raw_code": "  public Component seq(Component c2){\n    return Monad.seq(this, c2);\n  }\n", "raw_comment": "  /**\n   * Monadic 'sequence' operation.\n   * It sequentially execute this component and then another one\n   * and keep the result of the second component.\n   * @param c2 the next component.\n   * @return the new Component object.\n   */\n", "code": "public component seq component c2 return monad seq this c2\n", "comment": "monadic sequence operation\n"}
{"id": "2031447", "raw_code": "  public void init(){\n    yan.fifo(_init);\n  }\n", "raw_comment": "  /**\n   * Run initliazation for components with java.util.Map as its user state\n   * and this Map object contains a key with the value {@link DefaultLifecycle#INIT}.\n   * <br>\n   * \"first-in-first-out\" order is followed.\n   */\n", "code": "public void init yan fifo init\n", "comment": "run initliazation for components with java\n"}
{"id": "2031448", "raw_code": "  public void start(){\n    yan.fifo(_start);\n  }\n", "raw_comment": "  /**\n   * Run start for components with java.util.Map as its user state\n   * and this Map object contains a key with the value {@link DefaultLifecycle#START}.\n   * <br>\n   * \"first-in-first-out\" order is followed.\n   */\n", "code": "public void start yan fifo start\n", "comment": "run start for components with java\n"}
{"id": "2031449", "raw_code": "  public void stop(){\n    yan.filo(_stop);\n  }\n", "raw_comment": "  /**\n   * Run stop for components with java.util.Map as its user state\n   * and this Map object contains a key with the value {@link DefaultLifecycle#STOP}.\n   * <br>\n   * \"first-in-last-out\" order is followed.\n   */\n", "code": "public void stop yan filo stop\n", "comment": "run stop for components with java\n"}
{"id": "2031450", "raw_code": "  public void dispose(){\n    yan.filo(_dispose);\n  }\n", "raw_comment": "  /**\n   * Run dispose for components with java.util.Map as its user state\n   * and this Map object contains a key with the value {@link DefaultLifecycle#DISPOSE}.\n   * <br>\n   * \"first-in-first-out\" order is followed.\n   */\n", "code": "public void dispose yan filo dispose\n", "comment": "run dispose for components with java\n"}
{"id": "2031455", "raw_code": "  public Component get(){\n    return cc;\n  }\n", "raw_comment": "  /**\n   * Get the result Component object.\n   * @return the Component object.\n   */\n", "code": "public component get return cc\n", "comment": "get the result component object\n"}
{"id": "2031456", "raw_code": "  public LifecycleHelper setAction(Object key, InstanceListener a){\n    final Object state = cc.getState();\n    if(state==null){\n      final Map map = new java.util.HashMap();\n      map.put(key, a);\n      this.cc = this.cc.withState(map);\n    }\n    else{\n      final Map map = (Map)state;\n      map.put(key, a);\n    }\n    return this;\n  }\n", "raw_comment": "  /**\n   * Add an action identified by an action key to the user state.\n   * If the user state is null, a java.util.Map is created and the\n   * key-action pair is populated into the java.util.Map object.\n   * This java.util.Map object is then used as the new Component user state.\n   * If the user state is already a java.util.Map, the new key-action\n   * pair is directly populated into it.\n   * @param key the action key.\n   * @param a the action.\n   * @return this LifecycleHelper object.\n   */\n", "code": "public lifecycle helper set action object key instance listener a final object state cc get state if state null final map map new java util hash map map put key a this cc this cc with state map else final map map map state map put key a return this\n", "comment": "add an action identified by an action key to the user state\n"}
{"id": "2031458", "raw_code": "  public LifecycleHelper starter(InstanceListener a){\n    return setAction(DefaultLifecycle.START, a);\n  }\n", "raw_comment": "  /**\n   * Add a starter action.\n   * @param a the action.\n   * @return this LifecycleHelper object.\n   */\n", "code": "public lifecycle helper starter instance listener a return set action default lifecycle start a\n", "comment": "add a starter action\n"}
{"id": "2031459", "raw_code": "  public LifecycleHelper stopper(InstanceListener a){\n    return setAction(DefaultLifecycle.STOP, a);\n  }\n", "raw_comment": "  /**\n   * Add a stopper action.\n   * @param a the action.\n   * @return this LifecycleHelper object.\n   */\n", "code": "public lifecycle helper stopper instance listener a return set action default lifecycle stop a\n", "comment": "add a stopper action\n"}
{"id": "2031461", "raw_code": "  public LifecycleHelper initializer(InstanceListener a){\n    return setAction(DefaultLifecycle.INIT, a);\n  }\n", "raw_comment": "  /**\n   * Add an initializer action.\n   * @param a the action.\n   * @return this LifecycleHelper object.\n   */\n", "code": "public lifecycle helper initializer instance listener a return set action default lifecycle init a\n", "comment": "add an initializer action\n"}
{"id": "2031463", "raw_code": "  public LifecycleHelper disposer(InstanceListener a){\n    return setAction(DefaultLifecycle.DISPOSE, a);\n  }\n", "raw_comment": "  /**\n   * Add a disposer action.\n   * @param a the action.\n   * @return this LifecycleHelper object.\n   */\n", "code": "public lifecycle helper disposer instance listener a return set action default lifecycle dispose a\n", "comment": "add a disposer action\n"}
{"id": "2031521", "raw_code": "  public Constructor getConstructor() {\n    return ctor;\n  }\n", "raw_comment": "  /**\n   * Gets the encapsulated constructor object.\n   * @return the constructor object.\n   */\n", "code": "public constructor get constructor return ctor\n", "comment": "gets the encapsulated constructor object\n"}
{"id": "2031527", "raw_code": "  public Field getField() {\n    return fld;\n  }\n", "raw_comment": "  /**\n   * Get the encapsulated Field object.\n   * @return the Field object.s\n   */\n", "code": "public field get field return fld\n", "comment": "get the encapsulated field object\n"}
{"id": "2031537", "raw_code": "  public Set getPropertyNames(){\n    return java.util.Collections.unmodifiableSet(props.keySet());\n  }\n", "raw_comment": "  /**\n   * Get the property names of this bean type.\n   * @return the set of all the property names.\n   */\n", "code": "public set get property names return java util collections unmodifiable set props key set\n", "comment": "get the property names of this bean type\n"}
{"id": "2031538", "raw_code": "  public PropertyDescriptor getPropertyDescriptor(String name){\n    return (PropertyDescriptor)props.get(name);\n  }\n", "raw_comment": "  /**\n   * Get the PropertyDescriptor for a given property.\n   * @param name the property name.\n   * @return The PropertyDescriptor object,\n   * null if the property is not found.\n   */\n", "code": "public property descriptor get property descriptor string name return property descriptor props get name\n", "comment": "get the property descriptor for a given property\n"}
{"id": "2031971", "raw_code": "    protected Component prepSER_isSerializable(YanContainer yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>isSerializable</em>. Overload this function, if the Component supports\n     * serialization.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ser is serializable yan container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em is serializable em\n"}
{"id": "2031980", "raw_code": "    protected Component prepSER_isXStreamSerializable(YanContainer yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>isXStreamSerializable</em>. Overload this function, if the Component supports\n     * serialization.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ser is xstream serializable yan container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em is xstream serializable em\n"}
{"id": "2031981", "raw_code": "    protected Component prepVER_verificationFails(YanContainer yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>verificationFailsWithUnsatisfiedDependency</em>. Overload this function, if the\n     * Component's verification can fail e.g. due to an unresolved dependency.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test, that fails for the verification, e.g. because of a compoennt with missing\n     *               dependencies. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ver verification fails yan container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em verification fails with unsatisfied dependency em\n"}
{"id": "2031985", "raw_code": "    protected Component prepINS_createsNewInstances(YanContainer yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>createsNewInstances</em>. Overload this function, if the Component is instantiating. It\n     * should create a new instance with every call.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ins creates new instances yan container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em creates new instances em\n"}
{"id": "2032002", "raw_code": "    protected Component prepINS_runtimeExceptionIsRethrown(YanContainer yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>runtimeExceptionIsRethrown</em>. Overload this function, if the Component is\n     * instantiating.\n     * @param yan container, may probably not be used.\n     * @return a Component of the type to test with a component that fails with a {@link RuntimeException}at\n     *               instantiation. Registration in the pico is not necessary.\n     */\n", "code": "protected component prep ins runtime exception is rethrown yan container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em runtime exception is rethrown em\n"}
{"id": "2032027", "raw_code": "    protected Component prepRES_failingVerificationWithCyclicDependencyException(YanContainer yan) {\n        throw new AssertionFailedError(\"You have to overwrite this method for a useful test\");\n    }\n", "raw_comment": "    /**\n     * Prepare the test <em>failingVerificationWithCyclicDependencyException</em>. Overload this function, if the\n     * Component is resolves dependencies.\n     * @param yan container, used to register dependencies.\n     * @return a Component of the type to test with a component that has cyclic dependencies. You have to register the\n     *               component itself in the pico.\n     */\n", "code": "protected component prep res failing verification with cyclic dependency exception yan container yan throw new assertion failed error you have to overwrite this method for a useful test\n", "comment": "prepare the test em failing verification with cyclic dependency exception em\n"}
{"id": "45492691", "raw_code": "\tpublic void buildClassifier(Instances data) throws Exception {\n\t\t  // Classifier\n\t\t // testovani datoveho souboru, jestli vyhovuje\n        // pokud nevyhovuje, testWithFail() vyhodi Exception\n\t\tgetCapabilities().testWithFail(data);  \n\t\t\n        // remove instances with missing class\n\t    data = new Instances(data);\n\t    data.deleteWithMissingClass();\n\t\t// tady pak vola\n\t}\n", "raw_comment": "\t/**\n\t * This method construct classsifier\n\t */\n", "code": "public void build classifier instances data throws exception classifier testovani datoveho souboru jestli vyhovuje pokud nevyhovuje test with fail vyhodi exception get capabilities test with fail data remove instances with missing class data new instances data data delete with missing class tady pak vola\n", "comment": "this method construct classsifier\n"}
{"id": "45492741", "raw_code": "\tpublic String getTabTitle() {\n\t\treturn \"ERP Preprocess\";\n\t}\n", "raw_comment": "\t/**\n\t * Returns the title for the tab in the Explorer\n\t */\n", "code": "public string get tab title return erp preprocess\n", "comment": "returns the title for the tab in the explorer\n"}
{"id": "45492746", "raw_code": "\tpublic String getTabTitleToolTip() {\n\t\treturn \"Weka-ERP preprocess tab for ERP and EEG researchs\";\n\t}\n", "raw_comment": "\t/**\n\t * Returns the tooltip for the tab in the Explorer\n\t */\n", "code": "public string get tab title tool tip return weka erp preprocess tab for erp and eeg researchs\n", "comment": "returns the tooltip for the tab in the explorer\n"}
{"id": "45492748", "raw_code": "\tpublic void setExplorer(Explorer parent) {\n\t\texplorer = parent;\n\t\t\n\t}\n", "raw_comment": "\t/**\n\t * Sets the Explorer to use as parent frame\n\t */\n", "code": "public void set explorer explorer parent explorer parent\n", "comment": "sets the explorer to use as parent frame\n"}
{"id": "45492756", "raw_code": "\tpublic void setLog(Logger newLog) {\n\t\tlog = newLog;\n\t}\n", "raw_comment": "   /**\n\t* Sets the Logger to receive informational messages\n\t*\n\t* @param newLog the Logger that will now get info messages\n\t*/\n", "code": "public void set log logger new log log new log\n", "comment": "sets the logger to receive informational messages\n"}
{"id": "45492770", "raw_code": "\tpublic String globalInfo() {\n\t\treturn \"Reads a file that is MTRARFF format.\"\n\t      \t+ \" For more information about MTRARFF file, please visit http://www.zcu.cz/\";\n\t  }\n", "raw_comment": "\t /**\n\t  * Returns a string describing this attribute evaluator\n\t  * @return a description of the evaluator suitable for\n\t  * displaying in the explorer/experimenter gui\n\t  */\n", "code": "public string global info return reads a file that is mtrarff format for more information about mtrarff file please visit http www zcu cz\n", "comment": "returns a string describing this attribute evaluator\n"}
{"id": "45492772", "raw_code": "\tpublic Instances getDataSet() throws IOException {\n\t\tInstances dataset = null;\n\t\t\n\t\tif(mtr != null) {\n\t\t\t// set all relations tables\n\t\t\trelTables = mtr.getRelations();\n\t\t}\n\t\treturn dataset;\n\t}\n", "raw_comment": "\t/**\n\t * Return the full data set. If the structure hasn't yet been determined\n\t * by a call to getStructure then method should do so before processing\n\t * the rest of the data set.\n\t * \n\t * <br><i>Czech commentary :</i><br>\n\t * Metoda vrac\u00ed \u00fapln\u00fd soubor dat. Jestli\u017ee nebyla je\u0161t\u011b ur\u010den\u00e1 struktura\n\t * vol\u00e1n\u00edm metody getStructure(), pak by metoda m\u011bla tak u\u010dinit p\u0159ed t\u00edm,\n\t * ne\u017e dojde ke zpracov\u00e1n\u00ed zbytku dat souboru.\n\t *\n\t * @return the structure of the data set as an empty set of Instances\n\t * @exception IOException if there is no source or parsing fails\n\t */  \n", "code": "public instances get data set throws ioexception instances dataset null if mtr null set all relations tables rel tables mtr get relations return dataset\n", "comment": "return the full data set\n"}
{"id": "45492776", "raw_code": "\t  public String globalInfo() {\n\t    return \"Reads a file that is EDF format.\"\n\t      + \" For more information about EDF(European Data format) file, please visit http://www.edfplus.info/\";\n\t  }\n", "raw_comment": "\t/**\n\t   * Returns a string describing this attribute evaluator\n\t   * @return a description of the evaluator suitable for\n\t   * displaying in the explorer/experimenter gui\n\t   */\n", "code": "public string global info return reads a file that is edf format for more information about edf european data format file please visit http www edfplus info\n", "comment": "returns a string describing this attribute evaluator\n"}
{"id": "45492777", "raw_code": "\tpublic String getFileDescription() {\n\t\treturn \"MrtArff data files\";\n\t}\n", "raw_comment": "\t/**\n\t * Returns a description of the file type.\n\t * This description is view in GenericObjectEdior\n\t * \n\t * <br><i>Czech commentary :</i>\n\t * Metoda vraci popis daneho souboroveho formatu.\n\t * Tento popis je k videni v GenericObjectEditor\n\t * a ve FileChooser.\n\t *\n\t * @return a short file description\n\t */\n", "code": "public string get file description return mrt arff data files\n", "comment": "returns a description of the file type\n"}
{"id": "45492838", "raw_code": "\tprivate void setView(boolean view) {\n\t\tthis.view = view;\n\t}\n", "raw_comment": "\t/**\n\t * Nastaven\u00ed viditelnosti ciz\u00edho kl\u00ed\u010de\n\t * @param view true - if foreign key can be display\n\t */\n", "code": "private void set view boolean view this view view\n", "comment": "nastaven viditelnosti ciz ho kl e\n"}
{"id": "45492843", "raw_code": "\tprivate void setDisplay(boolean isDisplay) {\n\t\tthis.isDisplay = isDisplay;\n\t}\n", "raw_comment": "\t/**\n\t * Nastaven\u00ed zobrazitelnosti tabulky\n\t * @param isDisplay true - if table can be display in GUI\n\t */\n", "code": "private void set display boolean is display this is display is display\n", "comment": "nastaven zobrazitelnosti tabulky\n"}
{"id": "45492847", "raw_code": "\tpublic void setURL(String url) throws Exception {\n\t\t// NOT IMPLEMENTED YET\t\t\n\t}\n", "raw_comment": "\t/**\n\t * NOT IMPLEMENTED YET\n\t */\n", "code": "public void set url string url throws exception not implemented yet\n", "comment": "not implemented yet\n"}
{"id": "45494255", "raw_code": "  protected void createTitle(String title) {\n    String\tnewTitle;\n    \n    newTitle = \"Weka-ERP \" + Copyright.getVersionZCU();\n    if (title.length() != 0)\n      newTitle += \" - \" + title;\n    \n    setTitle(newTitle);\n  }\n", "raw_comment": "  /**\n   * creates and displays the title.\n   * \n   * @param title \tthe additional part of the title\n   */\n", "code": "protected void create title string title string new title new title weka erp copyright get version zcu if title length 0 new title title set title new title\n", "comment": "creates and displays the title\n"}
{"id": "15464713", "raw_code": "    public void reset() {\n       for ( int ia=0; ia<m_nbargs; ia++ )\n       {\n           m_dx[ia]=0.;\n           m_dy[ia]=0.;\n       }\n    }\n", "raw_comment": "    /**\n     * reset all aggrgates positions\n     * \n     */\n", "code": "public void reset for int ia 0 ia m nbargs ia m dx ia 0 m dy ia 0\n", "comment": "reset all aggrgates positions\n"}
{"id": "15464720", "raw_code": "    public double getDx(int index) {\n        return m_dx[index];\n    }\n", "raw_comment": "    /**\n     * accessor to the x displacement\n     */\n", "code": "public double get dx int index return m dx index\n", "comment": "accessor to the x displacement\n"}
{"id": "15464722", "raw_code": "    public double getDy(int index) {\n        return m_dy[index];\n    }\n", "raw_comment": "    /**\n     * accessor to the y displacement\n     */\n", "code": "public double get dy int index return m dy index\n", "comment": "accessor to the y displacement\n"}
{"id": "1907125", "raw_code": "\tprivate String evalGroups(String queryString, Matcher matcher) {\n\t\tString result = queryString;\n\t\t\n\t\tPattern p = Pattern.compile(\"\\\\[(\\\\d*)\\\\]\");\n\t\tMatcher m = p.matcher(result);\n\t\t\n\t\t// replace all group IDs by the corresponding parts of the question\n\t\twhile (m.find()) {\n\t\t\tint group = Integer.parseInt(m.group(1));\n\t\t\t\n\t\t\tresult = result.replace(m.group(), matcher.group(group));\n\t\t}\n\t\t\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Replaces group identifiers of the format <code>[group_no]</code> by the\n\t * corresponding group captured by a <code>Matcher</code> that applied the\n\t * question pattern to the question string.\n\t * \n\t * @param queryString query string containing group identifiers\n\t * @param matcher the <code>Matcher</code> that group IDs refer to\n\t * @return query string without group identifiers\n\t */\n", "code": "private string eval groups string query string matcher matcher string result query string pattern p pattern compile d matcher m p matcher result replace all group ids by the corresponding parts of the question while m find int group integer parse int m group 1 result result replace m group matcher group group return result\n", "comment": "replaces group identifiers of the format code group no code by the\n"}
{"id": "1907126", "raw_code": "\tpublic float getScore() {\n\t\treturn score;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the score of the reformulation, used by the answer selection\n\t * module to rank results that follow from this reformulation.\n\t * \n\t * @return score of the reformulation\n\t */\n", "code": "public float get score return score\n", "comment": "returns the score of the reformulation used by the answer selection\n"}
{"id": "1907129", "raw_code": "\tprotected String readLine() {\n\t\ttry {\n\t\t\treturn new java.io.BufferedReader(new\n\t\t\t\tjava.io.InputStreamReader(System.in)).readLine();\n\t\t}\n\t\tcatch(java.io.IOException e) {\n\t\t\treturn new String(\"\");\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Reads a line from the command prompt.\n\t * \n\t * @return user input\n\t */\n", "code": "protected string read line try return new java io buffered reader new java io input stream reader system in read line catch java io ioexception e return new string\n", "comment": "reads a line from the command prompt\n"}
{"id": "1907134", "raw_code": "\tpublic String translateEnglish(String question) {\n\t\tString translatedQuestion = question;\n\t\t\n\t\ttry {\n\t\t\ttranslatedQuestion = Translate.translate(question, Language.GERMAN, Language.ENGLISH); \n\t\t} catch (Exception e) {\n\t\t\tMsgPrinter.printErrorMsg(\"Could not perform Translation, please contact your software vendor to report this error!\");\n\t\t}\n\t\t\n\t\treturn translatedQuestion;\n\t}\n", "raw_comment": "\t/**\n\t * Translates a German question into English.\n\t * \n\t * @param question The question String which is supposed to be translated into German\n\t * @return translatedQuestion\n\t */\n", "code": "public string translate english string question string translated question question try translated question translate translate question language german language english catch exception e msg printer print error msg could not perform translation please contact your software vendor to report this error return translated question\n", "comment": "translates a german question into english\n"}
{"id": "1907135", "raw_code": "\tpublic String queryString(String target, String[] context, String kws[]) {\n\t\t// include the TARGET object in the query string\n\t\tString queryString = \"\\\"\" + target + \"\\\"\";\n\t\t\n\t\t// include the CONTEXT objects (if any) in the query string\n\t\tfor (String ct : context) queryString += \" \\\"\" + ct + \"\\\"\";\n\t\t\n\t\t// include the keywords (for question answering) or the answer string\n\t\t// (for pattern learning) in the query string\n\t\tfor (String kw : kws) queryString += \" \" + kw;\n\t\t\n\t\treturn queryString;\n\t}\n", "raw_comment": "\t/**\n\t * Creates a query string from the interpretation of a question and the\n\t * keywords in the question (for question answering only) or an answer\n\t * string (for pattern learning only).\n\t * \n\t * @param target TARGET object\n\t * @param context CONTEXT objects\n\t * @param kws keywords in the question string (for question answering) or\n\t * \t\t\t  answer string (for pattern learning)\n\t * @return query string\n\t */\n", "code": "public string query string string target string context string kws include the target object in the query string string query string target include the context objects if any in the query string for string ct context query string ct include the keywords for question answering or the answer string for pattern learning in the query string for string kw kws query string kw return query string\n", "comment": "creates a query string from the interpretation of a question and the\n"}
{"id": "1907145", "raw_code": "\tpublic AnalyzedQuestion getAnalyzedQuestion() {\n\t\treturn analyzedQuestion;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the analyzed question\n\t * \n\t * @return analyzed question\n\t */\n", "code": "public analyzed question get analyzed question return analyzed question\n", "comment": "returns the analyzed question\n"}
{"id": "1907147", "raw_code": "\tpublic boolean extractWith(String technique) {\n\t\tif (extractionTechniques == null) return false;\n\t\t\n\t\tfor (String extractionTechnique : extractionTechniques)\n\t\t\tif (technique.equals(extractionTechnique)) return true;\n\t\t\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Checks if the given answer extraction technique is applied to results\n\t * retrieved with this query.\n\t * \n\t * @param technique answer extraction technique\n\t * @return <code>true</code> iff the technique is used\n\t */\n", "code": "public boolean extract with string technique if extraction techniques null return false for string extraction technique extraction techniques if technique equals extraction technique return true return false\n", "comment": "checks if the given answer extraction technique is applied to results\n"}
{"id": "1907148", "raw_code": "\tpublic QuestionInterpretation getInterpretation() {\n\t\treturn qi;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the interpretation of the question used to generate this query.\n\t * \n\t * @return question interpretation\n\t */\n", "code": "public question interpretation get interpretation return qi\n", "comment": "returns the interpretation of the question used to generate this query\n"}
{"id": "1907150", "raw_code": "\tpublic void setAnalyzedQuestion(AnalyzedQuestion analyzedQuestion) {\n\t\tthis.analyzedQuestion = analyzedQuestion;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the analyzed question.\n\t * \n\t * @param analyzedQuestion analyzed question\n\t */\n", "code": "public void set analyzed question analyzed question analyzed question this analyzed question analyzed question\n", "comment": "sets the analyzed question\n"}
{"id": "1907153", "raw_code": "\tpublic void setScore(float score) {\n\t\tthis.score = score;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the score of the query.\n\t * \n\t * @param score score of the query\n\t */\n", "code": "public void set score float score this score score\n", "comment": "sets the score of the query\n"}
{"id": "1907155", "raw_code": "\tpublic void setExtractionTechniques(String[] techniques) {\n\t\textractionTechniques = techniques;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the answer extraction techniques that are applied to results\n\t * retrieved with this query.\n\t * \n\t * @param techniques answer extraction techniques\n\t */\n", "code": "public void set extraction techniques string techniques extraction techniques techniques\n", "comment": "sets the answer extraction techniques that are applied to results\n"}
{"id": "1907157", "raw_code": "\tpublic boolean addExtractionTechnique(String technique) {\n\t\t// check if the extraction technique has already been added\n\t\tif (extractionTechniques != null)\n\t\t\tfor (String existing : extractionTechniques)\n\t\t\t\tif (technique.equals(existing)) return false;\n\t\t\n\t\t// add new extraction technique\n\t\tString[] newTechniques;\n\t\tif (extractionTechniques == null) {\n\t\t\tnewTechniques = new String[1];\n\t\t} else {\n\t\t\tnewTechniques = new String[extractionTechniques.length + 1];\n\t\t\tfor (int i = 0; i < extractionTechniques.length; i++)\n\t\t\t\tnewTechniques[i] = extractionTechniques[i];\n\t\t}\n\t\tnewTechniques[newTechniques.length - 1] = technique;\n\t\textractionTechniques = newTechniques;\n\t\treturn true;\n\t}\n", "raw_comment": "\t/**\n\t * Adds an answer extraction technique that is applied to results retrieved\n\t * with this query.\n\t * \n\t * @param technique answer extraction technique\n\t * @return <code>true</code> iff a new technique was added\n\t */\n", "code": "public boolean add extraction technique string technique check if the extraction technique has already been added if extraction techniques null for string existing extraction techniques if technique equals existing return false add new extraction technique string new techniques if extraction techniques null new techniques new string 1 else new techniques new string extraction techniques length 1 for int i 0 i extraction techniques length i new techniques i extraction techniques i new techniques new techniques length 1 technique extraction techniques new techniques return true\n", "comment": "adds an answer extraction technique that is applied to results retrieved\n"}
{"id": "1907158", "raw_code": "\tpublic void setInterpretation(QuestionInterpretation qi) {\n\t\tthis.qi = qi;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the interpretation of the question used to generate this query.\n\t * \n\t * @param qi question interpretation\n\t */\n", "code": "public void set interpretation question interpretation qi this qi qi\n", "comment": "sets the interpretation of the question used to generate this query\n"}
{"id": "1907159", "raw_code": "\tpublic void setQuestionString(String questionString) {\n\t\tthis.questionString = questionString;\n\t}\n", "raw_comment": "\t/**\n\t * Sets a modified question string, e.g. after coreference resolution.\n\t * \n\t * @param questionString modified question string\n\t */\n", "code": "public void set question string string question string this question string question string\n", "comment": "sets a modified question string e\n"}
{"id": "1907161", "raw_code": "\tpublic void setAnswers(TRECAnswer[] answers) {\n\t\tthis.answers = answers;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the answers determined by the QA engine.\n\t * \n\t * @param answers the answers \n\t */\n", "code": "public void set answers trecanswer answers this answers answers\n", "comment": "sets the answers determined by the qa engine\n"}
{"id": "1907163", "raw_code": "\tpublic Query getCopy() {\n\t\tQuery query = new Query(queryString, analyzedQuestion, score);\n\t\tquery.extractionTechniques = extractionTechniques;\n\t\tquery.qi = qi;\n\t\t\n\t\treturn query;\n\t}\n", "raw_comment": "\t/**\n\t * Return a copy of this <code>Query</code> object.\n\t * \n\t * @return copy of the <code>Query</code> object\n\t */\n", "code": "public query get copy query query new query query string analyzed question score query extraction techniques extraction techniques query qi qi return query\n", "comment": "return a copy of this code query code object\n"}
{"id": "1907164", "raw_code": "\tpublic void setInterpretation(QuestionInterpretation interpretation) {\n\t\tthis.interpretation = interpretation;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the question interpretation that led to the top answer.\n\t * \n\t * @param interpretation top interpretation\n\t */\n", "code": "public void set interpretation question interpretation interpretation this interpretation interpretation\n", "comment": "sets the question interpretation that led to the top answer\n"}
{"id": "1907167", "raw_code": "\tpublic String getQuestionString() {\n\t\treturn questionString;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the question string.\n\t * \n\t * @return question string\n\t */\n", "code": "public string get question string return question string\n", "comment": "returns the question string\n"}
{"id": "1907169", "raw_code": "\tpublic QuestionInterpretation getInterpretation() {\n\t\treturn interpretation;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the question interpretation that led to the top answer if\n\t * available.\n\t * \n\t * @return top interpretation\n\t */\n", "code": "public question interpretation get interpretation return interpretation\n", "comment": "returns the question interpretation that led to the top answer if\n"}
{"id": "1907173", "raw_code": "\tpublic String getAnswerString() {\n\t\treturn answerString;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the answer string.\n\t * \n\t * @return answer string\n\t */\n", "code": "public string get answer string return answer string\n", "comment": "returns the answer string\n"}
{"id": "1907175", "raw_code": "\tpublic String getSupportDoc() {\n\t\treturn supportDoc;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the supporting document.\n\t * \n\t * @return supporting document\n\t */\n", "code": "public string get support doc return support doc\n", "comment": "returns the supporting document\n"}
{"id": "1907176", "raw_code": "\tpublic String getCondensedTarget() {\n\t\treturn condensedTarget;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the condensed target.\n\t * \n\t * @return condensed target\n\t */\n", "code": "public string get condensed target return condensed target\n", "comment": "returns the condensed target\n"}
{"id": "1907177", "raw_code": "\tpublic boolean isNounPhrase() {\n\t\treturn nounPhrase;\n\t}\n", "raw_comment": "\t/**\n\t * Checks if the target is a noun phrase.\n\t * \n\t * @return <code>true</code> iff the target is a noun phrase.\n\t */\n", "code": "public boolean is noun phrase return noun phrase\n", "comment": "checks if the target is a noun phrase\n"}
{"id": "1907181", "raw_code": "\tpublic void setCondensedTarget(String condensedTarget) {\n\t\tthis.condensedTarget = condensedTarget;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the condensed target.\n\t * \n\t * @param condensedTarget condensed target\n\t */\n", "code": "public void set condensed target string condensed target this condensed target condensed target\n", "comment": "sets the condensed target\n"}
{"id": "1907182", "raw_code": "\tpublic void setTargetTypes(String[] targetTypes) {\n\t\tthis.targetTypes = targetTypes;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the possible target types.\n\t * \n\t * @param targetTypes possible target types\n\t */\n", "code": "public void set target types string target types this target types target types\n", "comment": "sets the possible target types\n"}
{"id": "1907183", "raw_code": "\tpublic void setNounPhrase(boolean nounPhrase) {\n\t\tthis.nounPhrase = nounPhrase;\n\t}\n", "raw_comment": "\t/**\n\t * Marks the target as a noun phrase.\n\t * \n\t * @param nounPhrase <code>true</code> or <code>false</code>\n\t */\n", "code": "public void set noun phrase boolean noun phrase this noun phrase noun phrase\n", "comment": "marks the target as a noun phrase\n"}
{"id": "1907188", "raw_code": "\tprivate void setVerbTerm(Term[] terms) {\n\t\tString tokenizedVerb = NETagger.tokenizeWithSpaces(verb);\n\t\tPattern p = Pattern.compile(\"(^|\\\\W)\" + RegexConverter.strToRegex(tokenizedVerb) + \"($|\\\\W)\");\n\t\t\n\t\tfor (Term term : terms) {\n\t\t\tString tokenizedTerm = NETagger.tokenizeWithSpaces(term.getText());\n\t\t\tMatcher m = p.matcher(tokenizedTerm);\n\t\t\tif (m.find()) {\n\t\t\t\tverbTerm = term;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Sets the term for the verb.\n\t * \n\t * @param terms the terms in the sentence the predicate was extracted from\n\t */\n", "code": "private void set verb term term terms string tokenized verb netagger tokenize with spaces verb pattern p pattern compile w regex converter str to regex tokenized verb w for term term terms string tokenized term netagger tokenize with spaces term get text matcher m p matcher tokenized term if m find verb term term break\n", "comment": "sets the term for the verb\n"}
{"id": "1907193", "raw_code": "\tpublic boolean contains(String word) {\n\t\treturn dict.contains(word);\n\t}\n", "raw_comment": "\t/**\n\t * Looks up a word.\n\t * \n\t * @param word the word to look up\n\t * @return <code>true</code> iff the word was found\n\t */\n", "code": "public boolean contains string word return dict contains word\n", "comment": "looks up a word\n"}
{"id": "1907196", "raw_code": "\tpublic int compareTo(Predicate p) {\n\t\tdouble diff = simScore - p.simScore;\n\t\t\n\t\tif (diff < 0) return -1;\n\t\telse if (diff > 0) return 1;\n\t\telse return 0;\n\t}\n", "raw_comment": "\t/**\n\t * Compares two predicates by comparing their similarity scores.\n\t * \n\t * @param p the predicate to be compared\n\t * @return a negative integer, zero or a positive integer as this predicate is less than, equal to or greater than\n\t *         the specified predicate\n\t */\n", "code": "public int compare to predicate p double diff sim score p sim score if diff 0 return 1 else if diff 0 return 1 else return 0\n", "comment": "compares two predicates by comparing their similarity scores\n"}
{"id": "1907202", "raw_code": "\tpublic boolean contains(String word) {\n//\t\t// look for compound nouns and verbs\n//\t\treturn isCompoundWord(word);\n\t\t// only look for compound nouns\n\t\treturn isCompoundNoun(word);\n\t}\n", "raw_comment": "\t/**\n\t * Looks up a word.\n\t * \n\t * @param word the word to look up\n\t * @return <code>true</code> iff the word was found\n\t */\n", "code": "public boolean contains string word look for compound nouns and verbs return is compound word word only look for compound nouns return is compound noun word\n", "comment": "looks up a word\n"}
{"id": "1907205", "raw_code": "\tprivate String getMD5(String s) {\n\t\tMessageDigest digest;\n\t\ttry {\n\t\t\t digest = MessageDigest.getInstance(\"MD5\");\n\t\t} catch (NoSuchAlgorithmException e) {return null;}\n\t\tdigest.update(s.getBytes());\t\t\n\t\tbyte[] md5sum = digest.digest();\n\t\tBigInteger bigInt = new BigInteger(1, md5sum);\n\t\t\n\t\treturn bigInt.toString(16);\n\t}\n", "raw_comment": "\t/**\n\t * Computes the MD5 checksum of a string.\n\t * \n\t * @param s the string\n\t * @return checksum, or <code>null</code> if the MD5 algorithm is not\n\t *         available\n\t */\n", "code": "private string get md5 string s message digest digest try digest message digest get instance md5 catch no such algorithm exception e return null digest update s get bytes byte md5sum digest digest big integer big int new big integer 1 md5sum return big int to string 16\n", "comment": "computes the md5 checksum of a string\n"}
{"id": "1907206", "raw_code": "\tpublic boolean write(String key, String[] entries) {\n\t\t// compute checksum for the key\n\t\tString checksum = getMD5(key);\n\t\tif (checksum == null) return false;\n\t\t\n\t\t// write new cache entries to a file, using the checksum as the filename\n\t\tFile file = new File(cacheDir, new String(checksum));\n\t\ttry {\n\t\t\tPrintWriter out = new PrintWriter(file);\n\t\t\tfor (String entry : entries) out.println(entry);\n\t\t\tout.close();\n\t\t\t\n\t\t\treturn true;\n\t\t} catch (IOException e) {return false;}  // entries could not be written\n\t}\n", "raw_comment": "\t/**\n\t * Writes new entries to the cache. Existing entries with the given key are\n\t * overwritten.\n\t * \n\t * @param key the key\n\t * @param entries the entries\n\t * @return <code>true<code> iff the entries could be written to the cache\n\t */\n", "code": "public boolean write string key string entries compute checksum for the key string checksum get md5 key if checksum null return false write new cache entries to a file using the checksum as the filename file file new file cache dir new string checksum try print writer out new print writer file for string entry entries out println entry out close return true catch ioexception e return false entries could not be written\n", "comment": "writes new entries to the cache\n"}
{"id": "1907207", "raw_code": "\tpublic void add(String word) {\n\t\tif (word != null) {\n\t\t\tword = NETagger.tokenizeWithSpaces(word.trim().toLowerCase());\n\t\t\tword = SnowballStemmer.stemAllTokens(word);\n\t\t\t\n\t\t\t// add whole word\n\t\t\tif (word.length() > 0) words.add(word);\n\t\t\t\n\t\t\t// add tokens of word\n\t\t\tString[] tokens = word.split(\" \");\n\t\t\tif (tokens.length > maxTokens) maxTokens = tokens.length;\n\t\t\tfor (int p = 0; p < tokens.length; p++)\n\t\t\t\tif (tokens[p].length() > 0) this.tokens.add(tokens[p]);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Adds a word to the dictionary.\n\t * \n\t * @param word the word to add\n\t */\n", "code": "public void add string word if word null word netagger tokenize with spaces word trim to lower case word snowball stemmer stem all tokens word add whole word if word length 0 words add word add tokens of word string tokens word split if tokens length max tokens max tokens tokens length for int p 0 p tokens length p if tokens p length 0 this tokens add tokens p\n", "comment": "adds a word to the dictionary\n"}
{"id": "1907208", "raw_code": "\tpublic void run() {\n\t\t// wait for timeout or until notification\n\t\ttry {\n\t\t\tsynchronized (threadToTimeout) {\n\t\t\t\tthreadToTimeout.wait(timeout);\n\t\t\t}\n\t\t} catch (InterruptedException e) {}\n\t\t// stop thread if it is still running\n\t\tthreadToTimeout.interrupt();\n\t}\n", "raw_comment": "\t/**\n\t * Waits for the time specified in <code>timeout</code> and then interrupts\n\t * <code>threadToTimeout</code>.\n\t */\n", "code": "public void run wait for timeout or until notification try synchronized thread to timeout thread to timeout wait timeout catch interrupted exception e stop thread if it is still running thread to timeout interrupt\n", "comment": "waits for the time specified in code timeout code and then interrupts\n"}
{"id": "1907210", "raw_code": "\tpublic boolean contains(String word) {\n\t\tword = NETagger.tokenizeWithSpaces(word.trim().toLowerCase());\n\t\tword = SnowballStemmer.stemAllTokens(word);\n\t\t\n\t\treturn words.contains(word);\n\t}\n", "raw_comment": "\t/**\n\t * Looks up a word.\n\t * \n\t * @param word the word to look up\n\t * @return <code>true</code> iff the word was found\n\t */\n", "code": "public boolean contains string word word netagger tokenize with spaces word trim to lower case word snowball stemmer stem all tokens word return words contains word\n", "comment": "looks up a word\n"}
{"id": "1907212", "raw_code": "\tpublic boolean containsToken(String token) {\n\t\ttoken = SnowballStemmer.stem(token.trim().toLowerCase());\n\t\t\n\t\treturn tokens.contains(token);\n\t}\n", "raw_comment": "\t/**\n\t * Looks up a word token.\n\t * \n\t * @param token the word token to look up\n\t * @return <code>true</code> iff a word in the dictionary contains the token\n\t */\n", "code": "public boolean contains token string token token snowball stemmer stem token trim to lower case return tokens contains token\n", "comment": "looks up a word token\n"}
{"id": "1907214", "raw_code": "\tpublic boolean setAll(String[] ids, String[] verbArgs) {\n\t\tArrayList<String> missingList = new ArrayList<String>();\n\t\t\n\t\tboolean valid = true;\n\t\tfor (int i = 0; i < verbArgs.length; i++)\n\t\t\tif (verbArgs[i].equals(MISSING_ARG) && !ids[i].equals(\"TARGET\")) {\n\t\t\t\tif (!missingList.contains(ids[i])) missingList.add(ids[i]);\n\t\t\t} else {\n\t\t\t\tif (!set(ids[i], verbArgs[i])) valid = false;\n\t\t\t}\n\t\t\n\t\tmissingArgs = missingList.toArray(new String[missingList.size()]);\n\t\t\n\t\treturn valid;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the verb and/or arguments of the predicate.\n\t * \n\t * @param ids identifiers of the verb and/or arguments\n\t * @param verbArgs verb and/or arguments to be set\n\t * @return <code>true</code> iff all identifiers are valid\n\t */\n", "code": "public boolean set all string ids string verb args array list string missing list new array list string boolean valid true for int i 0 i verb args length i if verb args i equals missing arg ids i equals target if missing list contains ids i missing list add ids i else if set ids i verb args i valid false missing args missing list to array new string missing list size return valid\n", "comment": "sets the verb and or arguments of the predicate\n"}
{"id": "1907216", "raw_code": "\tpublic boolean fuzzyContains(String word, int maxDistance) {\n\t\tword = NETagger.tokenizeWithSpaces(word.trim().toLowerCase());\n\t\tword = SnowballStemmer.stemAllTokens(word);\n\t\t\n\t\tif (maxDistance == 0) return this.words.contains(word);\n\t\telse if (this.words.contains(word)) return true;\n\t\t\n\t\tIterator<String> wordIter = this.words.iterator();\n\t\twhile (wordIter.hasNext())\n\t\t\tif (getLevenshteinDistance(word, wordIter.next(), maxDistance, true, 1, 1) <= maxDistance) return true;\n\t\t\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Does a fuzzy lookup for a word. The specified word w is considered as\n\t * contained in the dictionary is there is a word W in the dictionary such\n\t * that <code>LevenshteinDistance(w, W) &lt;= maxDistance</code>\n\t * \n\t * @param word the word to look up\n\t * @param maxDistance the maximum Levenshtein edit distance for fuzzy\n\t *            comparison\n\t * @return <code>true</code> iff the word was found\n\t */\n", "code": "public boolean fuzzy contains string word int max distance word netagger tokenize with spaces word trim to lower case word snowball stemmer stem all tokens word if max distance 0 return this words contains word else if this words contains word return true iterator string word iter this words iterator while word iter has next if get levenshtein distance word word iter next max distance true 1 1 max distance return true return false\n", "comment": "does a fuzzy lookup for a word\n"}
{"id": "1907219", "raw_code": "\tpublic boolean fuzzyContainsToken(String token, int maxDistance) {\n\t\ttoken = SnowballStemmer.stem(token.trim().toLowerCase());\n\t\t\n\t\tif (maxDistance == 0) return this.tokens.contains(token);\n\t\telse if (this.tokens.contains(token)) return true;\n\t\t\n\t\tIterator<String> tokenIter = this.tokens.iterator();\n\t\twhile (tokenIter.hasNext())\n\t\t\tif (getLevenshteinDistance(token, tokenIter.next(), maxDistance, true, 1, 1) <= maxDistance) return true;\n\t\t\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Does a fuzzy lookup for a token. The specified token t is considered as\n\t * contained in the dictionary is there is a token T in the dictionary such\n\t * that <code>LevenshteinDistance(t, T) &lt;= maxDistance</code>\n\t * \n\t * @param token the token to look up\n\t * @param maxDistance the maximum Levenshtein edit distance for fuzzy\n\t *            comparison\n\t * @return <code>true</code> iff a word in the dictionary contains the token\n\t */\n", "code": "public boolean fuzzy contains token string token int max distance token snowball stemmer stem token trim to lower case if max distance 0 return this tokens contains token else if this tokens contains token return true iterator string token iter this tokens iterator while token iter has next if get levenshtein distance token token iter next max distance true 1 1 max distance return true return false\n", "comment": "does a fuzzy lookup for a token\n"}
{"id": "1907221", "raw_code": "\tpublic boolean appendAll(String[] ids, String[] verbArgs) {\n\t\tArrayList<String> missingList = new ArrayList<String>();\n\t\tfor (String missingArg : missingArgs) missingList.add(missingArg);\n\t\t\n\t\tboolean valid = true;\n\t\tfor (int i = 0; i < verbArgs.length; i++)\n\t\t\tif (verbArgs[i].equals(MISSING_ARG) && !ids[i].equals(\"TARGET\")) {\n\t\t\t\tif (!missingList.contains(ids[i])) missingList.add(ids[i]);\n\t\t\t} else {\n\t\t\t\tif (!append(ids[i], verbArgs[i])) valid = false;\n\t\t\t}\n\t\t\n\t\tmissingArgs = missingList.toArray(new String[missingList.size()]);\n\t\t\n\t\treturn valid;\n\t}\n", "raw_comment": "\t/**\n\t * Appends strings to the verb and/or arguments of the predicate.\n\t * \n\t * @param ids identifiers of the verb and/or arguments\n\t * @param verbArgs strings to be appended\n\t * @return <code>true</code> iff all identifiers are valid\n\t */\n", "code": "public boolean append all string ids string verb args array list string missing list new array list string for string missing arg missing args missing list add missing arg boolean valid true for int i 0 i verb args length i if verb args i equals missing arg ids i equals target if missing list contains ids i missing list add ids i else if append ids i verb args i valid false missing args missing list to array new string missing list size return valid\n", "comment": "appends strings to the verb and or arguments of the predicate\n"}
{"id": "1907222", "raw_code": "\tpublic int getMaxTokens() {\n\t\treturn maxTokens;\n\t}\n", "raw_comment": "\t/**\t\n\t * Returns the maximum number of tokens of a word in the dictionary.\n\t * \n\t * @return maximum number of tokens\n\t */\n", "code": "public int get max tokens return max tokens\n", "comment": "returns the maximum number of tokens of a word in the dictionary\n"}
{"id": "1907228", "raw_code": "\tpublic KnowledgeAnnotator getCopy() {\n\t\tKnowledgeAnnotator ka = new WikipediaKA(name, qPatterns, qContents);\n\t\t\n\t\treturn ka;\n\t}\n", "raw_comment": "\t/**\n\t * Returns a new instance of <code>WikipediaKA</code>. A new instance is\n\t * created for each query.\n\t * \n\t * @return new instance of <code>WikipediaKA</code>\n\t */\n", "code": "public knowledge annotator get copy knowledge annotator ka new wikipedia ka name q patterns q contents return ka\n", "comment": "returns a new instance of code wikipedia ka code\n"}
{"id": "1907229", "raw_code": "\tpublic KnowledgeAnnotator getCopy() {\n\t\tWorldFactbookKA ka = new WorldFactbookKA(name, qPatterns, qContents);\n\t\tka.countries = countries;  // also copy list of countries\n\t\t\n\t\treturn ka;\n\t}\n", "raw_comment": "\t/**\n\t * Returns a new instance of <code>WorldFactbookKA</code>. A new instance is\n\t * created for each query.\n\t * \n\t * @return new instance of <code>WorldFactbookKA</code>\n\t */\n", "code": "public knowledge annotator get copy world factbook ka ka new world factbook ka name q patterns q contents ka countries countries also copy list of countries return ka\n", "comment": "returns a new instance of code world factbook ka code\n"}
{"id": "1907230", "raw_code": "\tprotected boolean matches(Query query) {\n\t\tString question = query.getAnalyzedQuestion().getQuestion();\n\t\t\n\t\tfor (int i = 0; i < qPatterns.size(); i++) {\n\t\t\tMatcher m = qPatterns.get(i).matcher(question);\n\t\t\t\n\t\t\tif (m.matches()) {\n\t\t\t\tthis.query = query;\t// save the Query object\n\t\t\t\tindex = i;\t\t\t// save the index of the pattern\n\t\t\t\tmatcher = m;\t\t// save the matcher\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Tests whether the knowledge annotator is appropriate for a question by\n\t * applying the patterns in the field <code>qPatterns</code>.\n\t * \n\t * @param query <code>Query</code> object\n\t * @return true, iff the question matches at least one of the patterns in\n\t * \t\t   <code>qPatterns</code>\n\t */\n", "code": "protected boolean matches query query string question query get analyzed question get question for int i 0 i q patterns size i matcher m q patterns get i matcher question if m matches this query query save the query object index i save the index of the pattern matcher m save the matcher return true return false\n", "comment": "tests whether the knowledge annotator is appropriate for a question by\n"}
{"id": "1907231", "raw_code": "\tprotected int getMaxResultsTotal() {\n\t\treturn MAX_RESULTS_TOTAL;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the maximum total number of search results.\n\t * \n\t * @return maximum total number of search results\n\t */\n", "code": "protected int get max results total return max results total\n", "comment": "returns the maximum total number of search results\n"}
{"id": "1907232", "raw_code": "\tpublic void run() {\n\t\tif (query != null) {\n\t\t\t// perform search\n\t\t\tResult[] results = doSearch();\n\t\t\t\n\t\t\t// pass results to class Search\n\t\t\tSearch.addResults(results);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Performs the search and passes the results to the static class\n\t * <code>Search</code>.\n\t */\n", "code": "public void run if query null perform search result results do search pass results to class search search add results results\n", "comment": "performs the search and passes the results to the static class\n"}
{"id": "1907234", "raw_code": "\tprotected String getContent() {\n\t\tString content = qContents.get(index);\n\t\t\n\t\tPattern p = Pattern.compile(\"\\\\[(\\\\d*)\\\\]\");\n\t\tMatcher m = p.matcher(content);\n\t\t\n\t\t// replace all group IDs by the corresponding parts of the question\n\t\twhile (m.find()) {\n\t\t\tint group = Integer.parseInt(m.group(1));\n\t\t\t\n\t\t\tcontent = content.replace(m.group(), matcher.group(group));\n\t\t}\n\t\t\n\t\treturn content;\n\t}\n", "raw_comment": "\t/**\n\t * Extracts the relevant content of a question by resolving the group\n\t * identifiers of the format <code>[group_no]</code> in the content string\n\t * that corresponds to the matching pattern.\n\t * \n\t * @return relevant content of the question\n\t */\n", "code": "protected string get content string content q contents get index pattern p pattern compile d matcher m p matcher content replace all group ids by the corresponding parts of the question while m find int group integer parse int m group 1 content content replace m group matcher group group return content\n", "comment": "extracts the relevant content of a question by resolving the group\n"}
{"id": "1907235", "raw_code": "\tprotected int getMaxResultsPerQuery() {\n\t\treturn MAX_RESULTS_PERQUERY;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the maximum number of search results per query.\n\t * \n\t * @return maximum total number of search results\n\t */\n", "code": "protected int get max results per query return max results perquery\n", "comment": "returns the maximum number of search results per query\n"}
{"id": "1907237", "raw_code": "\tpublic KnowledgeAnnotator getCopy() {\n\t\tKnowledgeAnnotator ka = new GermanWikipediaKA(name, qPatterns, qContents);\n\t\t\n\t\treturn ka;\n\t}\n", "raw_comment": "\t/**\n\t * Returns a new instance of <code>WikipediaKA</code>. A new instance is\n\t * created for each query.\n\t * \n\t * @return new instance of <code>WikipediaKA</code>\n\t */\n", "code": "public knowledge annotator get copy knowledge annotator ka new german wikipedia ka name q patterns q contents return ka\n", "comment": "returns a new instance of code wikipedia ka code\n"}
{"id": "1907238", "raw_code": "\tpublic KnowledgeMiner getCopy() {\n\t\treturn new YahooKM();\n\t}\n", "raw_comment": "\t/**\n\t * Returns a new instance of <code>YahooKM</code>. A new instance is created\n\t * for each query.\n\t * \n\t * @return new instance of <code>YahooKM</code>\n\t */\n", "code": "public knowledge miner get copy return new yahoo km\n", "comment": "returns a new instance of code yahoo km code\n"}
{"id": "1907239", "raw_code": "\tpublic String getKAName() {\n\t\treturn name;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the name of the knowledgeAnnotator.\n\t * \n\t * @return name of the knowledge annotator\n\t */\n", "code": "public string get kaname return name\n", "comment": "returns the name of the knowledge annotator\n"}
{"id": "1907242", "raw_code": "\tpublic boolean start(Query query) {\n\t\tKnowledgeAnnotator ka = getCopy();\n\t\t\n\t\tif (ka.matches(query)) {\n\t\t\t// wait until there are less than MAX_PENDING pending queries\n\t\t\tSearch.waitForPending();\n\t\t\t\n\t\t\tka.start();\n\t\t\t\n\t\t\t// one more pending query\n\t\t\tSearch.incPending();\n\t\t\t\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * <p>Sets the query and starts the thread if the knowledge annotator is\n\t * appropriate for the user question.</p>\n\t * \n\t * <p>This method should be used instead of the inherited\n\t * <code>start()</code> method without arguments.</p>\n\t * \n\t * @param query query object\n\t * @return true, iff the knowledge annotator is appropriate and the thread\n\t * \t\t   was started\n\t */\n", "code": "public boolean start query query knowledge annotator ka get copy if ka matches query wait until there are less than max pending pending queries search wait for pending ka start one more pending query search inc pending return true return false\n", "comment": "p sets the query and starts the thread if the knowledge annotator is\n"}
{"id": "1907244", "raw_code": "\tpublic void start(Query query) {\n\t\tint firstResult = 1;\n\t\t\n\t\twhile (firstResult <= getMaxResultsTotal()) {\n\t\t\tgetCopy().start(query, firstResult);\n\t\t\t\n\t\t\tfirstResult += getMaxResultsPerQuery();\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * <p>Creates <code>[MAX_RESULTS_TOTAL / MAX_RESULTS_PERQUERY]</code>\n\t * threads that fetch up to <code>MAX_RESULTS_TOTAL</code> results.</p>\n\t * \n\t * <p>This method should be used instead of the inherited\n\t * <code>start()</code> method without arguments.</p>\n\t * \n\t * @param query <code>Query</code> object\n\t */\n", "code": "public void start query query int first result 1 while first result get max results total get copy start query first result first result get max results per query\n", "comment": "p creates code max results total max results perquery code\n"}
{"id": "1907249", "raw_code": "\tpublic KnowledgeMiner getCopy() {\n\t\tif (indriDirs != null)\n\t\t\treturn new IndriKM(indriDirs, false);\n\t\telse\n\t\t\treturn new IndriKM(indriUrls, true);\n\t}\n", "raw_comment": "\t/**\n\t * Returns a new instance of <code>IndriKM</code>. A new instance is created\n\t * for each query.\n\t * \n\t * @return new instance of <code>IndriKM</code>\n\t */\n", "code": "public knowledge miner get copy if indri dirs null return new indri km indri dirs false else return new indri km indri urls true\n", "comment": "returns a new instance of code indri km code\n"}
{"id": "1907250", "raw_code": "\tpublic KnowledgeMiner getCopy() {\n\t\treturn new GoogleKM();\n\t}\n", "raw_comment": "\t/**\n\t * Returns a new instance of <code>GoogleKM</code>. A new instance is\n\t * created for each query.\n\t * \n\t * @return new instance of <code>GoogleKM</code>\n\t */\n", "code": "public knowledge miner get copy return new google km\n", "comment": "returns a new instance of code google km code\n"}
{"id": "1907253", "raw_code": "\tpublic KnowledgeMiner getCopy() {\n\t\treturn new YahooWikipediaKM();\n\t}\n", "raw_comment": "\t/**\n\t * Returns a new instance of <code>YahooKM</code>. A new instance is created\n\t * for each query.\n\t * \n\t * @return new instance of <code>YahooKM</code>\n\t */\n", "code": "public knowledge miner get copy return new yahoo wikipedia km\n", "comment": "returns a new instance of code yahoo km code\n"}
{"id": "1907254", "raw_code": "\tpublic KnowledgeMiner getCopy() {\n\t\tif (indriDirs != null)\n\t\t\treturn new IndriDocumentKM(indriDirs, false);\n\t\telse\n\t\t\treturn new IndriDocumentKM(indriUrls, true);\n\t}\n", "raw_comment": "\t/**\n\t * Returns a new instance of <code>IndriDocumentKM</code>. A new instance is\n\t * created for each query.\n\t * \n\t * @return new instance of <code>IndriDocumentKM</code>\n\t */\n", "code": "public knowledge miner get copy if indri dirs null return new indri document km indri dirs false else return new indri document km indri urls true\n", "comment": "returns a new instance of code indri document km code\n"}
{"id": "1907256", "raw_code": "\tpublic int compareTo(Result result) {\n\t\tfloat diff = score - result.getScore();\n\t\t\n\t\tif (diff < 0)\n\t\t\treturn -1;\n\t\telse if (diff > 0)\n\t\t\treturn 1;\n\t\telse\n\t\t\treturn 0;\n//\t\t\treturn answer.compareTo(result.getAnswer());  // tie-breaking\n\t}\n", "raw_comment": "\t/**\n\t * Compares two results by comparing their scores.\n\t * \n\t * @param result the result to be compared\n\t * @return a negative integer, zero or a positive integer as this result is\n\t *         less than, equal to or greater than the specified result\n\t */\n", "code": "public int compare to result result float diff score result get score if diff 0 return 1 else if diff 0 return 1 else return 0 return answer compare to result get answer tie breaking\n", "comment": "compares two results by comparing their scores\n"}
{"id": "1907258", "raw_code": "\tpublic boolean equals(Object o) {\n\t\t// if objects incomparable, return false\n\t\tif (!(o instanceof Result)) return false;\n\t\tResult result = (Result) o;\n\t\t\n\t\treturn answer.equals(result.answer);\n\t}\n", "raw_comment": "\t/**\n\t * Indicates whether an other result is equal to this one.\n\t * Two results are considered equal if the answer strings are equal.\n\t * \n\t * @param o the object to be compared\n\t * @return <code>true</code> iff the objects are equal\n\t */\n", "code": "public boolean equals object o if objects incomparable return false if o instanceof result return false result result result o return answer equals result answer\n", "comment": "indicates whether an other result is equal to this one\n"}
{"id": "1907262", "raw_code": "\tpublic String getAnswer() {\n\t\treturn answer;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the answer string.\n\t * \n\t * @return answer string\n\t */\n", "code": "public string get answer return answer\n", "comment": "returns the answer string\n"}
{"id": "1907263", "raw_code": "\tprivate void calculateLength() {\n\t\tlength = target.length();\n\t\t\n\t\tfor (String c : context) length += c.length();\n\t}\n", "raw_comment": "\t/**\n\t * <p>Calculates the LENGTH of the QuestionInterpretation, which is defined\n\t * as the sum of the length of the TARGET object and all CONTEXT\n\t * objects.</p>\n\t * \n\t * <p>The smaller the value, the more likely it is that the question was\n\t * interpreted correctly. A smaller value also means a greater abstraction\n\t * from the original formulation of the question and therefore the search\n\t * will return more results.</p>\n\t * \n\t * <p>On the other hand, a large value means - if the search does not fail -\n\t * a high probability of a correct answer.</p>\n\t */\n", "code": "private void calculate length length target length for string c context length c length\n", "comment": "p calculates the length of the question interpretation which is defined\n"}
{"id": "1907274", "raw_code": "\tpublic float getNormScore() {\n\t\treturn normScore;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the normalized score of the result.\n\t * \n\t * @return normalized score\n\t */\n", "code": "public float get norm score return norm score\n", "comment": "returns the normalized score of the result\n"}
{"id": "1907275", "raw_code": "\tpublic void setTarget(String target) {\n\t\tthis.target = target;\n\t\t\n\t\tcalculateLength();\n\t}\n", "raw_comment": "\t/**\n\t * Sets the TARGET of the question.\n\t * \n\t * @param target the TARGET object\n\t */\n", "code": "public void set target string target this target target calculate length\n", "comment": "sets the target of the question\n"}
{"id": "1907277", "raw_code": "\tpublic void setContext(String[] context) {\n\t\tthis.context = context;\n\t\t\n\t\tcalculateLength();\n\t}\n", "raw_comment": "\t/**\n\t * Sets the CONTEXT of the question.\n\t * \n\t * @param context the CONTEXT objects\n\t */\n", "code": "public void set context string context this context context calculate length\n", "comment": "sets the context of the question\n"}
{"id": "1907279", "raw_code": "\tpublic void dropContext() {\n\t\tthis.context = new String[0];\n\t}\n", "raw_comment": "\t/**\n\t * Drops the CONTEXT without recalculating the length.\n\t */\n", "code": "public void drop context this context new string 0\n", "comment": "drops the context without recalculating the length\n"}
{"id": "1907282", "raw_code": "\tpublic int compareTo(QuestionInterpretation qi) {\n\t\treturn length - qi.getLength();\n\t}\n", "raw_comment": "\t/**\n\t * <p>Compares this <code>QuestionInterpretation</code> to another\n\t * <code>QuestionInterpretation</code> object.</p>\n\t * \n\t * @param qi the <code>QuestionInterpretation</code> to be compared\n\t * @return a negative integer, zero, or a positive integer as this\n\t * \t\t   <code>QuestionInterpretation</code> is less than, equal to, or\n\t * \t\t   greater than the specified <code>QuestionInterpretation</code>\n\t */\n", "code": "public int compare to question interpretation qi return length qi get length\n", "comment": "p compares this code question interpretation code to another\n"}
{"id": "1907285", "raw_code": "\tpublic String toString() {\n\t\tString s = \"Property: \" + getProperty();\n\t\ts += \"\\nTarget: \" + getTarget();\n\t\tfor (String context : getContext())\n\t\t\ts += \"\\nContext: \" + context;\n\t\t\n\t\treturn s;\n\t}\n", "raw_comment": "\t/**\n\t * Returns a string representation of the interpretation.\n\t * \n\t * @return readable string\n\t */\n", "code": "public string to string string s property get property s n target get target for string context get context s n context context return s\n", "comment": "returns a string representation of the interpretation\n"}
{"id": "1907293", "raw_code": "\tpublic String getCacheID() {\n\t\treturn cacheID;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the ID of the document in the search engine cache or\n\t * <code>null</code> if it is not set.\n\t * \n\t * @return ID of the cached document or <code>null</code>\n\t */\n", "code": "public string get cache id return cache id\n", "comment": "returns the id of the document in the search engine cache or\n"}
{"id": "1907305", "raw_code": "\tprivate String replaceContextTags(String expr) {\n\t\t// compute the IDs of the groups that represent the CONTEXT objects\n\t\t// - get strings between CONTEXT tags\n\t\tString[] ss = expr.split(\"<CO>\", -1);\n\t\tcontextIDs = new int[ss.length - 1];\n\t\tfor (int i = 0; i < contextIDs.length; i++)\n\t\t\t// - count number of '(' not preceded by '\\' or followed by '?:'\n\t\t\tcontextIDs[i] = ss[i].split(\"\\\\(\", -1).length -\n\t\t\t\t\t\t\tss[i].split(\"\\\\\\\\\\\\(\", -1).length -\n\t\t\t\t\t\t\tss[i].split(\"\\\\(\\\\?\\\\:\").length +\n\t\t\t\t\t\t\tss[i].split(\"\\\\\\\\\\\\(\\\\?\\\\:\").length +\n\t\t\t\t\t\t\t((i > 0) ? contextIDs[i - 1] + 1 : 1);\n\t\t\n\t\t// replace CONTEXT tags\n\t\texpr = expr.replace(\"<CO>\", \"(.*?)\");  // reluctant\n\t\t\n\t\treturn expr;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the <code>contextIDs</code> field and replaces the CONTEXT tags by\n\t * capturing groups.\n\t * \n\t * @param expr pattern descriptor\n\t * @return descriptor without CONTEXT tags\n\t */\n", "code": "private string replace context tags string expr compute the ids of the groups that represent the context objects get strings between context tags string ss expr split co 1 context ids new int ss length 1 for int i 0 i context ids length i count number of not preceded by or followed by context ids i ss i split 1 length ss i split 1 length ss i split length ss i split length i 0 context ids i 1 1 1 replace context tags expr expr replace co reluctant return expr\n", "comment": "sets the code context ids code field and replaces the context tags by\n"}
{"id": "1907306", "raw_code": "\tpublic boolean isCorrect() {\n\t\treturn correct;\n\t}\n", "raw_comment": "\t/**\n\t * Checks if the answer was judged correct.\n\t * \n\t * @return <code>true</code> iff the answer was judged as correct\n\t */\n", "code": "public boolean is correct return correct\n", "comment": "checks if the answer was judged correct\n"}
{"id": "1907310", "raw_code": "\tpublic void setLemma(String lemma) {\n\t\tthis.lemma = StringUtils.normalize(lemma);\n\t}\n", "raw_comment": "\t/**\n\t * Normalizes and sets the lemma of the term.\n\t * \n\t * @param lemma the lemma of the term\n\t */\n", "code": "public void set lemma string lemma this lemma string utils normalize lemma\n", "comment": "normalizes and sets the lemma of the term\n"}
{"id": "1907311", "raw_code": "\tpublic Predicate getPredicate() {\n\t\treturn predicate;\n\t}\n", "raw_comment": "\t/**\n\t * Returns a predicate extracted from a sentence-level answer.\n\t * \n\t * @return predicate or <code>null</code> if no predicate has been extracted\n\t */\n", "code": "public predicate get predicate return predicate\n", "comment": "returns a predicate extracted from a sentence level answer\n"}
{"id": "1907312", "raw_code": "\tprivate String formatObject(String object) {\n\t\t// drop preceding \"a\", \"an\", \"the\" and trim\n\t\treturn object.replaceFirst(\"(?i)^(an?|the) \", \"\").trim();\n\t}\n", "raw_comment": "\t/**\n\t * Formats the extracted TARGET and CONTEXT objects.\n\t * \n\t * @param object TARGET or CONTEXT object\n\t * @return formatted object\n\t */\n", "code": "private string format object string object drop preceding a an the and trim return object replace first i an the trim\n", "comment": "formats the extracted target and context objects\n"}
{"id": "1907313", "raw_code": "\tpublic void setExpansionLemmas(Map<String, Double> expansionLemmas) {\n\t\tMap<String, Double> normalized = new Hashtable<String, Double>();\n\t\t\n\t\tfor (String lemma : expansionLemmas.keySet()) {\n\t\t\tdouble weight = expansionLemmas.get(lemma);\n\t\t\tString norm = StringUtils.normalize(lemma);\n\t\t\tnormalized.put(norm, weight);\n\t\t}\n\t\t\n\t\tthis.expansionLemmas = normalized;\n\t}\n", "raw_comment": "\t/**\n\t * Normalizes and sets the lemmas of the expansions.\n\t * \n\t * @param expansionLemmas the lemmas of the expansions\n\t */\n", "code": "public void set expansion lemmas map string double expansion lemmas map string double normalized new hashtable string double for string lemma expansion lemmas key set double weight expansion lemmas get lemma string norm string utils normalize lemma normalized put norm weight this expansion lemmas normalized\n", "comment": "normalizes and sets the lemmas of the expansions\n"}
{"id": "1907315", "raw_code": "\tpublic double getWeight(String lemma) {\n\t\tif (lemma.equals(this.lemma)) return 1;\n\t\t\n\t\tif (expansionLemmas == null) return 0;\n\t\tDouble weight = expansionLemmas.get(lemma);\n\t\treturn (weight != null) ? weight : 0;\n\t}\n", "raw_comment": "\t/**\n\t * Gets the weight of the term or expansion with the given lemma.\n\t * \n\t * @param lemma the lemma\n\t * @return the weight or <code>0</code> if there is no match\n\t */\n", "code": "public double get weight string lemma if lemma equals this lemma return 1 if expansion lemmas null return 0 double weight expansion lemmas get lemma return weight null weight 0\n", "comment": "gets the weight of the term or expansion with the given lemma\n"}
{"id": "1907316", "raw_code": "\tpublic String getSentence() {\n\t\treturn sentence;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the supporting sentence of a factoid answer.\n\t * \n\t * @return supporting sentence or <code>null</code> if it is not set\n\t */\n", "code": "public string get sentence return sentence\n", "comment": "returns the supporting sentence of a factoid answer\n"}
{"id": "1907320", "raw_code": "\tpublic String toString() {\n\t\tString s = \"{\\\"\" + text + \"\\\"; POS: \" + pos;\n\t\tif (neTypes.length > 0) {\n\t\t\ts += \"; NE types: \" + neTypes[0];\n\t\t\tfor (int i = 1; i < neTypes.length; i++)\n\t\t\t\ts += \", \" + neTypes[i];\n\t\t}\n\t\tif (expansions != null &&  expansions.size() > 0) {\n\t\t\tString[] texts =\n\t\t\t\texpansions.keySet().toArray(new String[expansions.size()]);\n\t\t\ts += \"; Expansions: {\" + texts[0] + \"=\" + expansions.get(texts[0]);\n\t\t\tfor (int i = 1; i < expansions.size(); i++)\n\t\t\t\ts += \", \" + texts[i] + \"=\" + expansions.get(texts[i]);\n\t\t\ts += \"}\";\n\t\t}\n\t\ts += \"}\";\n\t\t\n\t\treturn s;\n\t}\n", "raw_comment": "\t/**\n\t * Creates a string representation of the term.\n\t * \n\t * @return string representation\n\t */\n", "code": "public string to string string s text pos pos if ne types length 0 s ne types ne types 0 for int i 1 i ne types length i s ne types i if expansions null expansions size 0 string texts expansions key set to array new string expansions size s expansions texts 0 expansions get texts 0 for int i 1 i expansions size i s texts i expansions get texts i s s return s\n", "comment": "creates a string representation of the term\n"}
{"id": "1907321", "raw_code": "\tpublic boolean isNamedEntity() {\n\t\treturn neTypes != null;\n\t}\n", "raw_comment": "\t/**\n\t * Checks if a factoid answer is a named entity.\n\t * \n\t * @return <code>true</code> iff the answer is a NE\n\t */\n", "code": "public boolean is named entity return ne types null\n", "comment": "checks if a factoid answer is a named entity\n"}
{"id": "1907322", "raw_code": "\tpublic boolean extractedWith(String technique) {\n\t\tif (extractionTechniques == null) return false;\n\t\t\n\t\tfor (String extractionTechnique : extractionTechniques)\n\t\t\tif (technique.equals(extractionTechnique)) return true;\n\t\t\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Checks if a factoid answer was extracted with the given technique.\n\t * \n\t * @param technique answer extraction technique\n\t * @return <code>true</code> iff the answer was extracted with the technique\n\t */\n", "code": "public boolean extracted with string technique if extraction techniques null return false for string extraction technique extraction techniques if technique equals extraction technique return true return false\n", "comment": "checks if a factoid answer was extracted with the given technique\n"}
{"id": "1907324", "raw_code": "\tpublic void setAnswer(String answer) {\n\t\tthis.answer = answer;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the answer string.\n\t * \n\t * @param answer the answer string\n\t */\n", "code": "public void set answer string answer this answer answer\n", "comment": "sets the answer string\n"}
{"id": "1907327", "raw_code": "\tpublic void incScore(float value) {\n\t\tscore += value;\n\t}\n", "raw_comment": "\t/**\n\t * Increments the confidence score by the given value.\n\t * \n\t * @param value the value to be added to the score\n\t */\n", "code": "public void inc score float value score value\n", "comment": "increments the confidence score by the given value\n"}
{"id": "1907328", "raw_code": "\tpublic void setNormScore(float normScore) {\n\t\tthis.normScore = normScore;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the normalized score of this result.\n\t * \n\t * @param normScore normalized score\n\t */\n", "code": "public void set norm score float norm score this norm score norm score\n", "comment": "sets the normalized score of this result\n"}
{"id": "1907333", "raw_code": "    public void initialize() throws Exception {\n        if (isInitialized()) return;\n        if (languagePair == null)\n            throw new Exception(\"languagePair must be set before calling initialize\");\n        \n        String propertiesFileName = System.getProperty(\"ephyra.home\", \".\")+\"/conf/\"+Experimenter.class.getName()+\".properties\";\n        properties.load(new FileInputStream(propertiesFileName));\n        properties = properties.mapProperties().get(languagePair.getFirst()+\"_\"+languagePair.getSecond());\n        \n        learningCombos = properties.getProperty(\"learningCombos\").split(\"\\\\|\");\n        featureTypeCombos = properties.getProperty(\"featureTypeCombos\").split(\"\\\\|\");\n        \n        setInitialized(true);\n    }\n", "raw_comment": "    /**\n     * The input properties that must be defined are:\n     * <ul>\n     *   <li> <code>learningCombos</code>  : &nbsp; A \"|\"-separated list of comma-separated \n     *   lists of learning algorithms.  The outer, \"|\"-separated list specifies the different hierarchical\n     *   classifiers to experiment with.  The inner, comma-separated list of algorithms \n     *   specifies the structure of the hierarchical classifier to use for one \n     *   experiment.    \n     *   The set of valid algorithm names is: \n     *   <ul>\n     *      <li> <code>KNN</code>\n     *      <li> <code>KWAY_MIX</code>\n     *      <li> <code>MAX_ENT</code>\n     *      <li> <code>BWINNOW_OVA</code>\n     *      <li> <code>MPERCEPTRON_OVA </code>\n     *      <li> <code>NBAYES_OVA</code>\n     *      <li> <code>VPERCEPTRON_OVA</code>\n     *      <li> <code>ADABOOST_OVA</code>\n     *      <li> <code>ADABOOST_CB</code>\n     *      <li> <code>ADABOOST_MFF</code>\n     *      <li> <code>ADABOOSTL_OVA</code>\n     *      <li> <code>ADABOOSTL_CB</code>\n     *      <li> <code>ADABOOSTL_MFF</code>\n     *      <li> <code>DTREE_OVA</code>\n     *      <li> <code>DTREE_CB</code>\n     *      <li> <code>DTREE_MFF</code>\n     *      <li> <code>NEGBI_OVA</code>\n     *      <li> <code>NEGBI_CB</code>\n     *      <li> <code>NEGBI_MFF</code>\n     *      <li> <code>SVM_OVA</code>\n     *      <li> <code>SVM_CB</code>\n     *      <li> <code>SVM_MFF</code>\n     *   </ul>\n     *   <li> <code>featureTypeCombos</code> : &nbsp; A \"|\"-separated list of comma-separated \n     *   lists of feature types. \n     * </ul>\n     */\n", "code": "public void initialize throws exception if is initialized return if language pair null throw new exception language pair must be set before calling initialize string properties file name system get property ephyra home conf experimenter class get name properties properties load new file input stream properties file name properties properties map properties get language pair get first language pair get second learning combos properties get property learning combos split feature type combos properties get property feature type combos split set initialized true\n", "comment": "the input properties that must be defined are\n"}
{"id": "1907350", "raw_code": "\tpublic void setCacheID(String cacheID) {\n\t\tthis.cacheID = cacheID;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the ID of the document in the search engine cache.\n\t * \n\t * @param cacheID ID of the cached document\n\t */\n", "code": "public void set cache id string cache id this cache id cache id\n", "comment": "sets the id of the document in the search engine cache\n"}
{"id": "1907355", "raw_code": "\tpublic void setCorrect() {\n\t\tcorrect = true;\n\t}\n", "raw_comment": "\t/**\n\t * Judges the answer as correct.\n\t */\n", "code": "public void set correct correct true\n", "comment": "judges the answer as correct\n"}
{"id": "1907358", "raw_code": "    public void setProperties(Properties properties) {\n        for (String property : properties.keySet()) {\n            this.properties.put(property,properties.get(property));\n        }\n        try {\n        initialize();\n        } catch (Exception e) {\n            log.error(\"Error re-initializing: \",e);\n        }\n    }\n", "raw_comment": "    /**\n     * Overrides default properties with those given.\n     * \n     * @param properties\n     */\n", "code": "public void set properties properties properties for string property properties key set this properties put property properties get property try initialize catch exception e log error error re initializing e\n", "comment": "overrides default properties with those given\n"}
{"id": "1907360", "raw_code": "\tpublic void setNes(Map<String, String[]> nes) {\n\t\tthis.nes = nes;\n\t}\n", "raw_comment": "\t/**\n\t * Sets named entities extracted from a sentence-level answer and their\n\t * types.\n\t * \n\t * @param nes NEs and their types\n\t */\n", "code": "public void set nes map string string nes this nes nes\n", "comment": "sets named entities extracted from a sentence level answer and their\n"}
{"id": "1907363", "raw_code": "\tpublic void setTerms(Term[] terms) {\n\t\tthis.terms = terms;\n\t}\n", "raw_comment": "\t/**\n\t * Sets terms extracted from a sentence-level answer.\n\t * \n\t * @param terms terms extracted from a sentence\n\t */\n", "code": "public void set terms term terms this terms terms\n", "comment": "sets terms extracted from a sentence level answer\n"}
{"id": "1907369", "raw_code": "\tpublic void setPredicate(Predicate predicate) {\n\t\tthis.predicate = predicate;\n\t}\n", "raw_comment": "\t/**\n\t * Sets a predicate extracted from a sentence-level answer.\n\t * \n\t * @param predicate predicate extracted from a sentence\n\t */\n", "code": "public void set predicate predicate predicate this predicate predicate\n", "comment": "sets a predicate extracted from a sentence level answer\n"}
{"id": "1907373", "raw_code": "    public void initialize() throws Exception {\n        Properties properties = Properties.loadFromClassName(FeatureExtractor.class.getName());\n\n        String classLevelsProp = properties.getProperty(\"classLevels\");\n        if (classLevelsProp == null)\n            throw new RuntimeException(\"Required parameter classLevels is undefined\");\n        classLevels = Integer.parseInt(classLevelsProp);\n        \n        String useClassLevelsProp = properties.getProperty(\"useClassLevels\");\n        if (useClassLevelsProp == null)\n            throw new RuntimeException(\"Required parameter useClassLevels is undefined\");\n        useClassLevels = Boolean.parseBoolean(useClassLevelsProp);\n    }\n", "raw_comment": "    /**\n     * Reads in properties from this class's properties file and sets class data members.\n     * \n     * @throws Exception\n     */\n", "code": "public void initialize throws exception properties properties properties load from class name feature extractor class get name string class levels prop properties get property class levels if class levels prop null throw new runtime exception required parameter class levels is undefined class levels integer parse int class levels prop string use class levels prop properties get property use class levels if use class levels prop null throw new runtime exception required parameter use class levels is undefined use class levels boolean parse boolean use class levels prop\n", "comment": "reads in properties from this classs properties file and sets class data members\n"}
{"id": "1907375", "raw_code": "\tpublic void setSentence(String sentence) {\n\t\tthis.sentence = sentence.trim();\n\t}\n", "raw_comment": "\t/**\n\t * Sets the supporting sentence of a factoid answer.\n\t * \n\t * @param sentence supporting sentence\n\t */\n", "code": "public void set sentence string sentence this sentence sentence trim\n", "comment": "sets the supporting sentence of a factoid answer\n"}
{"id": "1907376", "raw_code": "    public Instance createInstance(String question, String parseTree){\n        String[] tokens = question.split(\"\\\\s+\");\n        List<Term> terms = new ArrayList<Term>();\n        for (String token : tokens) {\n            terms.add(new Term(0,0,token));\n        }\n        return createInstance(terms,parseTree);\n    }\n", "raw_comment": "    /**\n     * Convenience method that tokenizes the given question by whitespace, creates\n     * Terms, and calls {@link #createInstance(List, String)}.\n     * \n     * @param question the question to create an Instance from\n     * @param parseTree the syntactic parse tree of the question\n     */\n", "code": "public instance create instance string question string parse tree string tokens question split s list term terms new array list term for string token tokens terms add new term 0 0 token return create instance terms parse tree\n", "comment": "convenience method that tokenizes the given question by whitespace creates\n"}
{"id": "1907381", "raw_code": "\tpublic boolean addNeType(String neType) {\n\t\t// check if NE type has already been added\n\t\tif (neTypes != null)\n\t\t\tfor (String existing : neTypes)\n\t\t\t\tif (neType.equals(existing)) return false;\n\t\t\n\t\t// add new NE type\n\t\tString[] newNeTypes;\n\t\tif (neTypes == null) {\n\t\t\tnewNeTypes = new String[1];\n\t\t} else {\n\t\t\tnewNeTypes = new String[neTypes.length + 1];\n\t\t\tfor (int i = 0; i < neTypes.length; i++)\n\t\t\t\tnewNeTypes[i] = neTypes[i];\n\t\t}\n\t\tnewNeTypes[newNeTypes.length - 1] = neType;\n\t\tneTypes = newNeTypes;\n\t\treturn true;\n\t}\n", "raw_comment": "\t/**\n\t * Adds a named entity type for a factoid answer.\n\t * \n\t * @param neType NE type\n\t * @return <code>true</code> if a new type was added\n\t */\n", "code": "public boolean add ne type string ne type check if ne type has already been added if ne types null for string existing ne types if ne type equals existing return false add new ne type string new ne types if ne types null new ne types new string 1 else new ne types new string ne types length 1 for int i 0 i ne types length i new ne types i ne types i new ne types new ne types length 1 ne type ne types new ne types return true\n", "comment": "adds a named entity type for a factoid answer\n"}
{"id": "1907382", "raw_code": "    public Instance createInstance(List<Term> terms, String parseTree){\n        String question = \"\";\n        for (Term term : terms) question += term + \" \";\n        question = question.trim();\n        \n        MutableInstance instance = new MutableInstance(question);\n\n        // find the focus word\n        log.debug(\"Parse: \" + parseTree);\n        Tree tree = TreeHelper.buildTree(parseTree, Tree.ENGLISH);\n        Term focus = FocusFinder.findFocusTerm(tree);\n        if (focus != null) log.debug(\"Focus: \" + focus.getText());\n        \n        addWordLevelFeatures(instance, terms, focus);\n        addSyntacticFeatures(instance, terms, parseTree, focus);\n        addSemanticFeatures(instance, focus);\n        return instance;\n    }\n", "raw_comment": "    /**\n     * Creates and populates an Instance from a QuestionAnalysis object.  All\n     * features are binary features of one of the following types:</p>\n     * \n     * Word-level features:\n     * <ul>\n     *   <li>UNIGRAM : individual words in the question\n     *   <li>BIGRAM : pairs of adjacent words in the question\n     *   <li>WH_WORD : the wh-word in the question if one exists\n     * </ul>\n     * \n     * Syntactic features:\n     * <ul>\n     *   <li>MAIN_VERB: the syntactic head of the sentence, as defined in \n     *   {@link edu.cmu.lti.chineseNLP.util.TreeHelper TreeHelper}\n     *   <li>FOCUS_ADJ : the adjective following a wh-word (e.g. 'long' in 'How long is it?') \n     *   <li>WH_DET : whether or not the wh-word is the determiner of a noun phrase, as in 'which printer'\n     * </ul>\n     * \n     * Semantic features:\n     * <ul>\n     *   <li>FOCUS_TYPE : the semantic type of the focus word, \n     * </ul>\n     * \n     * @throws Exception\n     */\n", "code": "public instance create instance list term terms string parse tree string question for term term terms question term question question trim mutable instance instance new mutable instance question find the focus word log debug parse parse tree tree tree tree helper build tree parse tree tree english term focus focus finder find focus term tree if focus null log debug focus focus get text add word level features instance terms focus add syntactic features instance terms parse tree focus add semantic features instance focus return instance\n", "comment": "creates and populates an instance from a question analysis object\n"}
{"id": "1907384", "raw_code": "    public void printFeaturesFromQuestions (String questionSetFileName, List<String> features) {\n        String questions = IOUtil.readFile(questionSetFileName);\n        \n        for (String question : questions.split(\"[\\\\n\\\\r\\\\f]\")) {\n            Instance instance = createInstance(question);\n            StringBuilder sb = new StringBuilder();\n            if (features.size() > 0) {\n                for(Iterator it = instance.binaryFeatureIterator(); it.hasNext();) {\n                    Feature feat = (Feature)it.next();\n                    String name = \"\";\n                    for (String s : feat.getName()) name += \".\"+s;\n                    name = name.replaceFirst(\".\",\"\");\n                    if (features.contains(feat.getName()[0]))\n                        sb.append(name+\"  \");\n                }\n                System.out.println(sb.toString() + \" \" + question);\n            }\n            else System.out.println(instance + \" \" + question);\n        }\n    }\n", "raw_comment": "    /**\n     * Prints the features generated for each example in an input file.  If feature\n     * types are included as command-line arguments, only those types are printed. \n     * Otherwise, all features are printed.\n     * \n     * @param questionSetFileName the name of the file containing the dataset to load\n     * @param features a List of the features to print\n     */\n", "code": "public void print features from questions string question set file name list string features string questions ioutil read file question set file name for string question questions split n r f instance instance create instance question string builder sb new string builder if features size 0 for iterator it instance binary feature iterator it has next feature feat feature it next string name for string s feat get name name s name name replace first if features contains feat get name 0 sb append name system out println sb to string question else system out println instance question\n", "comment": "prints the features generated for each example in an input file\n"}
{"id": "1907397", "raw_code": "\tpublic Result getCopy() {\n\t\tResult result = new Result(answer, query, docID, hitPos);\n\t\tresult.score = score;\n\t\tresult.normScore = normScore;\n\t\tresult.cacheID = cacheID;\n\t\tresult.correct = correct;\n\t\tresult.nes = nes;\n\t\tresult.terms = terms;\n\t\tresult.predicate = predicate;\n\t\tresult.sentence = sentence;\n\t\tresult.neTypes = neTypes;\n\t\tresult.extractionTechniques = extractionTechniques;\n\t\tresult.coveredNuggets = coveredNuggets;\n\t\tresult.extraScores.putAll(this.extraScores);\n\t\t\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Returns a copy of this <code>Result</code> object.\n\t * \n\t * @return copy of this object\n\t */\n", "code": "public result get copy result result new result answer query doc id hit pos result score score result norm score norm score result cache id cache id result correct correct result nes nes result terms terms result predicate predicate result sentence sentence result ne types ne types result extraction techniques extraction techniques result covered nuggets covered nuggets result extra scores put all this extra scores return result\n", "comment": "returns a copy of this code result code object\n"}
{"id": "1907408", "raw_code": "\tpublic float getExtraScore(String sourceName) {\n\t\tif (this.extraScores.containsKey(sourceName)) return this.extraScores.get(sourceName).floatValue();\n\t\telse return 0f;\n\t}\n", "raw_comment": "\t/**\tretrieve the extra score set by some source\n\t * @param\tsourceName\tthe name of the source who set the required score\n\t * @return the extra score set by the source with the specified name, or 0, if the is no suchh extra score\n\t */\n", "code": "public float get extra score string source name if this extra scores contains key source name return this extra scores get source name float value else return 0f\n", "comment": "retrieve the extra score set by some source\n"}
{"id": "1907431", "raw_code": "    public Rule (Element ruleElement) {\n        NamedNodeMap ruleAttributes = ruleElement.getAttributes();\n        this.atype = ruleAttributes.getNamedItem(\"atype\").getNodeValue().toString();\n        this.confidence = Double.parseDouble(ruleAttributes.getNamedItem(\"conf\").getNodeValue().toString());\n        \n        this.elements = new ArrayList<RuleElement>();\n        NodeList ruleElementList = ruleElement.getChildNodes();\n        for (int j = 0; j < ruleElementList.getLength(); j++) {\n            Node ruleElementElement = ruleElementList.item(j);\n            if (!ruleElementElement.getNodeName().equals(\"RULE_ELEMENT\")) continue;\n            elements.add(new RuleElement((Element)ruleElementElement));\n        }\n    }\n", "raw_comment": "    /**\n     * Instantiates a Rule object from an XML Element.  \n     * @param ruleElement the Element to construct a Rule from\n     */\n", "code": "public rule element rule element named node map rule attributes rule element get attributes this atype rule attributes get named item atype get node value to string this confidence double parse double rule attributes get named item conf get node value to string this elements new array list rule element node list rule element list rule element get child nodes for int j 0 j rule element list get length j node rule element element rule element list item j if rule element element get node name equals rule element continue elements add new rule element element rule element element\n", "comment": "instantiates a rule object from an xml element\n"}
{"id": "1907433", "raw_code": "    public AnswerType matches (Instance instance) {\n        if (elements == null) \n            throw new IllegalStateException(\"Must compile rule before using it\");\n        \n        String retAtype = atype;\n        AnswerType res = null;\n        // All elements of the rule must match in order for the rule to match\n        for (RuleElement element : elements) {\n            String result = element.matches(instance);\n            if (result == null) {\n                return null;\n            } else if (element.getFeature().equals(\"FOCUS_TYPE\")) {\n                result = result.toUpperCase();\n                if (!result.equals(atype) && result != \"\")\n                    retAtype = atype + \".\" + result;\n            }\n        }\n        res = AnswerType.constructFromString(retAtype);\n        res.setConfidence(confidence);\n        return res;\n    }\n", "raw_comment": "    /**\n     * Tells whether a given Instance matches this Rule by returning\n     * the appropriate answer type if it does match, and <code>null</code> \n     * if it does not.\n     * \n     * @param instance the Instance to consider\n     * @return the answer type and subtype formed by matching this Rule to the\n     * given Instance, or <code>null</code> if this Rule does not match the Instance.\n     * @throws IllegalStateException if this Rule has not been compiled yet\n     */\n", "code": "public answer type matches instance instance if elements null throw new illegal state exception must compile rule before using it string ret atype atype answer type res null all elements of the rule must match in order for the rule to match for rule element element elements string result element matches instance if result null return null else if element get feature equals focus type result result to upper case if result equals atype result ret atype atype result res answer type construct from string ret atype res set confidence confidence return res\n", "comment": "tells whether a given instance matches this rule by returning\n"}
{"id": "1907435", "raw_code": "    public String matches (Instance instance) {\n        if (values == null) \n            throw new IllegalStateException(\"values not initialized\");\n        for (Iterator it = instance.binaryFeatureIterator(); it.hasNext();) {\n            Feature f = (Feature)it.next();\n            if (!f.getPart(0).equals(feature)) continue;\n            for (String value : values) {\n                String[] parts = value.split(\"=\",-1);\n                if (parts[0].equals(f.getPart(1).trim())) {\n                    return (parts.length == 2) ? parts[1] : f.getPart(1).trim();\n                }\n            }\n        }\n        return null;\n    }\n", "raw_comment": "    /**\n     * Tells whether a given Instance has a feature that matches this RuleElement. \n     * by returning the matching value upon a successful match or <code>null</code>\n     * if this RuleElement does not match the Instance.  When one of \n     * this RuleElement's values contains the substring \"->\", the portion of the \n     * value before the \"->\" is used for matching against the input Instance, while\n     * the portion of the value after the \"->\" is used as the matching value;\n     * \n     * @param instance the Instance to consider\n     * @return whether a given Instance has a feature that matches this RuleElement\n     * @throws IllegalStateException if this RuleElement has not been compiled yet\n     */\n", "code": "public string matches instance instance if values null throw new illegal state exception values not initialized for iterator it instance binary feature iterator it has next feature f feature it next if f get part 0 equals feature continue for string value values string parts value split 1 if parts 0 equals f get part 1 trim return parts length 2 parts 1 f get part 1 trim return null\n", "comment": "tells whether a given instance has a feature that matches this rule element\n"}
{"id": "1907443", "raw_code": "    public void initialize() throws Exception {\n        if (languagePair == null)\n            throw new Exception(\"languagePair must be set before calling the parent initialize\");\n        extractor = FeatureExtractorFactory.getInstance(languagePair.getFirst());\n    }\n", "raw_comment": "    /**\n     * Initializes the FeatureExtractor.\n     * @throws Exception if one of the required input properties is not defined\n     */\n", "code": "public void initialize throws exception if language pair null throw new exception language pair must be set before calling the parent initialize extractor feature extractor factory get instance language pair get first\n", "comment": "initializes the feature extractor\n"}
{"id": "1907454", "raw_code": "\tprivate String addDistGroup(String expr) {\n\t\tMatcher m = Pattern.compile(\"<PO.*?>\").matcher(expr);\n\t\tm.find();\n\t\tString pTag = m.group(0);\n\t\t\n\t\tif (expr.startsWith(\"<TO>\")) {  // TARGET comes before PROPERTY\n\t\t\tdistID = 1;\n\t\t\treturn expr.replace(\"<TO>\", \"<TO>(\").replace(pTag, \")\" + pTag);\n\t\t} else {  // PROPERTY comes before TARGET\n\t\t\tdistID = 2;\n\t\t\treturn expr.replace(pTag, pTag + \"(\").replace(\"<TO>\", \")<TO>\");\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Adds a capturing group that covers the string between the TARGET and\n\t * the PROPERTY and sets the <code>distID</code> field. Required to measure\n\t * the distance between TARGET and PROPERTY.\n\t * \n\t * @param expr pattern descriptor\n\t * @return descriptor with capturing group\n\t */\n", "code": "private string add dist group string expr matcher m pattern compile po matcher expr m find string p tag m group 0 if expr starts with to target comes before property dist id 1 return expr replace to to replace p tag p tag else property comes before target dist id 2 return expr replace p tag p tag replace to to\n", "comment": "adds a capturing group that covers the string between the target and\n"}
{"id": "1907455", "raw_code": "\tprivate String replaceTargetTag(String expr) {\n\t\treturn expr.replace(\"<TO>\", \"<TO_\\\\d*+>\");  // possessive\n\t}\n", "raw_comment": "\t/**\n\t * Replaces the TARGET tag by a regular expression that matches TARGET tags\n\t * with tag IDs.\n\t * \n\t * @param expr pattern descriptor\n\t * @return descriptor with a regular expression for TARGET tags\n\t */\n", "code": "private string replace target tag string expr return expr replace to to d possessive\n", "comment": "replaces the target tag by a regular expression that matches target tags\n"}
{"id": "1907456", "raw_code": "\tprivate String replaceContextTags(String expr) {\n\t\treturn expr.replace(\"<CO>\", \"<CO_\\\\d*+>\");  // possessive\n\t}\n", "raw_comment": "\t/**\n\t * Replaces CONTEXT tags by regular expressions that match CONTEXT tags with\n\t * tag IDs.\n\t * \n\t * @param expr pattern descriptor\n\t * @return descriptor with regular expressions for CONTEXT tags\n\t */\n", "code": "private string replace context tags string expr return expr replace co co d possessive\n", "comment": "replaces context tags by regular expressions that match context tags with\n"}
{"id": "1907460", "raw_code": "\tpublic void setProperty(String property, String value) {\n\t\tthis.properties.setProperty(property, value);\n\t}\n", "raw_comment": "\t/**\tset a property of the target to a given value\n\t * @param\tproperty\tthe name of the property\n\t * @param\tvalue\t\tthe value of the property\n\t */\n", "code": "public void set property string property string value this properties set property property value\n", "comment": "set a property of the target to a given value\n"}
{"id": "1907461", "raw_code": "\tpublic String getProperty(String property) {\n\t\treturn this.properties.getProperty(property);\n\t}\n", "raw_comment": "\t/**\tretrieve the value of a property\n\t * @param\tproperty\tthe name of the property\n\t * @return the value associated with the specified property, or null, if there is no such value\n\t */\n", "code": "public string get property string property return this properties get property property\n", "comment": "retrieve the value of a property\n"}
{"id": "1907462", "raw_code": "\tprivate String replaceNeTags(String expr) {\n\t\tMatcher m = Pattern.compile(\"<(NE[^>]*+)>\").matcher(expr);\n\t\twhile (m.find()) {  // find next NE tag\n\t\t\t// get NE types\n\t\t\tString[] neTypes = m.group(1).split(\"_\");\n\t\t\t\n\t\t\t// build regular expression\n\t\t\tString regex = \"<(?:NE[a-zA-Z0-9]*+_)*?\";  // reluctant\n\t\t\tif (neTypes.length > 1) regex += \"(?:\";\n\t\t\tregex += neTypes[0];\n\t\t\tfor (int i = 1; i < neTypes.length; i++)\n\t\t\t\tregex += \"|\" + neTypes[i];\n\t\t\tif (neTypes.length > 1) regex += \")\";\n\t\t\tregex += \"[^>]*+>\";  // possessive\n\t\t\t\n\t\t\t// replace NE tag\n\t\t\texpr = expr.replace(m.group(0), regex);\n\t\t}\n\t\t\n\t\treturn expr;\n\t}\n", "raw_comment": "\t/**\n\t * Replaces NE tags by regular expressions that match NE tags with at least\n\t * one of the NE types.\n\t * \n\t * @param expr pattern descriptor\n\t * @return descriptor with regular expressions for NE tags\n\t */\n", "code": "private string replace ne tags string expr matcher m pattern compile ne matcher expr while m find find next ne tag get ne types string ne types m group 1 split build regular expression string regex ne a z a z0 9 reluctant if ne types length 1 regex regex ne types 0 for int i 1 i ne types length i regex ne types i if ne types length 1 regex regex possessive replace ne tag expr expr replace m group 0 regex return expr\n", "comment": "replaces ne tags by regular expressions that match ne tags with at least\n"}
{"id": "1907463", "raw_code": "\tpublic boolean isPropertySet(String property) {\n\t\treturn this.properties.containsKey(property);\n\t}\n", "raw_comment": "\t/**\tcheck if this dossier already contains a value for some property\n\t * @param\tproperty\tthe name of the property to check\n\t * @return true iff this dossier has a value associated with the specified property\n\t */\n", "code": "public boolean is property set string property return this properties contains key property\n", "comment": "check if this dossier already contains a value for some property\n"}
{"id": "1907464", "raw_code": "\tprivate String optimizePattern(String expr) {\n\t\t// use possessive quantifiers whenever possible\n\t\tMatcher m = Pattern.compile(\"(?:\\\\[\\\\^<\\\\]\\\\*\\\\?|\" +\n\t\t\t\t\"\\\\(\\\\?\\\\:\\\\S*+ \\\\)\\\\?)++.\").matcher(expr);\n\t\twhile (m.find()) {\n\t\t\tString rep = m.group(0);\n\t\t\t\n\t\t\tif (rep.endsWith(\"<\") || rep.endsWith(\")\")) {  // next token is '<'\n\t\t\t\trep = rep.replace(\"[^<]*?\", \"[^<]*+\");\n//\t\t\t} else {  // next token not '<'\n//\t\t\t\t// open parentheses\n//\t\t\t\tString closing = \"\";\n//\t\t\t\tMatcher m2 = Pattern.compile(\"\\\\[\\\\^<\\\\]\\\\*\\\\?\").matcher(rep);\n//\t\t\t\tm2.find();\n//\t\t\t\twhile (m2.find()) {\n//\t\t\t\t\trep = rep.replaceFirst(\"\\\\[\\\\^<\\\\]\\\\*\\\\?\",\n//\t\t\t\t\t\t\t\"\\\\(\\\\?\\\\:\\\\(\\\\?\\\\:\\\\[\\\\^< \\\\]\\\\*\\\\+ \\\\)\\\\*\\\\?\\\\|\" +\n//\t\t\t\t\t\t\t\"\\\\[\\\\^<\\\\]\\\\*\\\\+\");\n//\t\t\t\t\tclosing += \")\";\n//\t\t\t\t}\n//\t\t\t\t\n//\t\t\t\t// close parentheses\n//\t\t\t\trep = rep.substring(0, rep.length() - 1) + closing +\n//\t\t\t\t\t  rep.charAt(rep.length() - 1);\n\t\t\t}\n\t\t\t\n\t\t\texpr = expr.replace(m.group(0), rep);\n\t\t}\n\t\t\n\t\t// eat whole tokens, reluctant\n\t\texpr = expr.replace(\"[^<]*?\", \"(?:[^< ]*+ )*?\");\n\t\t\n\t\treturn expr;\n\t}\n", "raw_comment": "\t/**\n\t * Optimizes the pattern to improve its runtime performance.\n\t * \n\t * @param expr pattern descriptor\n\t * @return optimized pattern\n\t */\n", "code": "private string optimize pattern string expr use possessive quantifiers whenever possible matcher m pattern compile s matcher expr while m find string rep m group 0 if rep ends with rep ends with next token is rep rep replace else next token not open parentheses string closing matcher m2 pattern compile matcher rep m2 find while m2 find rep rep replace first closing close parentheses rep rep substring 0 rep length 1 closing rep char at rep length 1 expr expr replace m group 0 rep eat whole tokens reluctant expr expr replace return expr\n", "comment": "optimizes the pattern to improve its runtime performance\n"}
{"id": "1907465", "raw_code": "\tpublic Result apply(Result result) {\n\t\tString text = result.getAnswer();\n\t\tMatcher matcher = PROVIDER_AT_START.matcher(text);\n\t\tif (matcher.matches()) result.setAnswer(text.substring(matcher.group(1).length()).trim());\n//\t\telse {\n//\t\t\tmatcher = PROVIDER_AT_END.matcher(text);\n//\t\t\tif (matcher.matches()) result.setAnswer(text.substring(0, (text.length() - matcher.group(1).length())).trim());\n//\t\t}\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Cut leading or tailing introductory parts of information given in\n\t * indirect speech. This is in order to not waste result length with these\n\t * parts. It would cut, for instance, 'XYZ said that' from 'XYZ said that\n\t * ... some useful information ...'\n\t * \n\t * @param result a <code>Result</code> object\n\t * @return the same <code>Result</code> object\n\t */\n", "code": "public result apply result result string text result get answer matcher matcher provider at start matcher text if matcher matches result set answer text substring matcher group 1 length trim else matcher provider at end matcher text if matcher matches result set answer text substring 0 text length matcher group 1 length trim return result\n", "comment": "cut leading or tailing introductory parts of information given in\n"}
{"id": "1907466", "raw_code": "\tpublic boolean equals(Object o) {\n\t\tif (!(o instanceof AnswerPattern)) return false;\n\t\t\n\t\treturn desc.equals(((AnswerPattern) o).getDesc());\n\t}\n", "raw_comment": "\t/**\n\t * Compares this object to another <code>AnswerPattern</code>. Two\n\t * <code>AnswerPattern</code> objects are equal, iff the pattern descriptors\n\t * are equal.\n\t * \n\t * @param o the reference object with which to compare\n\t * @return <code>true</code>, iff this object is the same as the\n\t *         <code>o</code> argument\n\t */\n", "code": "public boolean equals object o if o instanceof answer pattern return false return desc equals answer pattern o get desc\n", "comment": "compares this object to another code answer pattern code\n"}
{"id": "1907468", "raw_code": "\tpublic Result apply(Result result) {\n\t\tString text = result.getAnswer().trim();\n\t\tboolean changed = true;\n\t\tMatcher matcher;\n\t\twhile (changed) {\n\t\t\tchanged = false;\n\t\t\tmatcher = KEYWORDS.matcher(text);\n\t\t\tif (matcher.matches()) {\n\t\t\t\ttext = text.substring(matcher.group(1).length()).trim();\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t\tmatcher = BRACKETS.matcher(text);\n\t\t\tif (matcher.matches()) {\n\t\t\t\ttext = text.substring(matcher.group(1).length()).trim();\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\t\tresult.setAnswer(text);\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Cut the leading news agency acronym and city from a snippet, for instance\n\t * from 'MOSCOW (ITAR-TAS) ... some useful information ...', in order to not\n\t * waste result length\n\t * \n\t * @param result a <code>Result</code> object\n\t * @return the same <code>Result</code> object\n\t */\n", "code": "public result apply result result string text result get answer trim boolean changed true matcher matcher while changed changed false matcher keywords matcher text if matcher matches text text substring matcher group 1 length trim changed true matcher brackets matcher text if matcher matches text text substring matcher group 1 length trim changed true result set answer text return result\n", "comment": "cut the leading news agency acronym and city from a snippet for instance\n"}
{"id": "1907469", "raw_code": "\tpublic void printOverlapAnalysis() {\n\t\tMsgPrinter.printStatusMsg(\"Overlap analysis:\");\n\t\tfor (String key : overlapAnalysis.keySet())\n\t\t\tMsgPrinter.printStatusMsg(key + \": \" + overlapAnalysis.get(key));\n\t}\n", "raw_comment": "\t/**\n\t * Prints the current overlap analysis.\n\t */\n", "code": "public void print overlap analysis msg printer print status msg overlap analysis for string key overlap analysis key set msg printer print status msg key overlap analysis get key\n", "comment": "prints the current overlap analysis\n"}
{"id": "1907470", "raw_code": "\tpublic int compareTo(AnswerPattern ap) {\n\t\treturn correct - ap.getCorrect();\n\t}\n", "raw_comment": "\t/**\n\t * Compares two <code>AnswerPattern</code> objects by comparing the number\n\t * of correct applications.\n\t * \n\t * @param ap the <code>AnswerPattern</code> to be compared\n\t * @return a negative integer, zero or a positive integer as this\n\t *         <code>AnswerPattern</code> is less than, equal to or greater than\n\t *         the specified <code>AnswerPattern</code>\n\t */\n", "code": "public int compare to answer pattern ap return correct ap get correct\n", "comment": "compares two code answer pattern code objects by comparing the number\n"}
{"id": "1907472", "raw_code": "\tpublic Result apply(Result result) {\n\t\tresult.incScore(result.getQuery().getScore());  // manipulate score\n\t\t\n\t\treturn result;  // no results are dropped by this filter\n\t}\n", "raw_comment": "\t/**\n\t * Filters a single <code>Result</code> object.\n\t * \n\t * @param result result to filter\n\t * @return result with manipulated score\n\t */\n", "code": "public result apply result result result inc score result get query get score manipulate score return result no results are dropped by this filter\n", "comment": "filters a single code result code object\n"}
{"id": "1907473", "raw_code": "\tpublic int hashCode() {\n\t\treturn desc.hashCode();\n\t}\n", "raw_comment": "\t/**\n\t * The hashcode of an <code>AnswerPattern</code> is the hashcode of its\n\t * descriptor.\n\t * \n\t * @return hashcode\n\t */\n", "code": "public int hash code return desc hash code\n", "comment": "the hashcode of an code answer pattern code is the hashcode of its\n"}
{"id": "1907475", "raw_code": "\tpublic Result apply(Result result) {\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * This method is not used. Instead, the method <code>apply(Result[])</code>\n\t * from the superclass <code>Filter</code> is overwritten.\n\t * \n\t * @param result a <code>Result</code> object\n\t * @return the same <code>Result</code> object\n\t */\n", "code": "public result apply result result return result\n", "comment": "this method is not used\n"}
{"id": "1907478", "raw_code": "\tpublic Result apply(Result result) {\n\t\tString[] kws = result.getQuery().getAnalyzedQuestion().getKeywords();\n\t\tString[] wordsInResult = KeywordExtractor.tokenize(result.getAnswer());\n\t\t\n\t\tint k = kws.length;\n\t\tint m = getNumberOfMatches(kws, wordsInResult);\n\t\t\n\t\tif (m >= Math.floor(Math.sqrt(k - 1)) + 1) {\n\t\t\tresult.incScore(m);  // manipulate score\n\t\t\treturn result;  // keep result\n\t\t}\n\t\t\n\t\treturn null;  // drop result\n\t}\n", "raw_comment": "\t/**\n\t * Filters a single <code>Result</code> object.\n\t * \n\t * @param result result to filter\n\t * @return result with manipulated score or <code>null</code> if the result\n\t * \t\t   is dropped\n\t */\n", "code": "public result apply result result string kws result get query get analyzed question get keywords string words in result keyword extractor tokenize result get answer int k kws length int m get number of matches kws words in result if m math floor math sqrt k 1 1 result inc score m manipulate score return result keep result return null drop result\n", "comment": "filters a single code result code object\n"}
{"id": "1907480", "raw_code": "\tpublic int compare(Object o1, Object o2) {\n\t\tif (!(o1 instanceof Result) || !(o2 instanceof Result))\n\t\t\tthrow new ClassCastException();\n\t\tResult r1 = (Result) o1;\n\t\tResult r2 = (Result) o2;\n\t\t\n\t\treturn r1.getHitPos() - r2.getHitPos();\n\t}\n", "raw_comment": "\t/**\n\t * Compares its two arguments for order. Returns a negative integer, zero,\n\t * or a positive integer as the first argument is less than, equal to, or\n\t * greater than the second.\n\t * \n\t * @param o1 the first object to be compared\n\t * @param o2 the second object to be compared\n\t * @return a negative integer, zero, or a positive integer as the first\n\t *         argument is less than, equal to, or greater than the second\n\t */\n", "code": "public int compare object o1 object o2 if o1 instanceof result o2 instanceof result throw new class cast exception result r1 result o1 result r2 result o2 return r1 get hit pos r2 get hit pos\n", "comment": "compares its two arguments for order\n"}
{"id": "1907484", "raw_code": "\tpublic int compare(Object o1, Object o2) {\n\t\tif (!(o1 instanceof Result) || !(o2 instanceof Result))\n\t\t\tthrow new ClassCastException();\n\t\tResult r1 = (Result) o1;\n\t\tResult r2 = (Result) o2;\n\t\t\n\t\treturn r1.getAnswer().length() - r2.getAnswer().length();\n\t}\n", "raw_comment": "\t/**\n\t * Compares its two arguments for order. Returns a negative integer, zero,\n\t * or a positive integer as the first argument is less than, equal to, or\n\t * greater than the second.\n\t * \n\t * @param o1 the first object to be compared\n\t * @param o2 the second object to be compared\n\t * @return a negative integer, zero, or a positive integer as the first\n\t *         argument is less than, equal to, or greater than the second\n\t */\n", "code": "public int compare object o1 object o2 if o1 instanceof result o2 instanceof result throw new class cast exception result r1 result o1 result r2 result o2 return r1 get answer length r2 get answer length\n", "comment": "compares its two arguments for order\n"}
{"id": "1907486", "raw_code": "\tpublic Result apply(Result result) {\n\t\tresult.incScore(scale * result.getHitPos());  // manipulate score\n\t\t\n\t\treturn result;  // no results are dropped by this filter\n\t}\n", "raw_comment": "\t/**\n\t * Filters a single <code>Result</code> object.\n\t * \n\t * @param result result to filter\n\t * @return result with manipulated score\n\t */\n", "code": "public result apply result result result inc score scale result get hit pos manipulate score return result no results are dropped by this filter\n", "comment": "filters a single code result code object\n"}
{"id": "1907489", "raw_code": "\tprotected float combMIN(float[] scores, int totalExtractors) {\n\t\tif (scores.length < totalExtractors) return 0;\n\t\t\n\t\tfloat min = Float.MAX_VALUE;\n\t\tfor (float score : scores) min = Math.min(min, score);\n\t\t\n\t\treturn min;\n\t}\n", "raw_comment": "\t/**\n\t * Combines normalized scores using CombMIN.\n\t * \n\t * @param scores scores from all extractors that got the answer\n\t * @param totalExtractors total number of extractors\n\t */\n", "code": "protected float comb min float scores int total extractors if scores length total extractors return 0 float min float max value for float score scores min math min min score return min\n", "comment": "combines normalized scores using comb min\n"}
{"id": "1907490", "raw_code": "\tpublic int getCorrect() {\n\t\treturn correct;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of correct applications of the pattern.\n\t * \n\t * @return number of correct applications\n\t */\n", "code": "public int get correct return correct\n", "comment": "returns the number of correct applications of the pattern\n"}
{"id": "1907491", "raw_code": "\tprivate boolean hasHigherPreference(Result result1, Result result2) {\n\t\tfor (String extractionTechnique : EXTRACTION_TECHNIQUES) {\n\t\t\tif (result2.extractedWith(extractionTechnique)) return false;\n\t\t\tif (result1.extractedWith(extractionTechnique)) return true;\n\t\t}\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Checks if the answer extraction techniques used to extract the first\n\t * result have a higher preference for answer projection than the techniques\n\t * used for the second result.\n\t * \n\t * @param result1 first result\n\t * @param result2 second result\n\t * @return <code>true</code> iff the techniques used for the first result\n\t *         have a higher preference\n\t */\n", "code": "private boolean has higher preference result result1 result result2 for string extraction technique extraction techniques if result2 extracted with extraction technique return false if result1 extracted with extraction technique return true return false\n", "comment": "checks if the answer extraction techniques used to extract the first\n"}
{"id": "1907492", "raw_code": "\tprotected float combMED(float[] scores, int totalExtractors) {\n\t\tArrays.sort(scores);\n\t\tint zeroAnswers = totalExtractors - scores.length;\n\t\tint m = totalExtractors / 2 - zeroAnswers;\n\t\tfloat med;\n\t\tif (totalExtractors % 2 == 1) {\n\t\t\tmed = (m >= 0 ? scores[m] : 0);\n\t\t} else {\n\t\t\tmed = (m >= 0 ? scores[m] : 0);\n\t\t\tmed += (m - 1 >= 0 ? scores[m - 1] : 0);\n\t\t\tmed /= 2;\n\t\t}\n\t\t\n\t\treturn med;\n\t}\n", "raw_comment": "\t/**\n\t * Combines normalized scores using CombMED.\n\t * \n\t * @param scores scores from all extractors that got the answer\n\t * @param totalExtractors total number of extractors\n\t */\n", "code": "protected float comb med float scores int total extractors arrays sort scores int zero answers total extractors scores length int m total extractors 2 zero answers float med if total extractors 2 1 med m 0 scores m 0 else med m 0 scores m 0 med m 1 0 scores m 1 0 med 2 return med\n", "comment": "combines normalized scores using comb med\n"}
{"id": "1907495", "raw_code": "\tprotected float combMAX(float[] scores, int totalExtractors) {\n\t\tfloat max = 0;\n\t\tfor (float score : scores) max = Math.max(max, score);\n\t\t\n\t\treturn max;\n\t}\n", "raw_comment": "\t/**\n\t * Combines normalized scores using CombMAX.\n\t * \n\t * @param scores scores from all extractors that got the answer\n\t * @param totalExtractors total number of extractors\n\t */\n", "code": "protected float comb max float scores int total extractors float max 0 for float score scores max math max max score return max\n", "comment": "combines normalized scores using comb max\n"}
{"id": "1907496", "raw_code": "\tpublic Result apply(Result result) {\n\t\tresult.setScore(0f);\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the score of the result to 0 and returns it.\n\t * \n\t * @param result result to filter\n\t * @return result with score 0\n\t */\n", "code": "public result apply result result result set score 0f return result\n", "comment": "sets the score of the result to 0 and returns it\n"}
{"id": "1907497", "raw_code": "\tpublic int getWrong() {\n\t\treturn wrong;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of wrong applications of the pattern.\n\t * \n\t * @return number of wrong applications\n\t */\n", "code": "public int get wrong return wrong\n", "comment": "returns the number of wrong applications of the pattern\n"}
{"id": "1907498", "raw_code": "\tprivate Result filterFunctionWords(Result result) {\n\t\tif (result == null) return null;\n\t\t\n\t\tString[] tokens = NETagger.tokenize(result.getAnswer());\n\t\tfor (String token : tokens)\n\t\t\tif ((token.length() > 1 || token.matches(\"\\\\d\")) &&\n\t\t\t\t\t!FunctionWords.lookup(token))\n\t\t\t\treturn result;\n\t\t\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Drops a result if the answer string contains only function words and\n\t * single characters (except digits).\n\t * \n\t * @param result result to filter\n\t * @return result or <code>null</code>\n\t */\n", "code": "private result filter function words result result if result null return null string tokens netagger tokenize result get answer for string token tokens if token length 1 token matches d function words lookup token return result return null\n", "comment": "drops a result if the answer string contains only function words and\n"}
{"id": "1907499", "raw_code": "\tprotected float combSUM(float[] scores, int totalExtractors) {\n\t\tfloat sum = 0;\n\t\tfor (float score : scores) sum += score;\n\t\t\n\t\treturn sum;\n\t}\n", "raw_comment": "\t/**\n\t * Combines normalized scores using CombSUM.\n\t * \n\t * @param scores scores from all extractors that got the answer\n\t * @param totalExtractors total number of extractors\n\t */\n", "code": "protected float comb sum float scores int total extractors float sum 0 for float score scores sum score return sum\n", "comment": "combines normalized scores using comb sum\n"}
{"id": "1907500", "raw_code": "\tprivate Result filterInterrogatives(Result result) {\n\t\tif (result == null) return null;\n\t\tString answer = result.getAnswer();\n\t\t\n\t\tif (answer.matches(\"(?i).*?(^|\\\\W)\" +\n\t\t\t\t\"(what|which|when|where|who|why|how)($|\\\\W).*+\"))\n\t\t\treturn null;\n\t\t\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Drops a result if the answer string contains an interrogative.\n\t * \n\t * @param result result to be filtered\n\t * @return result or <code>null</code>\n\t */\n", "code": "private result filter interrogatives result result if result null return null string answer result get answer if answer matches i w what which when where who why how w return null return result\n", "comment": "drops a result if the answer string contains an interrogative\n"}
{"id": "1907502", "raw_code": "\tprotected float combANZ(float[] scores, int totalExtractors) {\n\t\tfloat sum = combSUM(scores, totalExtractors);\n\t\tfloat anz = sum / scores.length;\n\t\t\n\t\treturn anz;\n\t}\n", "raw_comment": "\t/**\n\t * Combines normalized scores using CombANZ.\n\t * \n\t * @param scores scores from all extractors that got the answer\n\t * @param totalExtractors total number of extractors\n\t */\n", "code": "protected float comb anz float scores int total extractors float sum comb sum scores total extractors float anz sum scores length return anz\n", "comment": "combines normalized scores using comb anz\n"}
{"id": "1907503", "raw_code": "\tprivate Result filterSingleBracket(Result result) {\n\t\tif (result == null) return null;\n\t\tString answer = result.getAnswer();\n\t\t\n\t\t// quotation marks\n\t\tif (answer.matches(\"[^\\\"]*?\\\"[^\\\"]*+\")) return null;\n\t\t// brackets\n\t\tif (answer.matches(\"[^\\\\(]*?\\\\).*+\") ||\n\t\t\tanswer.matches(\".*?\\\\([^\\\\)]*+\")) return null;\n\t\tif (answer.matches(\"[^\\\\{]*?\\\\}.*+\") ||\n\t\t\tanswer.matches(\".*?\\\\{[^\\\\}]*+\")) return null;\n\t\tif (answer.matches(\"[^\\\\[]*?\\\\].*+\") ||\n\t\t\tanswer.matches(\".*?\\\\[[^\\\\]]*+\")) return null;\n\t\t\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Drops a result if the answer string contains a single bracket or\n\t * quotation mark.\n\t * \n\t * @param result result to be filtered\n\t * @return result or <code>null</code>\n\t */\n", "code": "private result filter single bracket result result if result null return null string answer result get answer quotation marks if answer matches return null brackets if answer matches answer matches return null if answer matches answer matches return null if answer matches answer matches return null return result\n", "comment": "drops a result if the answer string contains a single bracket or\n"}
{"id": "1907504", "raw_code": "\tpublic float getConfidence() {\n\t\treturn ((float) correct) / (correct + wrong);\n\t}\n", "raw_comment": "\t/**\n\t * Calculates a confidence measure for the pattern by applying the formula\n\t * <code>confidence = correct / (correct + wrong)</code>.\n\t * \n\t * @return confidence in the pattern\n\t */\n", "code": "public float get confidence return float correct correct wrong\n", "comment": "calculates a confidence measure for the pattern by applying the formula\n"}
{"id": "1907505", "raw_code": "\tprivate void waitForDocs() {\n\t\tsynchronized (docs) {\n\t\t\twhile (pending > 0)\n\t\t\t\ttry {\n\t\t\t\t\tdocs.wait();\n\t\t\t\t} catch (InterruptedException e) {}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Delays the main thread until all documents have been fetched.\n\t */\n", "code": "private void wait for docs synchronized docs while pending 0 try docs wait catch interrupted exception e\n", "comment": "delays the main thread until all documents have been fetched\n"}
{"id": "1907506", "raw_code": "\tprotected float combMNZ(float[] scores, int totalExtractors) {\n\t\tfloat sum = combSUM(scores, totalExtractors);\n\t\tfloat mnz = sum * scores.length;\n\t\t\n\t\treturn mnz;\n\t}\n", "raw_comment": "\t/**\n\t * Combines normalized scores using CombANZ.\n\t * \n\t * @param scores scores from all extractors that got the answer\n\t * @param totalExtractors total number of extractors\n\t */\n", "code": "protected float comb mnz float scores int total extractors float sum comb sum scores total extractors float mnz sum scores length return mnz\n", "comment": "combines normalized scores using comb anz\n"}
{"id": "1907507", "raw_code": "\tprivate Result filterAdverbs(Result result) {\n\t\tif (result == null) return null;\n\t\tString answer = result.getAnswer();\n\t\t\n\t\tif (answer.matches(\"(?i).*?ly\") && WordNet.isAdverb(answer))\n\t\t\treturn null;\n\t\t\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Drops a result if the answer string is an adverb.\n\t * \n\t * @param result result to filter\n\t * @return result or <code>null</code>\n\t */\n", "code": "private result filter adverbs result result if result null return null string answer result get answer if answer matches i ly word net is adverb answer return null return result\n", "comment": "drops a result if the answer string is an adverb\n"}
{"id": "1907509", "raw_code": "\tpublic void waitForPending() {\n\t\tsynchronized (docs) {\n\t\t\twhile (pending >= MAX_PENDING)\n\t\t\t\ttry {\n\t\t\t\t\tdocs.wait();\n\t\t\t\t} catch (InterruptedException e) {}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Delays a thread until there are less than MAX_PENDING pending fetchers.\n\t */\n", "code": "public void wait for pending synchronized docs while pending max pending try docs wait catch interrupted exception e\n", "comment": "delays a thread until there are less than max pending pending fetchers\n"}
{"id": "1907512", "raw_code": "\tpublic void incCorrect() {\n\t\tcorrect++;\n\t}\n", "raw_comment": "\t/**\n\t * Increments the number of correct applications by 1.\n\t */\n", "code": "public void inc correct correct\n", "comment": "increments the number of correct applications by 1\n"}
{"id": "1907513", "raw_code": "\tpublic void incPending() {\n\t\tsynchronized (docs) {\n\t\t\tpending++;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Increments the number of pending fetchers by 1.\n\t */\n", "code": "public void inc pending synchronized docs pending\n", "comment": "increments the number of pending fetchers by 1\n"}
{"id": "1907514", "raw_code": "\tpublic void addDoc(Result doc, boolean cached) {\n\t\tsynchronized (docs) {\n\t\t\tif (doc != null) {\n\t\t\t\tdocs.add(doc);\n\t\t\t\t\n\t\t\t\t// if caching is enabled and the document is not from the search\n\t\t\t\t// engine cache, write document to local cache\n\t\t\t\tif (CACHING && !cached) {\n\t\t\t\t\tFileCache cache = new FileCache(CACHE_DIR);\n\t\t\t\t\tcache.write(doc.getDocID(), new String[] {doc.getAnswer()});\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpending--;\n\t\t\tdocs.notify();  // signal that the fetcher is done\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Used by the <code>WebDocumentFetcher</code> threads to return the\n\t * documents.\n\t * \n\t * @param doc document that contains a snippet\n\t * @param cached flag indicating that the document was fetched from the\n\t *               search engine cache\n\t */\n", "code": "public void add doc result doc boolean cached synchronized docs if doc null docs add doc if caching is enabled and the document is not from the search engine cache write document to local cache if caching cached file cache cache new file cache cache dir cache write doc get doc id new string doc get answer pending docs notify signal that the fetcher is done\n", "comment": "used by the code web document fetcher code threads to return the\n"}
{"id": "1907515", "raw_code": "\tpublic void incWrong() {\n\t\twrong++;\n\t}\n", "raw_comment": "\t/**\n\t * Increments the number of wrong applications by 1.\n\t */\n", "code": "public void inc wrong wrong\n", "comment": "increments the number of wrong applications by 1\n"}
{"id": "1907517", "raw_code": "\t\tpublic void increment() {\n\t\t\tthis.value++;\n\t\t}\n", "raw_comment": "\t\t/**\tincrement the value of this TermCounter by 1\n\t\t */\n", "code": "public void increment this value\n", "comment": "increment the value of this term counter by 1\n"}
{"id": "1907518", "raw_code": "\tpublic void start(WebDocumentFetcherFilter filter, Result snippet) {\n\t\tthis.filter = filter;\n\t\tthis.snippet = snippet;\n\t\t\n\t\t// wait until there are less than MAX_PENDING pending fetchers\n\t\tfilter.waitForPending();\n\t\t\n\t\tstart();\n\t\t\n\t\t// one more pending fetcher\n\t\tfilter.incPending();\n\t}\n", "raw_comment": "\t/**\n\t * Sets the calling filter and the snippet and starts the thread.\n\t * \n\t * @param filter the calling <code>WebDocumentFetcherFilter</code>\n\t * @param snippet search engine snippet\n\t */\n", "code": "public void start web document fetcher filter filter result snippet this filter filter this snippet snippet wait until there are less than max pending pending fetchers filter wait for pending start one more pending fetcher filter inc pending\n", "comment": "sets the calling filter and the snippet and starts the thread\n"}
{"id": "1907521", "raw_code": "\t\tpublic void increment(int inc) {\n\t\t\tthis.value += inc;\n\t\t}\n", "raw_comment": "\t\t/** increment the value of this TermCounter by <code>inc</code>\n\t\t * @param inc \n\t\t */\n", "code": "public void increment int inc this value inc\n", "comment": "increment the value of this term counter by code inc code\n"}
{"id": "1907522", "raw_code": "\t\tpublic void decrement() {\n\t\t\tthis.value--;\n\t\t}\n", "raw_comment": "\t\t/**\tdecrement the value of this TermCounter by 1\n\t\t */\n", "code": "public void decrement this value\n", "comment": "decrement the value of this term counter by 1\n"}
{"id": "1907523", "raw_code": "\t\tpublic void decrement(int dec) {\n\t\t\tthis.value -= dec;\n\t\t}\n", "raw_comment": "\t\t/** decrement the value of this TermCounter by <code>dec</code>\n\t\t * @param dec \n\t\t */\n", "code": "public void decrement int dec this value dec\n", "comment": "decrement the value of this term counter by code dec code\n"}
{"id": "1907524", "raw_code": "\t\tpublic void multiplyValue(int fact) {\n\t\t\tthis.value *= fact;\n\t\t}\n", "raw_comment": "\t\t/** multiply the value of this TermCounter times <code>fact</code>\n\t\t * @param fact \n\t\t */\n", "code": "public void multiply value int fact this value fact\n", "comment": "multiply the value of this term counter times code fact code\n"}
{"id": "1907526", "raw_code": "\tprivate String checkType(String target) {\n\t\tif (!StanfordNeTagger.isInitialized()) StanfordNeTagger.init();\n\t\tHashMap<String, String[]> nesByType = StanfordNeTagger.extractNEs(target);\n\t\tArrayList<String> neTypes = new ArrayList<String>(nesByType.keySet());\n\t\tfor (int t = 0; t < neTypes.size(); t++) {\n\t\t\tString type = neTypes.get(t);\n\t\t\tString[] nes = nesByType.get(type);\n\t\t\tfor (int n = 0; n < nes.length; n++)\n\t\t\t\tif (nes[n].equals(target))\n\t\t\t\t\treturn type.replace(\"NE\", \"\");\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/** \n\t * find the NE type of a target\n\t * \n\t * @param target the target String to check\n\t * @return the NE type of target, or null, if the type couldn't be determined\n\t */\n", "code": "private string check type string target if stanford ne tagger is initialized stanford ne tagger init hash map string string nes by type stanford ne tagger extract nes target array list string ne types new array list string nes by type key set for int t 0 t ne types size t string type ne types get t string nes nes by type get type for int n 0 n nes length n if nes n equals target return type replace ne return null\n", "comment": "find the ne type of a target\n"}
{"id": "1907527", "raw_code": "\tprivate boolean cutExtension(String target, ArrayList<String> targets) {\n\t\tif (this.extensionList.isEmpty())\n\t\t\tfor (int i = 0; i < extensions.length; i++)\n\t\t\t\tthis.extensionList.add(extensions[i]);\n\t\t\t\n\t\tString[] targetTokens = target.split(\"\\\\s\");\n\t\tString last = targetTokens[targetTokens.length - 1];\n\t\tif (this.extensionList.contains(last) && (targetTokens.length > 1)) {\n\t\t\tString cutTarget = targetTokens[0];\n\t\t\tfor (int i = 1; i < (targetTokens.length - 1); i++)\n\t\t\t\tcutTarget += \" \" + targetTokens[i];\n\t\t\ttargets.add(cutTarget);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * cut tailing words like \"University\", \"International\", \"Corporation\":\n\t * \"Microsoft Corporation\" --> \"Microsoft\" and add the non-cut part to target list\n\t * \n\t * @param target the target String to cut\n\t * @param targets the target list to add the cut part to\n\t * @return true if a cut target was added, false otherwise\n\t */\n", "code": "private boolean cut extension string target array list string targets if this extension list is empty for int i 0 i extensions length i this extension list add extensions i string target tokens target split s string last target tokens target tokens length 1 if this extension list contains last target tokens length 1 string cut target target tokens 0 for int i 1 i target tokens length 1 i cut target target tokens i targets add cut target return true return false\n", "comment": "cut tailing words like university international corporation\n"}
{"id": "1907529", "raw_code": "\tprivate void extractAcronyms(ArrayList<String> targets) {\n\t\tHashSet<String> duplicateFreeTargets = new LinkedHashSet<String>(targets);\n\t\tfor (Iterator<String> iter = duplicateFreeTargets.iterator(); iter.hasNext();) {\n\t\t\tString target = iter.next();\n\t\t\tString[] targetTokens = target.split(\"\\\\s\");\n\t\t\tfor (String t : targetTokens) {\n\t\t\t\tif (t.matches(\"([A-Z]){3,}\")) {\n\t\t\t\t\ttargets.add(t);\n\t\t\t\t} else if (t.matches(\"([A-Z]\\\\.){2,}\")) {\n\t\t\t\t\ttargets.add(t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\textract acronyms from the targets:\n\t * \"Basque ETA\" --> \"ETA\"\n\t * \n\t * @param targets the list of targets\n\t */\n", "code": "private void extract acronyms array list string targets hash set string duplicate free targets new linked hash set string targets for iterator string iter duplicate free targets iterator iter has next string target iter next string target tokens target split s for string t target tokens if t matches a z 3 targets add t else if t matches a z 2 targets add t\n", "comment": "extract acronyms from the targets\n"}
{"id": "1907619", "raw_code": "\tprotected int getMaxCount(HashMap<String, TermCounter> counters) {\n\t\tint max = 0;\n\t\tfor (Iterator<String> keys = counters.keySet().iterator(); keys.hasNext();)\n\t\t\tmax = Math.max(max, counters.get(keys.next()).getValue());\n\t\treturn max;\n\t}\n", "raw_comment": "\t/**\tget the maximum count out of a set of counters \n\t * @param counters\n\t */\n", "code": "protected int get max count hash map string term counter counters int max 0 for iterator string keys counters key set iterator keys has next max math max max counters get keys next get value return max\n", "comment": "get the maximum count out of a set of counters\n"}
{"id": "1907647", "raw_code": "\tprotected int getCountSum(HashMap<String, TermCounter> counters) {\n\t\tint sum = 0;\n\t\tfor (Iterator<String> keys = counters.keySet().iterator(); keys.hasNext();)\n\t\t\tsum += counters.get(keys.next()).getValue();\n\t\treturn sum;\n\t}\n", "raw_comment": "\t/**\tget the sum of a set of counters \n\t * @param counters\n\t */\n", "code": "protected int get count sum hash map string term counter counters int sum 0 for iterator string keys counters key set iterator keys has next sum counters get keys next get value return sum\n", "comment": "get the sum of a set of counters\n"}
{"id": "42467780", "raw_code": "    public void flushBuffer() throws IOException \n    {\t \n\t  if(count>0)\n\t  {\t\n\t    StreamWork.writeInt(out,count);\n\t    out.write(buf, 0, count);\t\n\t    out.flush();\t\n\t    count = 0;\t\t\n\t  } \t\t \n   }\n", "raw_comment": "    /** Flush the internal buffer */\n", "code": "public void flush buffer throws ioexception if count 0 stream work write int out count out write buf 0 count out flush count 0\n", "comment": "flush the internal buffer\n"}
{"id": "8960409", "raw_code": "\tpublic void traverseXMLDocumentByIteration(Element root) {\n\t\t//iterate all child nodes\n\t\tfor(Iterator i=root.elementIterator(); i.hasNext(); ) {\n\t\t\tElement element = (Element)i.next();\n\t\t\t//do something\n\t\t}\n\t\t//iterate all nodes whose tag name is 'foo'\n\t\tfor(Iterator i=root.elementIterator(\"foo\"); i.hasNext();) {\n\t\t\tElement foo = (Element)i.next();\n\t\t\t//do something\n\t\t}\n\t\t//iterate element\n\t\tfor(Iterator i = root.attributeIterator(); i.hasNext(); ) {\n\t\t\tAttribute attribute = (Attribute) i.next();\n\t\t\t//do something\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * traverse XML document by iteration \n\t * @param root\n\t */\n", "code": "public void traverse xmldocument by iteration element root iterate all child nodes for iterator i root element iterator i has next element element element i next do something iterate all nodes whose tag name is foo for iterator i root element iterator foo i has next element foo element i next do something iterate element for iterator i root attribute iterator i has next attribute attribute attribute i next do something\n", "comment": "traverse xml document by iteration\n"}
{"id": "8960413", "raw_code": "\tpublic void visit(Element element) {\n\t\tSystem.out.println(element.getName());\n\t} \n", "raw_comment": "\t/**\n\t * traverse XML document by visitor GoF\n\t * invoke by code: root.accept(this)\n\t */\n", "code": "public void visit element element system out println element get name\n", "comment": "traverse xml document by visitor go f\n"}
{"id": "8960416", "raw_code": "\tpublic String transferXMLToString(Document doc) {\n\t\treturn doc.asXML();\n\t}\n", "raw_comment": "\t/**\n\t * transfer XML to String\n\t * @param doc\n\t * @return\n\t */\n", "code": "public string transfer xmlto string document doc return doc as xml\n", "comment": "transfer xml to string\n"}
{"id": "8960417", "raw_code": "\tpublic Document transferStringToXML(String string) throws DocumentException {\n\t\treturn DocumentHelper.parseText(string);\n\t}\n", "raw_comment": "\t/**\n\t * transfer String to XML\n\t * @param string\n\t * @return\n\t * @throws DocumentException\n\t */\n", "code": "public document transfer string to xml string string throws document exception return document helper parse text string\n", "comment": "transfer string to xml\n"}
{"id": "8960454", "raw_code": "\tprivate void initialize() {\n\t\tthis.setSize(688, 513);\n\t\tthis.setLayout(new BorderLayout());\n\t\tthis.add(getJSplitPane(), BorderLayout.CENTER);\n\t\tthis.add(getJPanel(), BorderLayout.NORTH);\n\t\tthis.add(getJScrollPane2(), BorderLayout.SOUTH);\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 688 513 this set layout new border layout this add get jsplit pane border layout center this add get jpanel border layout north this add get jscroll pane2 border layout south\n", "comment": "this method initializes this\n"}
{"id": "8960456", "raw_code": "\tprivate JSplitPane getJSplitPane() {\n\t\tif (jSplitPane == null) {\n\t\t\tjSplitPane = new JSplitPane();\n\t\t\tjSplitPane.setDividerLocation(150);\n\t\t\tjSplitPane.setRightComponent(getJTabbedPane());\n\t\t\tjSplitPane.setLeftComponent(getJScrollPane());\n\t\t}\n\t\treturn jSplitPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jSplitPane\t\n\t * \t\n\t * @return javax.swing.JSplitPane\t\n\t */\n", "code": "private jsplit pane get jsplit pane if j split pane null j split pane new jsplit pane j split pane set divider location 150 j split pane set right component get jtabbed pane j split pane set left component get jscroll pane return j split pane\n", "comment": "this method initializes j split pane\n"}
{"id": "8960461", "raw_code": "\tprivate void initialize() {\n\t\tthis.setSize(688, 550);\n\t\tthis.setLayout(new BorderLayout());\n\t\tthis.add(getJTabbedPane(), BorderLayout.CENTER);\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 688 550 this set layout new border layout this add get jtabbed pane border layout center\n", "comment": "this method initializes this\n"}
{"id": "8960462", "raw_code": "\tprivate JPanel getJPanel() {\n\t\tif (jPanel == null) {\n\t\t\tjPanel = new JPanel();\n\t\t\tjPanel.setLayout(null);\n\t\t\tjPanel.setPreferredSize(new Dimension(0, 55));\n\t\t\tjPanel.add(getJButton(), null);\n\t\t\tjPanel.add(getJButton1(), null);\n\t\t\tjPanel.add(getJButton2(), null);\n\t\t}\n\t\treturn jPanel;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jPanel\t\n\t * \t\n\t * @return javax.swing.JPanel\t\n\t */\n", "code": "private jpanel get jpanel if j panel null j panel new jpanel j panel set layout null j panel set preferred size new dimension 0 55 j panel add get jbutton null j panel add get jbutton1 null j panel add get jbutton2 null return j panel\n", "comment": "this method initializes j panel\n"}
{"id": "8960464", "raw_code": "\tprivate JTabbedPane getJTabbedPane() {\n\t\tif (jTabbedPane == null) {\n\t\t\tjTabbedPane = new JTabbedPane();\n\t\t\tjTabbedPane.addTab(\"FEA\", null, getApdlUI(), null);\n\t\t\tjTabbedPane.addTab(\"Result\", null, getResultUI(), null);\n\t\t}\n\t\treturn jTabbedPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTabbedPane\t\n\t * \t\n\t * @return javax.swing.JTabbedPane\t\n\t */\n", "code": "private jtabbed pane get jtabbed pane if j tabbed pane null j tabbed pane new jtabbed pane j tabbed pane add tab fea null get apdl ui null j tabbed pane add tab result null get result ui null return j tabbed pane\n", "comment": "this method initializes j tabbed pane\n"}
{"id": "8960465", "raw_code": "\tprivate ApdlUI getApdlUI() {\n\t\tif (apdlUI == null) {\n\t\t\tapdlUI = new ApdlUI();\n\t\t}\n\t\treturn apdlUI;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes apdlUI\t\n\t * \t\n\t * @return edu.ielab.localansys.ui.ApdlUI\t\n\t */\n", "code": "private apdl ui get apdl ui if apdl ui null apdl ui new apdl ui return apdl ui\n", "comment": "this method initializes apdl ui\n"}
{"id": "8960467", "raw_code": "\tprivate ResultUI getResultUI() {\n\t\tif (resultUI == null) {\n\t\t\tresultUI = new ResultUI();\n\t\t}\n\t\treturn resultUI;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes resultUI\t\n\t * \t\n\t * @return edu.ielab.localansys.ui.ResultUI\t\n\t */\n", "code": "private result ui get result ui if result ui null result ui new result ui return result ui\n", "comment": "this method initializes result ui\n"}
{"id": "8960468", "raw_code": "\tprivate void initialize() {\n\t\tjLabel = new JLabel();\n\t\tjLabel.setBounds(new Rectangle(15, 380, 74, 21));\n\t\tjLabel.setText(\"Console\");\n\t\tthis.setSize(688, 513);\n\t\tthis.setLayout(null);\n\t\tthis.add(getJScrollPane(), null);\n\t\tthis.add(getJButton(), null);\n\t\tthis.add(getJButton1(), null);\n\t\tthis.add(jLabel, null);\n\t\tthis.add(getJScrollPane1(), null);\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize j label new jlabel j label set bounds new rectangle 15 380 74 21 j label set text console this set size 688 513 this set layout null this add get jscroll pane null this add get jbutton null this add get jbutton1 null this add j label null this add get jscroll pane1 null\n", "comment": "this method initializes this\n"}
{"id": "8960469", "raw_code": "\tprivate JButton getJButton() {\n\t\tif (jButton == null) {\n\t\t\tjButton = new JButton();\n\t\t\tjButton.setBounds(new Rectangle(91, 13, 111, 33));\n\t\t\tjButton.setText(\"List Results\");\n\t\t\tjButton.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tlistFileListInPanel(); // TODO Auto-generated Event stub actionPerformed()\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton if j button null j button new jbutton j button set bounds new rectangle 91 13 111 33 j button set text list results j button add action listener new java awt event action listener public void action performed java awt event action event e list file list in panel todo auto generated event stub action performed return j button\n", "comment": "this method initializes j button\n"}
{"id": "8960470", "raw_code": "\tprivate JScrollPane getJScrollPane() {\n\t\tif (jScrollPane == null) {\n\t\t\tjScrollPane = new JScrollPane();\n\t\t\tjScrollPane.setBounds(new Rectangle(33, 40, 607, 339));\n\t\t\tjScrollPane.setViewportView(getJTable());\n\t\t}\n\t\treturn jScrollPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jScrollPane\t\n\t * \t\n\t * @return javax.swing.JScrollPane\t\n\t */\n", "code": "private jscroll pane get jscroll pane if j scroll pane null j scroll pane new jscroll pane j scroll pane set bounds new rectangle 33 40 607 339 j scroll pane set viewport view get jtable return j scroll pane\n", "comment": "this method initializes j scroll pane\n"}
{"id": "8960472", "raw_code": "\tprivate JTable getJTable() {\n\t\tif (jTable == null) {\n\t\t\tmodel = new Table_Model(2000);\n\t\t\tjTable = new JTable(model);\n\t\t\tjTable.setBounds(new Rectangle(0, 0, 700, 0));\n\t\t}\n\t\treturn jTable;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTable\t\n\t * \t\n\t * @return javax.swing.JTable\t\n\t */\n", "code": "private jtable get jtable if j table null model new table model 2000 j table new jtable model j table set bounds new rectangle 0 0 700 0 return j table\n", "comment": "this method initializes j table\n"}
{"id": "8960476", "raw_code": "\tprivate JButton getJButton() {\n\t\tif (jButton == null) {\n\t\t\tjButton = new JButton();\n\t\t\tjButton.setBounds(new Rectangle(149, 13, 121, 21));\n\t\t\tjButton.setText(\"Load APDL File\");\n\t\t\tjButton.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tloadAPDLFile(); // TODO Auto-generated Event stub actionPerformed()\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton if j button null j button new jbutton j button set bounds new rectangle 149 13 121 21 j button set text load apdl file j button add action listener new java awt event action listener public void action performed java awt event action event e load apdlfile todo auto generated event stub action performed return j button\n", "comment": "this method initializes j button\n"}
{"id": "8960484", "raw_code": "\tprivate JButton getJButton1() {\n\t\tif (jButton1 == null) {\n\t\t\tjButton1 = new JButton();\n\t\t\tjButton1.setBounds(new Rectangle(295, 14, 110, 33));\n\t\t\tjButton1.setText(\"Show Result\");\n\t\t\tjButton1.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tshowResultInPanel(); // TODO Auto-generated Event stub actionPerformed()\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jButton1;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton1\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton1 if j button1 null j button1 new jbutton j button1 set bounds new rectangle 295 14 110 33 j button1 set text show result j button1 add action listener new java awt event action listener public void action performed java awt event action event e show result in panel todo auto generated event stub action performed return j button1\n", "comment": "this method initializes j button1\n"}
{"id": "8960486", "raw_code": "\tprivate JButton getJButton1() {\n\t\tif (jButton1 == null) {\n\t\t\tjButton1 = new JButton();\n\t\t\tjButton1.setBounds(new Rectangle(385, 12, 122, 23));\n\t\t\tjButton1.setText(\"Execute\");\n\t\t\tjButton1.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\texecuteAPDL();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jButton1;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton1\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton1 if j button1 null j button1 new jbutton j button1 set bounds new rectangle 385 12 122 23 j button1 set text execute j button1 add action listener new java awt event action listener public void action performed java awt event action event e execute apdl return j button1\n", "comment": "this method initializes j button1\n"}
{"id": "8960492", "raw_code": "\tprivate JScrollPane getJScrollPane1() {\n\t\tif (jScrollPane1 == null) {\n\t\t\tjScrollPane1 = new JScrollPane();\n\t\t\tjScrollPane1.setBounds(new Rectangle(15, 400, 651, 105));\n\t\t\tjScrollPane1.setViewportView(getJTextArea());\n\t\t}\n\t\treturn jScrollPane1;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jScrollPane1\t\n\t * \t\n\t * @return javax.swing.JScrollPane\t\n\t */\n", "code": "private jscroll pane get jscroll pane1 if j scroll pane1 null j scroll pane1 new jscroll pane j scroll pane1 set bounds new rectangle 15 400 651 105 j scroll pane1 set viewport view get jtext area return j scroll pane1\n", "comment": "this method initializes j scroll pane1\n"}
{"id": "8960500", "raw_code": "\tprivate void initialize() {\n\t\tthis.setSize(1000, 611);\n\t\tthis.setLayout(new BorderLayout());\n\t\tthis.add(getJTabbedPane(), BorderLayout.CENTER);\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 1000 611 this set layout new border layout this add get jtabbed pane border layout center\n", "comment": "this method initializes this\n"}
{"id": "8960509", "raw_code": "\tprivate JTabbedPane getJTabbedPane() {\n\t\tif (jTabbedPane == null) {\n\t\t\tjTabbedPane = new JTabbedPane();\n\t\t\tjTabbedPane.setName(\"\");\n\t\t\tjTabbedPane.addTab(\"Modeling\", null, getJPanel(), null);\n\t\t\tjTabbedPane.addTab(\"Analysis\", null, getJPanel1(), null);\n\t\t\tjTabbedPane.addTab(\"Result\", null, getJPanel2(), null);\n\t\t}\n\t\treturn jTabbedPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTabbedPane\t\n\t * \t\n\t * @return javax.swing.JTabbedPane\t\n\t */\n", "code": "private jtabbed pane get jtabbed pane if j tabbed pane null j tabbed pane new jtabbed pane j tabbed pane set name j tabbed pane add tab modeling null get jpanel null j tabbed pane add tab analysis null get jpanel1 null j tabbed pane add tab result null get jpanel2 null return j tabbed pane\n", "comment": "this method initializes j tabbed pane\n"}
{"id": "8960512", "raw_code": "\tprivate JButton getJButton2() {\n\t\tif (jButton2 == null) {\n\t\t\tjButton2 = new JButton();\n\t\t\tjButton2.setBounds(new Rectangle(496, 13, 110, 33));\n\t\t\tjButton2.setText(\"Download\");\n\t\t}\n\t\treturn jButton2;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton2\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton2 if j button2 null j button2 new jbutton j button2 set bounds new rectangle 496 13 110 33 j button2 set text download return j button2\n", "comment": "this method initializes j button2\n"}
{"id": "8960515", "raw_code": "\tprivate JList getJList() {\n\t\tif (jList == null) {\n\t\t\tjList = new JList();\n\t\t\tjList.setVisibleRowCount(800);\n\t\t\tjList.addMouseListener(new java.awt.event.MouseAdapter() {\n\t\t\t\tpublic void mouseClicked(java.awt.event.MouseEvent e) {\n\t\t\t\t\tint index = getJList().locationToIndex(e.getPoint());\n\t\t\t\t\tString item = (String)getJList().getModel().getElementAt(index);\n\t\t\t\t\tclickedFileNameTemp = item;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jList;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jList\t\n\t * \t\n\t * @return javax.swing.JList\t\n\t */\n", "code": "private jlist get jlist if j list null j list new jlist j list set visible row count 800 j list add mouse listener new java awt event mouse adapter public void mouse clicked java awt event mouse event e int index get jlist location to index e get point string item string get jlist get model get element at index clicked file name temp item return j list\n", "comment": "this method initializes j list\n"}
{"id": "8960518", "raw_code": "\tprivate JPanel getJPanel2() {\n\t\tif (jPanel2 == null) {\n\t\t\tjPanel2 = new JPanel();\n\t\t\tjPanel2.setLayout(new GridBagLayout());\n\t\t}\n\t\treturn jPanel2;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jPanel2\t\n\t * \t\n\t * @return javax.swing.JPanel\t\n\t */\n", "code": "private jpanel get jpanel2 if j panel2 null j panel2 new jpanel j panel2 set layout new grid bag layout return j panel2\n", "comment": "this method initializes j panel2\n"}
{"id": "8960520", "raw_code": "\tprivate JImagePane getJImagePane() {\n\t\tif (jImagePane == null) {\n\t\t\tjImagePane = new JImagePane();\n\t\t\tjImagePane.setBounds(new Rectangle(20, 48, 949, 237));\n\t\t\tjImagePane.setBackgroundImage(getToolkit().getImage(System.getProperty(\"user.dir\")+\"/pic/bearing.png\"));\n\t\t}\n\t\treturn jImagePane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jImagePane\t\n\t * \t\n\t * @return edu.ielab.localansys.ui.JImagePane\t\n\t */\n", "code": "private jimage pane get jimage pane if j image pane null j image pane new jimage pane j image pane set bounds new rectangle 20 48 949 237 j image pane set background image get toolkit get image system get property user dir pic bearing png return j image pane\n", "comment": "this method initializes j image pane\n"}
{"id": "8960522", "raw_code": "\tprivate JTextField getJTextField() {\n\t\tif (jTextField == null) {\n\t\t\tjTextField = new JTextField();\n\t\t\tjTextField.setBounds(new Rectangle(66, 348, 131, 22));\n\t\t\tjTextField.setText(\"35\");\n\t\t}\n\t\treturn jTextField;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field if j text field null j text field new jtext field j text field set bounds new rectangle 66 348 131 22 j text field set text 35 return j text field\n", "comment": "this method initializes j text field\n"}
{"id": "8960525", "raw_code": "\tprivate JTextField getJTextField1() {\n\t\tif (jTextField1 == null) {\n\t\t\tjTextField1 = new JTextField();\n\t\t\tjTextField1.setBounds(new Rectangle(254, 348, 132, 22));\n\t\t\tjTextField1.setText(\"160\");\n\t\t}\n\t\treturn jTextField1;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField1\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field1 if j text field1 null j text field1 new jtext field j text field1 set bounds new rectangle 254 348 132 22 j text field1 set text 160 return j text field1\n", "comment": "this method initializes j text field1\n"}
{"id": "8960526", "raw_code": "\tprivate JTabbedPane getJTabbedPane() {\n\t\tif (jTabbedPane == null) {\n\t\t\tjTabbedPane = new JTabbedPane();\n\t\t\tjTabbedPane.addTab(\"Graph Result\", null, getJImagePane(), null);\n\t\t\tjTabbedPane.addTab(\"Text Result\", null, getJScrollPane1(), null);\n\t\t}\n\t\treturn jTabbedPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTabbedPane\t\n\t * \t\n\t * @return javax.swing.JTabbedPane\t\n\t */\n", "code": "private jtabbed pane get jtabbed pane if j tabbed pane null j tabbed pane new jtabbed pane j tabbed pane add tab graph result null get jimage pane null j tabbed pane add tab text result null get jscroll pane1 null return j tabbed pane\n", "comment": "this method initializes j tabbed pane\n"}
{"id": "8960527", "raw_code": "\tprivate JTextField getJTextField2() {\n\t\tif (jTextField2 == null) {\n\t\t\tjTextField2 = new JTextField();\n\t\t\tjTextField2.setBounds(new Rectangle(439, 349, 129, 24));\n\t\t\tjTextField2.setText(\"192\");\n\t\t}\n\t\treturn jTextField2;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField2\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field2 if j text field2 null j text field2 new jtext field j text field2 set bounds new rectangle 439 349 129 24 j text field2 set text 192 return j text field2\n", "comment": "this method initializes j text field2\n"}
{"id": "8960528", "raw_code": "\tprivate JImagePane getJImagePane() {\n\t\tif (jImagePane == null) {\n\t\t\tjImagePane = new JImagePane();\n\t\t}\n\t\treturn jImagePane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jImagePane\t\n\t * \t\n\t * @return edu.ielab.localansys.ui.JImagePane\t\n\t */\n", "code": "private jimage pane get jimage pane if j image pane null j image pane new jimage pane return j image pane\n", "comment": "this method initializes j image pane\n"}
{"id": "8960530", "raw_code": "\tprivate JTextField getJTextField3() {\n\t\tif (jTextField3 == null) {\n\t\t\tjTextField3 = new JTextField();\n\t\t\tjTextField3.setBounds(new Rectangle(627, 348, 113, 24));\n\t\t\tjTextField3.setText(\"166\");\n\t\t}\n\t\treturn jTextField3;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField3\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field3 if j text field3 null j text field3 new jtext field j text field3 set bounds new rectangle 627 348 113 24 j text field3 set text 166 return j text field3\n", "comment": "this method initializes j text field3\n"}
{"id": "8960533", "raw_code": "\tprivate JTextField getJTextField4() {\n\t\tif (jTextField4 == null) {\n\t\t\tjTextField4 = new JTextField();\n\t\t\tjTextField4.setBounds(new Rectangle(799, 348, 123, 22));\n\t\t\tjTextField4.setText(\"194\");\n\t\t}\n\t\treturn jTextField4;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField4\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field4 if j text field4 null j text field4 new jtext field j text field4 set bounds new rectangle 799 348 123 22 j text field4 set text 194 return j text field4\n", "comment": "this method initializes j text field4\n"}
{"id": "8960535", "raw_code": "\tprivate JScrollPane getJScrollPane2() {\n\t\tif (jScrollPane2 == null) {\n\t\t\tjScrollPane2 = new JScrollPane();\n\t\t\tjScrollPane2.setPreferredSize(new Dimension(3, 100));\n\t\t\tjScrollPane2.setViewportView(getJTextArea1());\n\t\t}\n\t\treturn jScrollPane2;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jScrollPane2\t\n\t * \t\n\t * @return javax.swing.JScrollPane\t\n\t */\n", "code": "private jscroll pane get jscroll pane2 if j scroll pane2 null j scroll pane2 new jscroll pane j scroll pane2 set preferred size new dimension 3 100 j scroll pane2 set viewport view get jtext area1 return j scroll pane2\n", "comment": "this method initializes j scroll pane2\n"}
{"id": "8960537", "raw_code": "\tprivate JTextField getJTextField5() {\n\t\tif (jTextField5 == null) {\n\t\t\tjTextField5 = new JTextField();\n\t\t\tjTextField5.setBounds(new Rectangle(65, 390, 131, 21));\n\t\t\tjTextField5.setText(\"166\");\n\t\t}\n\t\treturn jTextField5;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField5\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field5 if j text field5 null j text field5 new jtext field j text field5 set bounds new rectangle 65 390 131 21 j text field5 set text 166 return j text field5\n", "comment": "this method initializes j text field5\n"}
{"id": "8960541", "raw_code": "\tprivate JTextField getJTextField6() {\n\t\tif (jTextField6 == null) {\n\t\t\tjTextField6 = new JTextField();\n\t\t\tjTextField6.setBounds(new Rectangle(255, 389, 129, 22));\n\t\t\tjTextField6.setText(\"196\");\n\t\t}\n\t\treturn jTextField6;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField6\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field6 if j text field6 null j text field6 new jtext field j text field6 set bounds new rectangle 255 389 129 22 j text field6 set text 196 return j text field6\n", "comment": "this method initializes j text field6\n"}
{"id": "8960545", "raw_code": "\tprivate JTextField getJTextField7() {\n\t\tif (jTextField7 == null) {\n\t\t\tjTextField7 = new JTextField();\n\t\t\tjTextField7.setBounds(new Rectangle(439, 388, 129, 22));\n\t\t\tjTextField7.setText(\"101\");\n\t\t}\n\t\treturn jTextField7;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField7\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field7 if j text field7 null j text field7 new jtext field j text field7 set bounds new rectangle 439 388 129 22 j text field7 set text 101 return j text field7\n", "comment": "this method initializes j text field7\n"}
{"id": "8960548", "raw_code": "\tprivate JTextField getJTextField8() {\n\t\tif (jTextField8 == null) {\n\t\t\tjTextField8 = new JTextField();\n\t\t\tjTextField8.setBounds(new Rectangle(630, 388, 112, 24));\n\t\t\tjTextField8.setText(\"90\");\n\t\t}\n\t\treturn jTextField8;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField8\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field8 if j text field8 null j text field8 new jtext field j text field8 set bounds new rectangle 630 388 112 24 j text field8 set text 90 return j text field8\n", "comment": "this method initializes j text field8\n"}
{"id": "8960551", "raw_code": "\tprivate JTextField getJTextField9() {\n\t\tif (jTextField9 == null) {\n\t\t\tjTextField9 = new JTextField();\n\t\t\tjTextField9.setBounds(new Rectangle(798, 390, 122, 21));\n\t\t\tjTextField9.setText(\"102.5\");\n\t\t}\n\t\treturn jTextField9;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField9\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field9 if j text field9 null j text field9 new jtext field j text field9 set bounds new rectangle 798 390 122 21 j text field9 set text 102 5 return j text field9\n", "comment": "this method initializes j text field9\n"}
{"id": "8960556", "raw_code": "\tprivate JTextField getJTextField10() {\n\t\tif (jTextField10 == null) {\n\t\t\tjTextField10 = new JTextField();\n\t\t\tjTextField10.setBounds(new Rectangle(65, 434, 131, 22));\n\t\t\tjTextField10.setText(\"272.5\");\n\t\t}\n\t\treturn jTextField10;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField10\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field10 if j text field10 null j text field10 new jtext field j text field10 set bounds new rectangle 65 434 131 22 j text field10 set text 272 5 return j text field10\n", "comment": "this method initializes j text field10\n"}
{"id": "8960560", "raw_code": "\tprivate JTextField getJTextField11() {\n\t\tif (jTextField11 == null) {\n\t\t\tjTextField11 = new JTextField();\n\t\t\tjTextField11.setBounds(new Rectangle(254, 434, 131, 26));\n\t\t\tjTextField11.setText(\"373\");\n\t\t}\n\t\treturn jTextField11;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField11\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field11 if j text field11 null j text field11 new jtext field j text field11 set bounds new rectangle 254 434 131 26 j text field11 set text 373 return j text field11\n", "comment": "this method initializes j text field11\n"}
{"id": "8960562", "raw_code": "\tprivate JTextField getJTextField12() {\n\t\tif (jTextField12 == null) {\n\t\t\tjTextField12 = new JTextField();\n\t\t\tjTextField12.setBounds(new Rectangle(441, 435, 126, 23));\n\t\t\tjTextField12.setText(\"485\");\n\t\t}\n\t\treturn jTextField12;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField12\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field12 if j text field12 null j text field12 new jtext field j text field12 set bounds new rectangle 441 435 126 23 j text field12 set text 485 return j text field12\n", "comment": "this method initializes j text field12\n"}
{"id": "8960565", "raw_code": "\tprivate JTextField getJTextField13() {\n\t\tif (jTextField13 == null) {\n\t\t\tjTextField13 = new JTextField();\n\t\t\tjTextField13.setBounds(new Rectangle(631, 433, 109, 25));\n\t\t\tjTextField13.setText(\"843\");\n\t\t}\n\t\treturn jTextField13;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField13\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field13 if j text field13 null j text field13 new jtext field j text field13 set bounds new rectangle 631 433 109 25 j text field13 set text 843 return j text field13\n", "comment": "this method initializes j text field13\n"}
{"id": "8960568", "raw_code": "\tprivate JTextField getJTextField14() {\n\t\tif (jTextField14 == null) {\n\t\t\tjTextField14 = new JTextField();\n\t\t\tjTextField14.setBounds(new Rectangle(799, 433, 120, 23));\n\t\t\tjTextField14.setText(\"955\");\n\t\t}\n\t\treturn jTextField14;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField14\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field14 if j text field14 null j text field14 new jtext field j text field14 set bounds new rectangle 799 433 120 23 j text field14 set text 955 return j text field14\n", "comment": "this method initializes j text field14\n"}
{"id": "8960569", "raw_code": "\tprivate JTextField getJTextField15() {\n\t\tif (jTextField15 == null) {\n\t\t\tjTextField15 = new JTextField();\n\t\t\tjTextField15.setBounds(new Rectangle(66, 479, 127, 19));\n\t\t\tjTextField15.setText(\"955\");\n\t\t}\n\t\treturn jTextField15;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField15\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field15 if j text field15 null j text field15 new jtext field j text field15 set bounds new rectangle 66 479 127 19 j text field15 set text 955 return j text field15\n", "comment": "this method initializes j text field15\n"}
{"id": "8960572", "raw_code": "\tprivate JTextField getJTextField16() {\n\t\tif (jTextField16 == null) {\n\t\t\tjTextField16 = new JTextField();\n\t\t\tjTextField16.setBounds(new Rectangle(255, 479, 129, 21));\n\t\t\tjTextField16.setText(\"2000\");\n\t\t}\n\t\treturn jTextField16;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField16\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field16 if j text field16 null j text field16 new jtext field j text field16 set bounds new rectangle 255 479 129 21 j text field16 set text 2000 return j text field16\n", "comment": "this method initializes j text field16\n"}
{"id": "8960574", "raw_code": "\tprivate JTextField getJTextField17() {\n\t\tif (jTextField17 == null) {\n\t\t\tjTextField17 = new JTextField();\n\t\t\tjTextField17.setBounds(new Rectangle(444, 477, 125, 22));\n\t\t\tjTextField17.setText(\"70\");\n\t\t}\n\t\treturn jTextField17;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField17\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field17 if j text field17 null j text field17 new jtext field j text field17 set bounds new rectangle 444 477 125 22 j text field17 set text 70 return j text field17\n", "comment": "this method initializes j text field17\n"}
{"id": "8960579", "raw_code": "\tprivate JButton getJButton() {\n\t\tif (jButton == null) {\n\t\t\tjButton = new JButton();\n\t\t\tjButton.setBounds(new Rectangle(271, 526, 103, 32));\n\t\t\tjButton.setText(\"Modeling\");\n\t\t\tjButton.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tmodeling();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton if j button null j button new jbutton j button set bounds new rectangle 271 526 103 32 j button set text modeling j button add action listener new java awt event action listener public void action performed java awt event action event e modeling return j button\n", "comment": "this method initializes j button\n"}
{"id": "8960587", "raw_code": "\tprivate JButton getJButton1() {\n\t\tif (jButton1 == null) {\n\t\t\tjButton1 = new JButton();\n\t\t\tjButton1.setBounds(new Rectangle(426, 526, 103, 32));\n\t\t\tjButton1.setText(\"Clear\");\n\t\t}\n\t\treturn jButton1;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton1\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton1 if j button1 null j button1 new jbutton j button1 set bounds new rectangle 426 526 103 32 j button1 set text clear return j button1\n", "comment": "this method initializes j button1\n"}
{"id": "8960591", "raw_code": "\tprivate JButton getJButton2() {\n\t\tif (jButton2 == null) {\n\t\t\tjButton2 = new JButton();\n\t\t\tjButton2.setBounds(new Rectangle(587, 526, 103, 32));\n\t\t\tjButton2.setText(\"Get Result\");\n\t\t}\n\t\treturn jButton2;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton2\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton2 if j button2 null j button2 new jbutton j button2 set bounds new rectangle 587 526 103 32 j button2 set text get result return j button2\n", "comment": "this method initializes j button2\n"}
{"id": "8960595", "raw_code": "\tprivate JButton getJButton3() {\n\t\tif (jButton3 == null) {\n\t\t\tjButton3 = new JButton();\n\t\t\tjButton3.setBounds(new Rectangle(802, 506, 78, 36));\n\t\t\tjButton3.setText(\"Debug\");\n\t\t\tjButton3.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tsetDebugValue();\t\t\t\t}\n\t\t\t});\n\t\t\tjButton3.show(debug);\n\t\t}\n\t\treturn jButton3;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton3\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton3 if j button3 null j button3 new jbutton j button3 set bounds new rectangle 802 506 78 36 j button3 set text debug j button3 add action listener new java awt event action listener public void action performed java awt event action event e set debug value j button3 show debug return j button3\n", "comment": "this method initializes j button3\n"}
{"id": "47297703", "raw_code": "\tpublic void draw(GL10 gl) {\n\t\tgl.glColor4f(0.3f, 0.3f, 0.3f, 1.0f); // light gray\n\t\t// Enabled the vertices buffer for writing and to be used during rendering.\n\t\tgl.glEnableClientState(GL10.GL_VERTEX_ARRAY);\n\t\t// Specifies the location and data format of an array of vertex coordinates to use when rendering.\n\t\tgl.glVertexPointer(3, GL10.GL_FLOAT, 0, vertexBuffer);\n\t\tgl.glDrawElements(GL10.GL_TRIANGLES, indices.length, GL10.GL_UNSIGNED_SHORT, indexBuffer);\n\t\t// Disable the vertices buffer.\n\t\tgl.glDisableClientState(GL10.GL_VERTEX_ARRAY);\n\t}\n", "raw_comment": "\t/**\n\t * This function draws our square on screen.\n\t * @param gl\n\t */\n", "code": "public void draw gl10 gl gl gl color4f 0 3f 0 3f 0 3f 1 0f light gray enabled the vertices buffer for writing and to be used during rendering gl gl enable client state gl10 gl vertex array specifies the location and data format of an array of vertex coordinates to use when rendering gl gl vertex pointer 3 gl10 gl float 0 vertex buffer gl gl draw elements gl10 gl triangles indices length gl10 gl unsigned short index buffer disable the vertices buffer gl gl disable client state gl10 gl vertex array\n", "comment": "this function draws our square on screen\n"}
{"id": "24516213", "raw_code": "\tprivate char line_type() {\n\t\tif((this.blanks_only)\n\t\t\t|| (this.control_area[0] == 'C')\n\t\t\t|| (this.control_area[0] == '*')) return 'C';\n\t\tif((this.control_area[5] == ' ') || (this.control_area[5] == '0'))\n\t\t\treturn '0';\n\t\treturn '&';\n\t}\n", "raw_comment": "\t/** Checks the current content of columns 1 to 6.\n\t *  Does not do a full syntax check (we don't write a Fortran compiler).\n\t * @return '0' for an initial line, '&amp;' for a continuation line\n\t *         and 'C' for a comment line.\n\t */\n", "code": "private char line type if this blanks only this control area 0 c this control area 0 return c if this control area 5 this control area 5 0 return 0 return\n", "comment": "checks the current content of columns 1 to 6\n"}
{"id": "24516251", "raw_code": "\tpublic boolean allowBreak(String cont1, String cont2) {\n\t\tint l = cont1.length();\n\t\tif(this.getColumn() + l < this.width)\n\t\t\treturn false;\n\t\t\n\t\tsuper.print(cont1 + System.getProperty(\"line.separator\") +\n\t\t\tthis.indent_sb.toString() + cont2);\n\t\treturn true;\n\t}\n", "raw_comment": "\t/** Inserts a line break if the current position is\n\t *  close to or beyond the desired width.\n\t *\n\t * @param cont1 continuation character appended at the end\n\t *        of the current line.\n\t * @param cont2 continuation character inserted after the\n\t *        indentation of the next line.\n\t * @return <tt>true</tt> if a line break has been inserted,\n\t *         <tt>false</tt> otherwise.\n\t */\n", "code": "public boolean allow break string cont1 string cont2 int l cont1 length if this get column l this width return false super print cont1 system get property line separator this indent sb to string cont2 return true\n", "comment": "inserts a line break if the current position is\n"}
{"id": "24516296", "raw_code": "\tpublic boolean allowBreak(String cont1, String cont2) {\n\t\treturn false;\n\t}\n", "raw_comment": "\t/** Inserts a line break if the current position is\n\t *  close to or beyond the desired width.\n\t *\n\t *  This implementation always returns false and does nothing.\n\t *\n\t * @param cont1 continuation character appended at the end\n\t *        of the current line.\n\t * @param cont2 continuation character inserted after the\n\t *        indentation of the next line.\n\t * @return <tt>true</tt> if a line break has been inserted,\n\t *         <tt>false</tt> otherwise.\n\t */\n", "code": "public boolean allow break string cont1 string cont2 return false\n", "comment": "inserts a line break if the current position is\n"}
{"id": "24516317", "raw_code": "\tpublic int size() {\n\t\treturn this.factors.length;\n\t}\n", "raw_comment": "\t/** Counts the number of distinct factors.\n\t *\n\t *  Does not take the multiplicities into account.\n\t */\n", "code": "public int size return this factors length\n", "comment": "counts the number of distinct factors\n"}
{"id": "24516325", "raw_code": "\tpublic boolean closeMatch(Product other) {\n\t\tint diff = this.factors.length - other.factors.length;\n\t\tif(diff != 0)\n\t\t\treturn false;\n\t\telse {\n\t\t\tfor(int i = 0; i < this.factors.length; ++i) {\n\t\t\t\tdiff = this.factors[i].compareTo(other.factors[i]);\n\t\t\t\tif(diff != 0)\n\t\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n", "raw_comment": "\t/** Test for equality up to coefficient */\n", "code": "public boolean close match product other int diff this factors length other factors length if diff 0 return false else for int i 0 i this factors length i diff this factors i compare to other factors i if diff 0 return false return true\n", "comment": "test for equality up to coefficient\n"}
{"id": "24516336", "raw_code": "\tpublic void shuffle() {\n\t\tint n = this.size();\n\t\tif((n > 1) &&\n\t\t\t\t(this.getExponent(0) < 0) &&\n\t\t\t\t(this.getCoefficient().equals(BigRational.ONE)\n\t\t\t\t || this.getCoefficient().equals(BigRational.MINUS_ONE))) {\n\t\t\tfor(int i = 1; i < n; ++i) {\n\t\t\t\tif(this.getExponent(i) > 0) {\n\t\t\t\t\tPower temp = this.factors[0];\n\t\t\t\t\tthis.factors[0] = this.factors[i];\n\t\t\t\t\tthis.factors[i] = temp;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/** Permutes the factors such that a division\n\t *  for the first factor is avoided in certain\n\t *  cases.\n\t *\n\t *  If the coefficient is 1 or -1 and if the\n\t *  exponent of the first factor is negative\n\t *  this function tries to find a factor\n\t *  with a positive exponent and swaps these\n\t *  two factors.\n\t *\n\t *  Without such an improvement the resulting\n\t *  program contains operations like\n\t *  <pre>\n\t *     T = 1/y*x\n\t *  </pre>\n\t *  which can be avoided in favour of\n\t *  <pre>\n\t *     T = x/y\n\t *  </pre>\n\t */\n", "code": "public void shuffle int n this size if n 1 this get exponent 0 0 this get coefficient equals big rational one this get coefficient equals big rational minus one for int i 1 i n i if this get exponent i 0 power temp this factors 0 this factors 0 this factors i this factors i temp return\n", "comment": "permutes the factors such that a division\n"}
{"id": "24516346", "raw_code": "\tpublic Coefficient dup() {\n\t\treturn this.dup(-1);\n\t}\n", "raw_comment": "\t/** Creates a deep copy of this expression.\n\t */\n", "code": "public coefficient dup return this dup 1\n", "comment": "creates a deep copy of this expression\n"}
{"id": "24516369", "raw_code": "\tpublic boolean closeMatch(Power other) {\n\t\treturn this.base.compareTo(other.base) == 0;\n\t}\n", "raw_comment": "\t/** Tests if two powers have the same base.\n\t * \n\t * @param other Power to be compared with.\n\t *\n\t */\n", "code": "public boolean close match power other return this base compare to other base 0\n", "comment": "tests if two powers have the same base\n"}
{"id": "24516374", "raw_code": "\tpublic int compareTo(Power other) {\n\t\tint diff = this.base.compareTo(other.base);\n\t\tif(diff != 0)\n\t\t\treturn diff;\n\t\telse {\n\t\t\tdiff = this.exponent - other.exponent;\n\t\t\tif(diff > 0)\n\t\t\t\treturn 1;\n\t\t\telse if(diff < 0)\n\t\t\t\treturn -1;\n\t\t\telse\n\t\t\t\treturn 0;\n\t\t}\n\t}\n", "raw_comment": "\t/** Implements a comparison between powers.\n\t *\n\t *  This method ensures that by sorting elements\n\t *  with same base end up next to each other.\n\t *\n\t * @param other Power to be compared with.\n\t *\n\t * @see #closeMatch(Power)\n\t */\n", "code": "public int compare to power other int diff this base compare to other base if diff 0 return diff else diff this exponent other exponent if diff 0 return 1 else if diff 0 return 1 else return 0\n", "comment": "implements a comparison between powers\n"}
{"id": "24516453", "raw_code": "\tpublic void setExtraFlag() {\n\t\tthis.extra_flag = true;\n\t}\n", "raw_comment": "\t/** The extra flag is used to indicate patterns in parentheses. */\n", "code": "public void set extra flag this extra flag true\n", "comment": "the extra flag is used to indicate patterns in parentheses\n"}
{"id": "24516454", "raw_code": "\tpublic boolean getExtraFlag() {\n\t\treturn this.extra_flag;\n\t}\n", "raw_comment": "\t/** The extra flag is used to indicate patterns in parentheses. */\n", "code": "public boolean get extra flag return this extra flag\n", "comment": "the extra flag is used to indicate patterns in parentheses\n"}
{"id": "24516509", "raw_code": "\tpublic int countDependence(Symbol s) {\n\t\tassert this.rreg != null;\n\t\treturn this.rreg.countDependence(s);\n\t}\n", "raw_comment": "\t/** Must only be called after setPseudoCode. */\n", "code": "public int count dependence symbol s assert this rreg null return this rreg count dependence s\n", "comment": "must only be called after set pseudo code\n"}
{"id": "24516554", "raw_code": "\tpublic CSTable getBracket(int idx) {\n\t\tassert this.brackets != null :\n\t\t\t\"brackets is null while accessing \" + BracketRequest.PREFIX + idx;\n\t\tassert idx < this.brackets.length :\n\t\t\t\"index out of bounds while accessing \" + BracketRequest.PREFIX + idx;\n\t\tassert idx >= 0 :\n\t\t\t\"index out of bounds while accessing \" + BracketRequest.PREFIX + idx;\n\n\t\treturn this.brackets[idx];\n\t}\n", "raw_comment": "\t/** Returns a bracket.\n\t * @param idx zero-based index of the requested bracket.\n\t */\n", "code": "public cstable get bracket int idx assert this brackets null brackets is null while accessing bracket request prefix idx assert idx this brackets length index out of bounds while accessing bracket request prefix idx assert idx 0 index out of bounds while accessing bracket request prefix idx return this brackets idx\n", "comment": "returns a bracket\n"}
{"id": "24516568", "raw_code": "\tpublic void setBrackets(CSTable[] brackets) {\n\t\tthis.brackets = brackets;\n\t}\n", "raw_comment": "\t/** Stores the argument as list of brackets.\n\t *  Does not copy the array.\n\t */\n", "code": "public void set brackets cstable brackets this brackets brackets\n", "comment": "stores the argument as list of brackets\n"}
{"id": "24517523", "raw_code": "  public void jjtAccept(TemplateParserVisitor visitor, java.util.Properties data) throws haggies.util.UserException {\n    visitor.visit(this, data);\n  }\n", "raw_comment": "  /** Accept the visitor. **/\n", "code": "public void jjt accept template parser visitor visitor java util properties data throws haggies util user exception visitor visit this data\n", "comment": "accept the visitor\n"}
{"id": "24517993", "raw_code": "  final public String expression() throws ParseException {\n        String s1, s2, s3;\n    s1 = logical_or_expression();\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case 27:\n      jj_consume_token(27);\n      s2 = expression();\n      jj_consume_token(28);\n      s3 = expression();\n                        Boolean b1 = toBool(s1);\n                        s1 = (b1 == null)?\n                                null : b1 ? s2 : s3;\n      break;\n    default:\n      jj_la1[0] = jj_gen;\n      ;\n    }\n          {if (true) return s1;}\n    throw new Error(\"Missing return statement in function\");\n  }\n", "raw_comment": "/** Operator precedence and associativity.\n *\n *   x [ ]            (substring)\n *   x ( )\n *   x !              (factorial)\n *   x !!             (double factorial)\n *\n *   = x              (is not null)\n *   # x              (string length)\n *   * x              (dereference)\n *   ~ x              (int to float)\n *   ! x              (logical not)\n *   | x              (magnitude)\n *   &lt;&gt; x       (trim)\n *   &lt;&lt; x       (left trim)\n *   &gt;&gt; x       (right trim)\n *\n *   x ^ y            (power)\n *   x ** y           (power)\n *   x @ y            (cut left y-1 characters)\n *   x | y            (only left y characters)\n *   x # y            (concatenate)\n *   x ^^ y           (repeat n times)\n *\n *   - x\n *   + x\n *\n *   x * y\n *   x / y\n *   x // y\n *   x % y\n *\n *   x + y\n *   x - y\n *   x &lt;&lt; y     (align left)\n *   x &gt;&lt; y     (center)\n *   x &gt;&gt; y     (align right)\n *   x &lt;: y        (minimum)\n *   x &gt;: y        (maximum)\n *\n *   x = y            (string equality)\n *   x == y\n *   x != y           (numerical inequality)\n *   x &gt;= y\n *     ...\n\n *   x &amp;&amp; y\n *\n *   x || y\n *   x >< y           (XOR)\n *\n *   x ? y : z\n */\n", "code": "final public string expression throws parse exception string s1 s2 s3 s1 logical or expression switch jj ntk 1 jj ntk jj ntk case 27 jj consume token 27 s2 expression jj consume token 28 s3 expression boolean b1 to bool s1 s1 b1 null null b1 s2 s3 break default jj la1 0 jj gen if true return s1 throw new error missing return statement in function\n", "comment": "operator precedence and associativity\n"}
{"id": "29575432", "raw_code": "\tpublic void setScripts(List<Resource> scripts) {\n\t\tthis.scripts = scripts;\n\t}\n", "raw_comment": "\t/**\n\t * Set the list of scripts to be executed by this action.\n\t * \n\t * @param scripts a list of {@link Resource} objects identifying the scripts to execute\n\t */\n", "code": "public void set scripts list resource scripts this scripts scripts\n", "comment": "set the list of scripts to be executed by this action\n"}
{"id": "47211629", "raw_code": "    public void upcall(ReadMessage message) throws IOException {\n        String s = message.readString();\n        System.out.println(\"Received string: \" + s);\n        setFinished();\n    }\n", "raw_comment": "    /**\n     * Function called by Ibis to give us a newly arrived message\n     * \n     * @param message\n     *            the message\n     * @throws IOException\n     *             when the message cannot be read\n     */\n", "code": "public void upcall read message message throws ioexception string s message read string system out println received string s set finished\n", "comment": "function called by ibis to give us a newly arrived message\n"}
{"id": "47211645", "raw_code": "    public void upcall(ReadMessage message) throws IOException {\n        String s = message.readString();\n        System.out.println(message.origin() + \" says: \" + s);\n    }\n", "raw_comment": "    /**\n     * Function called by Ibis to give us a newly arrived message\n     * \n     * @param message\n     *            the message\n     * @throws IOException\n     *             when the message cannot be read\n     */\n", "code": "public void upcall read message message throws ioexception string s message read string system out println message origin says s\n", "comment": "function called by ibis to give us a newly arrived message\n"}
{"id": "47211688", "raw_code": "    public void addCube(Cube cube) {\n        if (currentSize >= cache.length) {\n            // cache full\n            return;\n        }\n        cache[currentSize] = cube;\n        currentSize++;\n    }\n", "raw_comment": "    /**\n     * Add given cube to the cache.\n     * \n     * @param cube cube to add to the cache\n     */\n", "code": "public void add cube cube cube if current size cache length cache full return cache current size cube current size\n", "comment": "add given cube to the cache\n"}
{"id": "47211689", "raw_code": "    public Cube getCube() {\n        if (currentSize == 0) {\n            return new Cube(cubeSize);\n        }\n\n        currentSize--;\n        return cache[currentSize];\n    }\n", "raw_comment": "    /**\n     * Get a cube from the cache.\n     * \n     * @return a cube from the cache\n     */\n", "code": "public cube get cube if current size 0 return new cube cube size current size return cache current size\n", "comment": "get a cube from the cache\n"}
{"id": "47211690", "raw_code": "    public void copyTo(Cube target) {\n        target.size = size;\n        target.twists = twists;\n        target.bound = bound;\n\n        // init state.\n        for (byte i = 0; i < SIDES; i++) {\n            System.arraycopy(data[i], 0, target.data[i], 0, data[i].length);\n        }\n    }\n", "raw_comment": "    /**\n     * Copy contents of this cube into a given target.\n     * \n     * @param target\n     *            target for data of this cube.\n     */\n", "code": "public void copy to cube target target size size target twists twists target bound bound init state for byte i 0 i sides i system arraycopy data i 0 target data i 0 data i length\n", "comment": "copy contents of this cube into a given target\n"}
{"id": "47211698", "raw_code": "    public int getTwists() {\n        return twists;\n    }\n", "raw_comment": "    /**\n     * Number of times this cube has been twisted\n     * \n     * @return the number of twists\n     */\n", "code": "public int get twists return twists\n", "comment": "number of times this cube has been twisted\n"}
{"id": "47211717", "raw_code": "    public void upcall(ReadMessage message) throws IOException, ClassNotFoundException {\n    \tsynchronizedUpcall(message);\n    }\n", "raw_comment": "    /**\n     * Function called by Ibis to give us a newly arrived message. This message\n     * will contain the ReceivePortIdentifier of the receive port of the ibis\n     * that send the request. We connect to this receive port, and send the\n     * reply.\n     */\n", "code": "public void upcall read message message throws ioexception class not found exception synchronized upcall message\n", "comment": "function called by ibis to give us a newly arrived message\n"}
{"id": "47211723", "raw_code": "    public boolean isSolved() {\n        for (byte i = 0; i < SIDES; i++) {\n            // all elements must be the same color as first element\n            byte color = data[i][0];\n            for (int j = 1; j < size * size; j++) {\n                if (data[i][j] != color) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n", "raw_comment": "    /**\n     * Returns if this cube is solved or not.\n     * \n     * @return true if solved, false if not\n     */\n", "code": "public boolean is solved for byte i 0 i sides i all elements must be the same color as first element byte color data i 0 for int j 1 j size size j if data i j color return false return true\n", "comment": "returns if this cube is solved or not\n"}
{"id": "47211733", "raw_code": "    public Cube twist(Axis axis, int row, boolean direction, CubeCache cache) {\n        if (row <= 0) {\n            throw new Error(\"first row to twist must be greater then zero\");\n        }\n\n        if (row >= size) {\n            throw new Error(\n                    \"first row to twist must be smaller then size of cube: \"\n                            + size);\n        }\n\n        Cube result = cache.getCube();\n        this.copyTo(result);\n\n        switch (axis) {\n        case X:\n            result.twistX(row, direction);\n            break;\n        case Y:\n            result.twistY(row, direction);\n            break;\n        case Z:\n            result.twistZ(row, direction);\n            break;\n        default:\n            // should not happen, but you never know :)\n            throw new Error(\"unknown axis in twist\");\n        }\n        return result;\n    }\n", "raw_comment": "    /**\n     * Twist the cube, returning the result as a new cube.\n     * \n     * @param axis\n     *            axis to turn cube on\n     * @param row\n     *            first row which to turn ( 0 < row < size )\n     * @param direction\n     *            direction to turn, either positive or negative\n     * @param cache\n     *            cache used to get new cube objects from.\n     * \n     * @return the resulting cube after twisting\n     */\n", "code": "public cube twist axis axis int row boolean direction cube cache cache if row 0 throw new error first row to twist must be greater then zero if row size throw new error first row to twist must be smaller then size of cube size cube result cache get cube this copy to result switch axis case x result twist x row direction break case y result twist y row direction break case z result twist z row direction break default should not happen but you never know throw new error unknown axis in twist return result\n", "comment": "twist the cube returning the result as a new cube\n"}
{"id": "47211751", "raw_code": "    private int inverse(int value) {\n        return size - 1 - value;\n    }\n", "raw_comment": "    /**\n     * Computes the \"inverse\" of a row or column (last = first, etc)\n     * \n     * @param value\n     *            original value\n     * @return inverse of value (last = first, etc)\n     */\n", "code": "private int inverse int value return size 1 value\n", "comment": "computes the inverse of a row or column last first etc\n"}
{"id": "47211892", "raw_code": "    private void checkIfConsistent() {\n        int[] counts = new int[SIDES];\n\n        for (int side = 0; side < SIDES; side++) {\n            for (int element = 0; element < size * size; element++) {\n                int color = data[side][element];\n\n                counts[color]++;\n            }\n        }\n\n        for (int i = 0; i < SIDES; i++) {\n            if (counts[i] != size * size) {\n                throw new Error(\"cube not consistent!\");\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Checks if consistent. Not a very good check, as only the absence of\n     * pieces is checked. If the cube is in a reachable state is not checked.\n     * \n     */\n", "code": "private void check if consistent int counts new int sides for int side 0 side sides side for int element 0 element size size element int color data side element counts color for int i 0 i sides i if counts i size size throw new error cube not consistent\n", "comment": "checks if consistent\n"}
{"id": "47212259", "raw_code": "    public boolean gotConnection(ReceivePort rp, SendPortIdentifier sp) {\n        System.err.println(\"Got connection with send port \" + sp);\n        return true;\n    }\n", "raw_comment": "    /**\n     * Interface ReceivePortConnectUpcall\n     */\n", "code": "public boolean got connection receive port rp send port identifier sp system err println got connection with send port sp return true\n", "comment": "interface receive port connect upcall\n"}
{"id": "19764528", "raw_code": "    private boolean isNaN(double x){\n        boolean test=false;\n        if(x!=x)test=true;\n        return test;\n    }\n", "raw_comment": "\t/**\n\t * Verify if a double is a NaN.\n\t * @param x The double to be verified.\n\t * @return True if is NaN, false otherwise.\n\t */\n", "code": "private boolean is na n double x boolean test false if x x test true return test\n", "comment": "verify if a double is a na n\n"}
{"id": "19764565", "raw_code": "    private double getM(double ca, double cb) {\n\n        return (ca + cb) / 2.0;\n    }\n", "raw_comment": "    /**\n     * This calculation is based on bisection method.\n     * @param ca\n     * @param cb\n     * @return\n     */\n", "code": "private double get m double ca double cb return ca cb 2 0\n", "comment": "this calculation is based on bisection method\n"}
{"id": "19764566", "raw_code": "    private double getS(double cB, double oldB, Function function) {\n\n        double numerator = cB - oldB;\n        double denominator = function.calculate(cB) - function.calculate(oldB);\n\n        return cB - (numerator / denominator) * function.calculate(cB);\n    }\n", "raw_comment": "    /**\n     * This calculation is based on secant method.\n     * @param cB\n     * @param oldB\n     * @param function\n     * @return\n     */\n", "code": "private double get s double c b double old b function function double numerator c b old b double denominator function calculate c b function calculate old b return c b numerator denominator function calculate c b\n", "comment": "this calculation is based on secant method\n"}
{"id": "19764577", "raw_code": "    public void reset(double x0) {\n        n = 0;\n        gn = x0;\n    }\n", "raw_comment": "    /**\n     * Reset the n and gn parameters.\n     * @param x0 x0\n     */\n", "code": "public void reset double x0 n 0 gn x0\n", "comment": "reset the n and gn parameters\n"}
{"id": "19764580", "raw_code": "    public boolean step(Function itFunction) throws Exception {\n        checkIterationCount();\n        computeNextPosition(itFunction);\n        checkPosition();\n        return hasConverged();\n    }\n", "raw_comment": "    /**\n     * Do the step of Fixed-Point Method.\n     * @return True if has converged, false otherwise.\n     * @throws Exception\n     */\n", "code": "public boolean step function it function throws exception check iteration count compute next position it function check position return has converged\n", "comment": "do the step of fixed point method\n"}
{"id": "19764581", "raw_code": "    public void checkIterationCount() throws Exception {\n        if (++n > maxIters) {\n        \tthrow new Exception();\n        }\n    }\n", "raw_comment": "    /**\n     * Check if the method reached the maximum number of iterations.\n     * @throws Exception If reached the maximum number of iterations.\n     */\n", "code": "public void check iteration count throws exception if n max iters throw new exception\n", "comment": "check if the method reached the maximum number of iterations\n"}
{"id": "19764582", "raw_code": "    public void computeNextPosition(Function itFunction) {\n    \tif (itFunction != null) {\n    \t\tprevXn = itFunction.calculate(xn);\n    \t} else prevXn = xn;\n        xn = gn;\n        gn = function.calculate(xn);\n    }\n", "raw_comment": "    /**\n     * Compute the next position.\n     */\n", "code": "public void compute next position function it function if it function null prev xn it function calculate xn else prev xn xn xn gn gn function calculate xn\n", "comment": "compute the next position\n"}
{"id": "19764585", "raw_code": "    public void checkPosition() throws Exception {\n        if (xn == prevXn) {\n        \tthrow new Exception();\n        }\n    }\n", "raw_comment": "    /**\n     * Check if is a valid position.\n     * @throws Exception If isn\ufffdt a valid position.\n     */\n", "code": "public void check position throws exception if xn prev xn throw new exception\n", "comment": "check if is a valid position\n"}
{"id": "19764588", "raw_code": "    public boolean hasConverged() {\n        return Math.abs((gn - xn) / xn) < tolerance;\n    }\n", "raw_comment": "    /**\n     * Verifies if has converged.\n     * @return True if has converged, false otherwise.\n     */\n", "code": "public boolean has converged return math abs gn xn xn tolerance\n", "comment": "verifies if has converged\n"}
{"id": "19764589", "raw_code": "    public double getIterationCount() {\n    \treturn n;\n    }\n", "raw_comment": "    /**\n     * Get the number of iterations.\n     * @return Number of iterations.\n     */\n", "code": "public double get iteration count return n\n", "comment": "get the number of iterations\n"}
{"id": "19764623", "raw_code": "    private int getJ() throws BusAlgorithmRException {\n\n        if (bs.size() != cs.size() || bs.size() < 1) {\n            throw generateError();\n        }\n\n        if (bs.size() == 1) {\n            return 1;\n        }\n\n        int j = bs.size() - 1;\n\n        for (; j > 1; j--) {\n\n            int tempJ = j - 1;// We need this trick because the list start with\n            // 0.\n\n            if (abs(bs.get(tempJ) - cs.get(tempJ)) <= 0.5 * abs(bs\n                    .get(tempJ - 1)\n                    - cs.get(tempJ - 1))) {\n                break;\n            }\n\n        }\n\n        return j;\n    }\n", "raw_comment": "    /**\n     * This method returns the largest positive integer satisfying j = 1 or, if\n     * 1 < j < i, then | b_j - c_j | <= 1/2 |b_(j-1) - c_(j-1)| (3.1.1)\n     * @return\n     * @throws BusAlgorithmRException \n     */\n", "code": "private int get j throws bus algorithm rexception if bs size cs size bs size 1 throw generate error if bs size 1 return 1 int j bs size 1 for j 1 j int temp j j 1 we need this trick because the list start with 0 if abs bs get temp j cs get temp j 0 5 abs bs get temp j 1 cs get temp j 1 break return j\n", "comment": "this method returns the largest positive integer satisfying j 1 or if\n"}
{"id": "19764624", "raw_code": "    private int getJ() throws BusAlgorithmMException {\n\n        if (bs.size() != cs.size() || bs.size() < 1) {\n            throw generateError();\n        }\n\n        if (bs.size() == 1) {\n            return 1;\n        }\n\n        int j = bs.size() - 1;\n\n        for (; j > 1; j--) {\n\n            int tempJ = j - 1;// We need this trick because the list start with\n                              // 0.\n\n            if (abs(bs.get(tempJ) - cs.get(tempJ)) <= 0.5 * abs(bs\n                    .get(tempJ - 1)\n                    - cs.get(tempJ - 1))) {\n                break;\n            }\n\n        }\n\n        return j;\n    }\n", "raw_comment": "    /**\n     * This method returns the largest positive integer satisfying j = 1 or, if\n     * 1 < j < i, then | b_j - c_j | <= 1/2 |b_(j-1) - c_(j-1)| (3.1.1)\n     * @return\n     * @throws BusAlgorithmMException \n     */\n", "code": "private int get j throws bus algorithm mexception if bs size cs size bs size 1 throw generate error if bs size 1 return 1 int j bs size 1 for j 1 j int temp j j 1 we need this trick because the list start with 0 if abs bs get temp j cs get temp j 0 5 abs bs get temp j 1 cs get temp j 1 break return j\n", "comment": "this method returns the largest positive integer satisfying j 1 or if\n"}
{"id": "19764625", "raw_code": "    private double getX_K() throws BusAlgorithmRException {\n\n        if (this.xs.size() < 1) {\n            throw generateError();\n        }\n\n        double cX = this.xs.get(this.xs.size() - 1);\n        double cK;\n        for (int i = this.xs.size() - 1; i >= 0; i--) {\n            cK = this.xs.get(i);\n            if (this.f.calculate(cK) * this.f.calculate(cX) <= 0) {\n                return cK;\n            }\n        }\n        \n        throw generateError();\n    }\n", "raw_comment": "    /**\n     * This method return x_k, where k is the largest (nonegative) integer\n     * satisfying k < i and f(x_k) * f(x_i) <= 0\n     * @return\n     * @throws BusAlgorithmRException \n     */\n", "code": "private double get x k throws bus algorithm rexception if this xs size 1 throw generate error double c x this xs get this xs size 1 double c k for int i this xs size 1 i 0 i c k this xs get i if this f calculate c k this f calculate c x 0 return c k throw generate error\n", "comment": "this method return x k where k is the largest nonegative integer\n"}
{"id": "19764626", "raw_code": "    private double getX_K() throws BusAlgorithmMException {\n\n        if (this.xs.size() < 1) {\n            throw generateError();\n        }\n\n        double cX = this.xs.get(this.xs.size() - 1);\n        double cK;\n        for (int i = this.xs.size() - 1; i >= 0; i--) {\n            cK = this.xs.get(i);\n            if (this.f.calculate(cK) * this.f.calculate(cX) <= 0) {\n                return cK;\n            }\n        }\n\n        throw generateError();\n    }\n", "raw_comment": "    /**\n     * This method return x_k, where k is the largest (nonegative) integer\n     * satisfying k < i and f(x_k) * f(x_i) <= 0\n     * @return\n     * @throws BusAlgorithmMException \n     */\n", "code": "private double get x k throws bus algorithm mexception if this xs size 1 throw generate error double c x this xs get this xs size 1 double c k for int i this xs size 1 i 0 i c k this xs get i if this f calculate c k this f calculate c x 0 return c k throw generate error\n", "comment": "this method return x k where k is the largest nonegative integer\n"}
{"id": "19764627", "raw_code": "    private double l(double a, double b) {\n\n        double fa = this.f.calculate(a);\n        double fb = this.f.calculate(b);\n\n        if (isUnequal(fa, fb, this.tol)) {\n            return b - fb * (b - a) / (fb - fa);\n        } else if (isEqual(fa, fb, this.tol) && isUnequal(fa, 0.0, this.tol)) {\n            return INF;// TODO How to handle this case?\n        } else {\n            return b;\n        }\n\n    }\n", "raw_comment": "    /**\n     * Calculates the linear interpolation.\n     * @param a\n     * @param b\n     * @param f\n     * @return\n     */\n", "code": "private double l double a double b double fa this f calculate a double fb this f calculate b if is unequal fa fb this tol return b fb b a fb fa else if is equal fa fb this tol is unequal fa 0 0 this tol return inf todo how to handle this case else return b\n", "comment": "calculates the linear interpolation\n"}
{"id": "51115199", "raw_code": "    private String resolveReferrer(String referrer) {\n        if (referrer == null || referrer.trim().length() == 0) {\n            return \"Unknown\";\n        } else {\n            referrerFound = true;\n            \n            // remove the initial \"http://\" string\n            if (referrer.startsWith(\"http://\")) {\n                referrer = referrer.substring(7);\n            }\n            \n            // remove everything following the first \"/\"\n            if (referrer.indexOf('/') != -1) {\n                referrer = referrer.substring(0, referrer.indexOf('/'));\n            }\n            return referrer;\n        }\n    }\n", "raw_comment": "    /** \n     * Resolves the referrers, returns \"Unknown\" if not available.\n     * @param referrer The referrer string\n     * @return The resolved referrer\n     */\n", "code": "private string resolve referrer string referrer if referrer null referrer trim length 0 return unknown else referrer found true remove the initial http string if referrer starts with http referrer referrer substring 7 remove everything following the first if referrer index of 1 referrer referrer substring 0 referrer index of return referrer\n", "comment": "resolves the referrers returns unknown if not available\n"}
{"id": "51115211", "raw_code": "    private String getRobotName(LogEntry entry) {\n        if (entry.getUserAgent() != null &&\n            entry.getUserAgent().trim().length() > 0) {\n            String robotName =\n                robotManager.matchUserAgent(entry.getUserAgent(), true);\n            if (robotName != null) {\n                return robotName;\n            } else {\n                Util.debug(\"Unknown Robot: \" + entry.getUserAgent());\n                return \"Unknown\";\n            }\n        } else {\n            return entry.getResolvedHost();\n        }  \n    }\n", "raw_comment": "    /**\n     * Returns a name for the robot - either the user agent string\n     * (if available) or the hostname.\n     * @param entry The log file entry\n     * @return the robot name\n     */\n", "code": "private string get robot name log entry entry if entry get user agent null entry get user agent trim length 0 string robot name robot manager match user agent entry get user agent true if robot name null return robot name else util debug unknown robot entry get user agent return unknown else return entry get resolved host\n", "comment": "returns a name for the robot either the user agent string\n"}
{"id": "51115218", "raw_code": "    public List getReports() {\n        List reports = new ArrayList();\n        Iterator iterator = reportClassnames.iterator();\n        while (iterator.hasNext()) {\n            String classname = (String) iterator.next();\n            Report report = getReportInstance(classname);\n            if (report != null) {\n                reports.add(report);\n            }\n        }\n        return reports;\n    }\n", "raw_comment": "    /**\n     * Get a list of newly instantiated report instances.\n     * @return a list of reports\n     */\n", "code": "public list get reports list reports new array list iterator iterator report classnames iterator while iterator has next string classname string iterator next report report get report instance classname if report null reports add report return reports\n", "comment": "get a list of newly instantiated report instances\n"}
{"id": "51115232", "raw_code": "    public Calendar getFirstRequest() {\n        return firstRequest;\n    }\n", "raw_comment": "    /**\n     * Gets the time of the first request, over all log files.\n     * @return The time of the first request\n     */\n", "code": "public calendar get first request return first request\n", "comment": "gets the time of the first request over all log files\n"}
{"id": "51115236", "raw_code": "    public Calendar getLastRequest() {\n        return lastRequest;\n    }\n", "raw_comment": "    /**\n     * Gets the time of the last request, over all log files.\n     * @return The time of the last request\n     */\n", "code": "public calendar get last request return last request\n", "comment": "gets the time of the last request over all log files\n"}
{"id": "51115242", "raw_code": "    public void save() throws ConfigurationException {\n        // TODO...\n    }\n", "raw_comment": "    /**\n     * Save the current configuration to disk.\n     * @throws ConfigurationException Error writing to disk\n     */\n", "code": "public void save throws configuration exception todo\n", "comment": "save the current configuration to disk\n"}
{"id": "51115246", "raw_code": "    public String getReportFilename() {\n        return reportFilename;\n    }\n", "raw_comment": "    /**\n     * Gets the report's filename.\n     * @return The report's filename\n     */\n", "code": "public string get report filename return report filename\n", "comment": "gets the reports filename\n"}
{"id": "51115248", "raw_code": "    public void addSettings(String name, ConfigurationSettings settings) {\n        this.settings.put(name, settings);\n    }\n", "raw_comment": "    /**\n     * Adds a new group of configuration fields (settings). If the name has\n     * already been used, the previous settings are overridden.\n     * @param name The name of the group of settings\n     * @param settings The configuation settings\n     */\n", "code": "public void add settings string name configuration settings settings this settings put name settings\n", "comment": "adds a new group of configuration fields settings\n"}
{"id": "51115251", "raw_code": "    public ConfigurationSettings getSettings(String name) {\n        return (ConfigurationSettings) settings.get(name);\n    }\n", "raw_comment": "    /**\n     * Gets a group of configuration fields (settings).\n     * @param name The name of the group of settings\n     * @return The configuation settings, or <code>null</code> if there are\n     *     no settings with the given name.\n     */\n", "code": "public configuration settings get settings string name return configuration settings settings get name\n", "comment": "gets a group of configuration fields settings\n"}
{"id": "51115254", "raw_code": "    private String resolveUserAgent(String userAgent) {\n        if (userAgent == null || userAgent.trim().length() == 0) {\n            return \"Unknown\";\n        } else {\n            userAgentFound = true;\n            \n            String name = browserManager.matchUserAgent(userAgent);\n            if (name != null) {\n                return name;\n            } else {\n                Util.debug(\"Unknown Browser: \" + userAgent);\n                return \"Unknown\";\n            }\n        }\n    }\n", "raw_comment": "    /** \n     * Resolves the names of user agents, returns \"Unknown\" if not available.\n     * @param userAgent The user agent string\n     * @return The resolved name\n     */\n", "code": "private string resolve user agent string user agent if user agent null user agent trim length 0 return unknown else user agent found true string name browser manager match user agent user agent if name null return name else util debug unknown browser user agent return unknown\n", "comment": "resolves the names of user agents returns unknown if not available\n"}
{"id": "51115256", "raw_code": "    private String getDomain(String host) {\n        int start = host.lastIndexOf('.');\n        if (start == -1) {\n            return \"Unknown\";\n            \n        } else {\n            // we have found at least one real domain\n            foundDomain = true;\n            \n            String domain = host.substring(start + 1);\n            String description = domainManager.getDescription(domain);\n            if (description == null) {\n                return domain;\n            } else {\n                return description + \" (\" + domain + \")\";\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Calculates the top level domain from a hostname.\n     * @param host The hostname\n     * @return The domain name, or \"Unknown\"\n     */\n", "code": "private string get domain string host int start host last index of if start 1 return unknown else we have found at least one real domain found domain true string domain host substring start 1 string description domain manager get description domain if description null return domain else return description domain\n", "comment": "calculates the top level domain from a hostname\n"}
{"id": "51115258", "raw_code": "    public Calendar getStartDate() {\n        return firstEntry;\n    }\n", "raw_comment": "    /**\n     * Get the start date.\n     * @return The start date\n     */\n", "code": "public calendar get start date return first entry\n", "comment": "get the start date\n"}
{"id": "51115264", "raw_code": "    public void resetMatches() {\n        robotMatches.clear();   \n    }\n", "raw_comment": "    /**\n     * Resets information of all previously identified robots.\n     */\n", "code": "public void reset matches robot matches clear\n", "comment": "resets information of all previously identified robots\n"}
{"id": "51115266", "raw_code": "    public String getStartDateString() {\n        if (firstEntry != null) {\n            // show time in local timezone\n            DateFormat format =\n                DateFormat.getDateTimeInstance(\n                    DateFormat.SHORT, DateFormat.SHORT);\n            return format.format(firstEntry.getTime());\n        } else {\n            return \"\";\n        }\n    }\n", "raw_comment": "    /**\n     * Get the start date, formatted as a string.\n     * @return The start date\n     */\n", "code": "public string get start date string if first entry null show time in local timezone date format format date format get date time instance date format short date format short return format format first entry get time else return\n", "comment": "get the start date formatted as a string\n"}
{"id": "51115269", "raw_code": "    public TableModel getTableModel() {\n        return (TableModel) tableModel;\n    }\n", "raw_comment": "    /**\n     * Gets the TableModel adapter.\n     * @return The TableModel adapter\n     */\n", "code": "public table model get table model return table model table model\n", "comment": "gets the table model adapter\n"}
{"id": "51115273", "raw_code": "    public Calendar getEndDate() {\n        return lastEntry;\n    }\n", "raw_comment": "    /**\n     * Get the end date.\n     * @return The end date\n     */\n", "code": "public calendar get end date return last entry\n", "comment": "get the end date\n"}
{"id": "51115274", "raw_code": "    public void addLog(LogFile logfile) {\n        logfiles.add(logfile);\n        tableModel.dataChanged();\n    }\n", "raw_comment": "    /**\n     * Add a new log file.\n     * @param logfile The log file\n     */\n", "code": "public void add log log file logfile logfiles add logfile table model data changed\n", "comment": "add a new log file\n"}
{"id": "51115281", "raw_code": "    public String getEndDateString() {\n         if (lastEntry != null) {\n            // show time in local timezone\n            DateFormat format =\n                DateFormat.getDateTimeInstance(\n                    DateFormat.SHORT, DateFormat.SHORT);\n            return format.format(lastEntry.getTime());\n        } else {\n            return \"\";\n        }\n    }\n", "raw_comment": "    /**\n     * Get the end date, formatted as a string.\n     * @return The end date\n     */\n", "code": "public string get end date string if last entry null show time in local timezone date format format date format get date time instance date format short date format short return format format last entry get time else return\n", "comment": "get the end date formatted as a string\n"}
{"id": "51115285", "raw_code": "    public String getUnresolvedHost() {\n        return unresolvedHost;\n    }\n", "raw_comment": "    /**\n     * Gets the unresolved hostname/IP address, always lower case,\n     * <code>null</code> if not available.\n     * @return the hostname/IP address\n     */\n", "code": "public string get unresolved host return unresolved host\n", "comment": "gets the unresolved hostname ip address always lower case\n"}
{"id": "51115288", "raw_code": "    public String getDescription(String domain) {\n               \n        String lowerDomain = domain.toLowerCase();\n        \n        if (domains.containsKey(lowerDomain)) {\n            return (String) domains.get(lowerDomain);\n        } else {\n            Util.debug(\"Unknown domain: \" + lowerDomain);\n            return null;\n        } \n    }\n", "raw_comment": "    /**\n     * Get a description for the given domain.\n     * @param domain the domain (case insensitive)\n     * @return the description or <code>null</code> if unknown domain\n     */\n", "code": "public string get description string domain string lower domain domain to lower case if domains contains key lower domain return string domains get lower domain else util debug unknown domain lower domain return null\n", "comment": "get a description for the given domain\n"}
{"id": "51115289", "raw_code": "    public void addEntry(String entry) throws InvalidLogEntryException {\n        LogEntry logEntry = parser.parseEntry(entry);\n        \n        if (logEntry != null) {\n            // update the first and last dates\n            if ((firstEntry == null) || (logEntry.getDate().before(firstEntry))) {\n                firstEntry = logEntry.getDate();\n            }\n            if ((lastEntry == null) || (logEntry.getDate().after(lastEntry))) {\n                lastEntry = logEntry.getDate();\n            }\n            \n            entries.add(logEntry);\n        }\n    }\n", "raw_comment": "    /**\n     * Adds the specified entry to the log file.\n     * @param entry The log file entry, a line of text to be parsed\n     * @throws InvalidLogEntryException if the entry cannot be parsed\n     */\n", "code": "public void add entry string entry throws invalid log entry exception log entry log entry parser parse entry entry if log entry null update the first and last dates if first entry null log entry get date before first entry first entry log entry get date if last entry null log entry get date after last entry last entry log entry get date entries add log entry\n", "comment": "adds the specified entry to the log file\n"}
{"id": "51115291", "raw_code": "    public void setTitle(String title) {\n        graph.getObject2DProperties().setObjectTitleText(title);\n    }\n", "raw_comment": "    /**\n     * Set the title of the graph.\n     * @param title The title\n     */\n", "code": "public void set title string title graph get object2 dproperties set object title text title\n", "comment": "set the title of the graph\n"}
{"id": "51115294", "raw_code": "    protected LegendProperties getDefaultLegendProperties() {\n        LegendProperties properties = new LegendProperties();\n        properties.setLegendExistence(false);\n        return properties;\n    }\n", "raw_comment": "    /**\n     * Gets the default legend properties.\n     * @return the default legend properties\n     */\n", "code": "protected legend properties get default legend properties legend properties properties new legend properties properties set legend existence false return properties\n", "comment": "gets the default legend properties\n"}
{"id": "51115297", "raw_code": "    public void setLabels(String[] labels) {\n        graph.getLegendProperties().setLegendLabelsTexts(labels);\n    }\n", "raw_comment": "    /**\n     * Set the labels axis text.\n     * @param labels Array of labels\n     */\n", "code": "public void set labels string labels graph get legend properties set legend labels texts labels\n", "comment": "set the labels axis text\n"}
{"id": "51115298", "raw_code": "    protected Object2DProperties getDefaultObject2DProperties() {\n        Object2DProperties properties = new Object2DProperties();\n        properties.setObjectBackgroundColor(Color.white);\n        properties.setObjectBorderExistence(false);\n        properties.setObjectTitleFontPointModel(TITLE_TEXT_SIZE);\n        properties.setObjectTitleExistence(true);\n        properties.setObjectMagnifyWhenResize(false);\n        return properties;\n    }\n", "raw_comment": "    /**\n     * Gets the default Object2D properties.\n     * @return the default Object2D properties\n     */\n", "code": "protected object2 dproperties get default object2 dproperties object2 dproperties properties new object2 dproperties properties set object background color color white properties set object border existence false properties set object title font point model title text size properties set object title existence true properties set object magnify when resize false return properties\n", "comment": "gets the default object2 d properties\n"}
{"id": "51115301", "raw_code": "        public int getRowCount() {\n            return logfiles.size();\n        }\n", "raw_comment": "        /**\n         * Gets the number of rows.\n         * @return The number of rows\n         */\n", "code": "public int get row count return logfiles size\n", "comment": "gets the number of rows\n"}
{"id": "51115302", "raw_code": "    public Graph getGraph(GraphType type, int width, int height) {\n        if (type == GraphType.LINE_GRAPH) {\n            return new LineGraph(width, height);\n\n        } else if (type == GraphType.PIE_CHART) {\n            return new PieChart(width, height);\n\n        } else {\n            // shouldn't get here...\n            Util.debug(\"Unknown graph type\");\n            return null;\n        }\n    }\n", "raw_comment": "    /**\n     * Get a suitable graph implementation.\n     * @param type The type of graph\n     * @param width Pixel width\n     * @param height Pixel height\n     * @return the graph implementation\n     */\n", "code": "public graph get graph graph type type int width int height if type graph type line graph return new line graph width height else if type graph type pie chart return new pie chart width height else shouldn t get here util debug unknown graph type return null\n", "comment": "get a suitable graph implementation\n"}
{"id": "51115303", "raw_code": "    public void setUnresolvedHost(String host) {\n        if (host != null) {\n            this.unresolvedHost = host.toLowerCase();\n        } else {\n            this.unresolvedHost = null;\n        }\n    }\n", "raw_comment": "    /**\n     * Sets the hostname/IP address, which can be <code>null</code>.\n     * @param host the hostname/IP address\n     */\n", "code": "public void set unresolved host string host if host null this unresolved host host to lower case else this unresolved host null\n", "comment": "sets the hostname ip address which can be code null code\n"}
{"id": "51115304", "raw_code": "    protected Chart2DProperties getDefaultChart2DProperties() {\n        Chart2DProperties properties = new Chart2DProperties();\n        properties.setChartDataLabelsPrecision(1);\n        return properties;\n    }\n", "raw_comment": "    /**\n     * Gets the default Chart2D properties.\n     * @return the default Chart2D properties\n     */\n", "code": "protected chart2 dproperties get default chart2 dproperties chart2 dproperties properties new chart2 dproperties properties set chart data labels precision 1 return properties\n", "comment": "gets the default chart2 d properties\n"}
{"id": "51115305", "raw_code": "    public void setValues(int[] values) {\n        // for Pie Charts, each value is in a different set\n        // (because it has a unique colour)\n        Dataset dataset = new Dataset(values.length, 1, 1);\n        int greatestValue = values[0];\n        for (int index = 0; index < values.length; index++) {\n            dataset.set(index, 0, 0, values[index]);\n            if (values[index] > greatestValue) {\n                greatestValue = values[index];\n            }\n        }\n        graph.setDataset(dataset);\n    }\n", "raw_comment": "    /**\n     * Set the numbers axis values.\n     * @param values Array of integer values\n     */\n", "code": "public void set values int values for pie charts each value is in a different set because it has a unique colour dataset dataset new dataset values length 1 1 int greatest value values 0 for int index 0 index values length index dataset set index 0 0 values index if values index greatest value greatest value values index graph set dataset dataset\n", "comment": "set the numbers axis values\n"}
{"id": "51115307", "raw_code": "    public void setLabels(String[] labels) {\n        graph.getGraphChart2DProperties().setLabelsAxisLabelsTexts(labels);\n    }\n", "raw_comment": "    /**\n     * Set the labels axis text.\n     * @param labels Array of labels\n     */\n", "code": "public void set labels string labels graph get graph chart2 dproperties set labels axis labels texts labels\n", "comment": "set the labels axis text\n"}
{"id": "51115309", "raw_code": "        public Object getValueAt(int row, int column) {\n            String value = \"\";\n            LogFile log = (LogFile) logfiles.get(row);\n            if (log != null) {\n                switch (column) {\n                    // filename\n                    case 0: {\n                        value = log.getFilename();\n                        break;\n                    }\n\n                    // number of hits\n                    case 1: {\n                        value = String.valueOf(log.getSize());\n                        break;\n                    }\n                    \n                    // starting date\n                    case 2: {\n                        value = log.getStartDateString();\n                        break;\n                    }\n                    \n                    // ending date\n                    case 3: {\n                        value = log.getEndDateString();\n                        break;\n                    }\n                }\n            }\n            return value;\n        }\n", "raw_comment": "        /**\n         * Gets the value of a specific row and column.\n         * @param row The row number\n         * @param column The column number\n         * @return The value object (a String)\n         */\n", "code": "public object get value at int row int column string value log file log log file logfiles get row if log null switch column filename case 0 value log get filename break number of hits case 1 value string value of log get size break starting date case 2 value log get start date string break ending date case 3 value log get end date string break return value\n", "comment": "gets the value of a specific row and column\n"}
{"id": "51115310", "raw_code": "    protected MultiColorsProperties getDefaultMultiColorsProperties() {\n        return new MultiColorsProperties();\n    }    \n", "raw_comment": "    /**\n     * Gets the default MultiColorsProperties properties.\n     * @return the default MultiColorsProperties properties\n     */\n", "code": "protected multi colors properties get default multi colors properties return new multi colors properties\n", "comment": "gets the default multi colors properties properties\n"}
{"id": "51115312", "raw_code": "    public BufferedImage getImage() {\n        return graph.getImage();\n    }\n", "raw_comment": "    /**\n     * Get the graph's buffered image object.\n     * @return The buffered image\n     */\n", "code": "public buffered image get image return graph get image\n", "comment": "get the graphs buffered image object\n"}
{"id": "51115314", "raw_code": "    public void setValues(int[] values) {\n        Dataset dataset = new Dataset(1, values.length, 1);\n        int greatestValue = values[0];\n        for (int index = 0; index < values.length; index++) {\n            dataset.set(0, index, 0, (float) values[index]);\n            if (values[index] > greatestValue) {\n                greatestValue = values[index];\n            }\n        }\n\n        // configure the y axis scale\n        GraphChart2DProperties properties = graph.getGraphChart2DProperties();\n        properties.setChartDatasetCustomizeGreatestValue(true);\n        properties.setChartDatasetCustomGreatestValue(\n                (float) getMaxAxisValue(greatestValue));\n        properties.setNumbersAxisNumLabels(11);\n        graph.addDataset(dataset);\n    }\n", "raw_comment": "    /**\n     * Set the numbers axis values.\n     * @param values Array of integer values\n     */\n", "code": "public void set values int values dataset dataset new dataset 1 values length 1 int greatest value values 0 for int index 0 index values length index dataset set 0 index 0 float values index if values index greatest value greatest value values index configure the y axis scale graph chart2 dproperties properties graph get graph chart2 dproperties properties set chart dataset customize greatest value true properties set chart dataset custom greatest value float get max axis value greatest value properties set numbers axis num labels 11 graph add dataset dataset\n", "comment": "set the numbers axis values\n"}
{"id": "51115317", "raw_code": "    public String getResolvedHost() {\n        return resolvedHost;\n    }\n", "raw_comment": "    /**\n     * Gets the resolved hostname, always lower case,\n     * <code>null</code> if not available.\n     * @return the hostname address\n     */\n", "code": "public string get resolved host return resolved host\n", "comment": "gets the resolved hostname always lower case\n"}
{"id": "51115320", "raw_code": "    public String matchUserAgent(String userAgent) {\n        \n        // return null if no user agent string\n        if ((userAgent == null) ||\n            (userAgent.length() == 0) ||\n             userAgent.equals(\"null\") ||\n             userAgent.equals(\"/\")) {\n            return null;\n        }\n        \n        // check in the cache of previous matches\n        if (browsersCache.containsKey(userAgent)) {\n            return (String) browsersCache.get(userAgent);\n        }\n        \n        // check for a matching browser\n        Iterator iterator = browsers.iterator();\n        while (iterator.hasNext()) {\n            Browser browser = (Browser) iterator.next();\n            String name = browser.matchUserAgent(userAgent);\n            if (name != null) {\n                Util.debug(userAgent + \" is \" + name);\n                browsersCache.put(userAgent, name);\n                return name;\n            }\n        }\n        return null;   \n    }\n", "raw_comment": "    /**\n     * Find a match for the given user agent string.\n     * @param userAgent the user agent string\n     * @return <code>null</code> if no match found, otherwise the name\n     *     of the first matching browser\n     */\n", "code": "public string match user agent string user agent return null if no user agent string if user agent null user agent length 0 user agent equals null user agent equals return null check in the cache of previous matches if browsers cache contains key user agent return string browsers cache get user agent check for a matching browser iterator iterator browsers iterator while iterator has next browser browser browser iterator next string name browser match user agent user agent if name null util debug user agent is name browsers cache put user agent name return name return null\n", "comment": "find a match for the given user agent string\n"}
{"id": "51115322", "raw_code": "    private int getMaxAxisValue(int maxDataValue) {\n        \n        /**\n         * round up to the nearest factor of ten\n         * e.g. 6 => 10, 60 =< 100, 600 => 1000\n         */\n        \n        // find the number of decimal digits\n        int decimalDigits = 1;\n        double value = maxDataValue;\n        while (value > 10.0) {\n            value /= 10.0;\n            decimalDigits++;\n        }\n        \n        return (int) Math.pow(10.0, decimalDigits);  \n    }\n", "raw_comment": "    /**\n     * Calculate the maximum value of numbers axis. \n     * @param maxDataValue The maximum data value\n     * @return The maximum axis value\n     */\n", "code": "private int get max axis value int max data value round up to the nearest factor of ten e g 6 10 60 100 600 1000 find the number of decimal digits int decimal digits 1 double value max data value while value 10 0 value 10 0 decimal digits return int math pow 10 0 decimal digits\n", "comment": "calculate the maximum value of numbers axis\n"}
{"id": "51115323", "raw_code": "    public LogEntry parseEntry(String entry) throws InvalidLogEntryException {\n        List tokens = tokeniseEntry(entry);\n        if (tokens.size() == 0) {\n            // Blank line, ignore\n            return null;\n        \n        } else {\n            String firstToken = (String) tokens.get(0);\n            if (FIELD_DIRECTIVE.equalsIgnoreCase(firstToken)) {\n                // Field directive\n                parseFieldsDirective(tokens);\n                return null;\n            \n            } else if (firstToken.startsWith(\"#\")) {\n                // Other directive - simply ignored\n                return null;\n                \n            } else {\n                 // A data entry\n                return parseEntry(tokens);\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Parses the specified log file entry.\n     * @param entry The entry to parse\n     * @return The log entry, or <code>null</code> if the entry is blank or\n     * a directive.\n     * @throws InvalidLogEntryException Entry is invalid\n     */\n", "code": "public log entry parse entry string entry throws invalid log entry exception list tokens tokenise entry entry if tokens size 0 blank line ignore return null else string first token string tokens get 0 if field directive equals ignore case first token field directive parse fields directive tokens return null else if first token starts with other directive simply ignored return null else a data entry return parse entry tokens\n", "comment": "parses the specified log file entry\n"}
{"id": "51115326", "raw_code": "    public void setResolvedHost(String host) {\n        this.resolvedHost = host;\n    }\n", "raw_comment": "    /**\n     * Sets the resolved hostname.\n     * @param host the hostname\n     */\n", "code": "public void set resolved host string host this resolved host host\n", "comment": "sets the resolved hostname\n"}
{"id": "51115333", "raw_code": "    public Calendar getDate() {\n        if (dateInMillis != 0) {\n            Calendar cal = Calendar.getInstance();\n            cal.setTimeInMillis(dateInMillis);\n            return cal;\n        } else {\n            return null;\n        }\n    }\n", "raw_comment": "    /**\n     * Gets the entry date/time.\n     * @return the date/time\n     */\n", "code": "public calendar get date if date in millis 0 calendar cal calendar get instance cal set time in millis date in millis return cal else return null\n", "comment": "gets the entry date time\n"}
{"id": "51115337", "raw_code": "    public void run() {\n        ReportGenerator generator = new ReportGenerator(file);\n        generator.generate(LogManager.getManager(), this);\n    }\n", "raw_comment": "    /**\n     * Runs the report generator.\n     */\n", "code": "public void run report generator generator new report generator file generator generate log manager get manager this\n", "comment": "runs the report generator\n"}
{"id": "51115342", "raw_code": "    public void setDateTime(Calendar dateTime) {\n        if (dateTime != null) {\n            this.dateInMillis = dateTime.getTimeInMillis();\n        } else {\n            this.dateInMillis = 0;\n        }\n    }\n", "raw_comment": "    /**\n     * Sets the entry date/time.\n     * @param dateTime A calendar with date and time populated\n     */\n", "code": "public void set date time calendar date time if date time null this date in millis date time get time in millis else this date in millis 0\n", "comment": "sets the entry date time\n"}
{"id": "51115344", "raw_code": "    public void start() {\n        frame = new MainWindow();\n        frame.show();\n        \n        // attempt to load the robot configuration file\n        try {\n            RobotManager.getManager().loadConfiguration();\n        } catch (IOException ex) {\n            frame.showOKErrorDialog(\"Warning: \" + ex.getMessage());\n        }\n        \n        // attempt to load the browser's configuration file\n        try {\n            BrowserManager.getManager().loadConfiguration();\n        } catch (IOException ex) {\n            frame.showOKErrorDialog(\"Warning: \" + ex.getMessage());\n        }\n        \n        // attempt to load the domain's configuration file\n        try {\n            DomainManager.getManager().loadConfiguration();\n        } catch (IOException ex) {\n            frame.showOKErrorDialog(\"Warning: \" + ex.getMessage());\n        }\n    }\n", "raw_comment": "    /**\n     * starts the progam up.\n     */\n", "code": "public void start frame new main window frame show attempt to load the robot configuration file try robot manager get manager load configuration catch ioexception ex frame show okerror dialog warning ex get message attempt to load the browser s configuration file try browser manager get manager load configuration catch ioexception ex frame show okerror dialog warning ex get message attempt to load the domain s configuration file try domain manager get manager load configuration catch ioexception ex frame show okerror dialog warning ex get message\n", "comment": "starts the progam up\n"}
{"id": "51115346", "raw_code": "    public void exit() {\n        if (frame != null) {\n          frame.dispose();\n        }\n        System.exit(0);\n    }\n", "raw_comment": "    /**\n     * shuts the program down.\n     */\n", "code": "public void exit if frame null frame dispose system exit 0\n", "comment": "shuts the program down\n"}
{"id": "51115353", "raw_code": "    public void setDate(Calendar date) {\n        Calendar cal = getDate();\n        if (cal == null) {\n            cal = Calendar.getInstance();\n        }\n        \n        cal.set(Calendar.YEAR, date.get(Calendar.YEAR));\n        cal.set(Calendar.MONTH, date.get(Calendar.MONTH));\n        cal.set(Calendar.DAY_OF_MONTH, date.get(Calendar.DAY_OF_MONTH));\n        \n        this.dateInMillis = cal.getTimeInMillis();\n    }\n", "raw_comment": "    /**\n     * Sets the entry date.\n     * @param date A calendar with date populated, time is ignored\n     */\n", "code": "public void set date calendar date calendar cal get date if cal null cal calendar get instance cal set calendar year date get calendar year cal set calendar month date get calendar month cal set calendar day of month date get calendar day of month this date in millis cal get time in millis\n", "comment": "sets the entry date\n"}
{"id": "51115361", "raw_code": "    public String getString(String name) {\n        return bundle.getString(name);\n    }\n", "raw_comment": "    /**\n     * Get a specific string.\n     * @param name The name of the resource string\n     * @return The value of the resource string\n     */\n", "code": "public string get string string name return bundle get string name\n", "comment": "get a specific string\n"}
{"id": "51115367", "raw_code": "    public char getMnemonic(String name) {\n        return bundle.getString(name + \".mnemonic\").charAt(0);\n    }\n", "raw_comment": "    /**\n     * Get a specific character mnemonic.\n     * @param name The name of the resource string, minus \".mnemonic\"\n     * @return The value of the resource string, as a character\n     */\n", "code": "public char get mnemonic string name return bundle get string name mnemonic char at 0\n", "comment": "get a specific character mnemonic\n"}
{"id": "51115371", "raw_code": "    public void setTime(Calendar time) {\n        Calendar cal = getDate();\n        if (cal == null) {\n            cal = Calendar.getInstance();\n        }\n        \n        cal.set(Calendar.HOUR_OF_DAY, time.get(Calendar.HOUR_OF_DAY));\n        cal.set(Calendar.MINUTE, time.get(Calendar.MINUTE));\n        cal.set(Calendar.SECOND, time.get(Calendar.SECOND));\n        cal.set(Calendar.MILLISECOND, time.get(Calendar.MILLISECOND));\n        \n        this.dateInMillis = cal.getTimeInMillis();\n    }\n", "raw_comment": "    /**\n     * Sets the entry time.\n     * @param time A calendar with time populated, date is ignored\n     */\n", "code": "public void set time calendar time calendar cal get date if cal null cal calendar get instance cal set calendar hour of day time get calendar hour of day cal set calendar minute time get calendar minute cal set calendar second time get calendar second cal set calendar millisecond time get calendar millisecond this date in millis cal get time in millis\n", "comment": "sets the entry time\n"}
{"id": "51115372", "raw_code": "    public void showOKErrorDialog(String message) {\n        JOptionPane.showMessageDialog(this,\n            message, \"Error\", JOptionPane.ERROR_MESSAGE);\n    }\n", "raw_comment": "    /**\n     * Shows a modal error dialog box, with a single OK button.\n     * @param message The error message\n     */\n", "code": "public void show okerror dialog string message joption pane show message dialog this message error joption pane error message\n", "comment": "shows a modal error dialog box with a single ok button\n"}
{"id": "51115375", "raw_code": "    public String getName(String name) {\n        return bundle.getString(name + \".name\");\n    }\n", "raw_comment": "    /**\n     * Get a specific name value.\n     * @param name The name of the resource string, minus \".name\"\n     * @return The value of the resource string, as a character\n     */\n", "code": "public string get name string name return bundle get string name name\n", "comment": "get a specific name value\n"}
{"id": "51115379", "raw_code": "    protected String parseHTTPVersion(String value) throws InvalidLogEntryException {\n        String expectedPrefix = \"HTTP/\";\n        if (value.startsWith(expectedPrefix)) {\n            return value.substring(expectedPrefix.length());\n            \n        } else {\n            throw new InvalidLogEntryException(\"Invalid HTTP request: \\\"\"\n                + value + \"\\\" is an unexpected protocol\");\n        }\n    }\n", "raw_comment": "    /**\n     * Extract the HTTP protocol version number (i.e \"1.0\" or \"1.1\") from a\n     * string of the form: \"HTTP/1.0\".\n     * @param value     The string\n     * @return The value\n     * @throws InvalidLogEntryException String is not of the correct form\n     */\n", "code": "protected string parse httpversion string value throws invalid log entry exception string expected prefix http if value starts with expected prefix return value substring expected prefix length else throw new invalid log entry exception invalid http request value is an unexpected protocol\n", "comment": "extract the http protocol version number i\n"}
{"id": "51115391", "raw_code": "    public boolean showYesNoErrorDialog(String message) {\n        int option = JOptionPane.showConfirmDialog(this,\n            message, \"Error\", JOptionPane.YES_NO_OPTION,\n            JOptionPane.ERROR_MESSAGE);\n        return option == JOptionPane.YES_OPTION;\n    }\n", "raw_comment": "    /**\n     * Shows a modal error dialog box, with Yes and No buttons.\n     * @param message The error message\n     * @return <code>true</code> if the Yes button was selected\n     */\n", "code": "public boolean show yes no error dialog string message int option joption pane show confirm dialog this message error joption pane yes no option joption pane error message return option joption pane yes option\n", "comment": "shows a modal error dialog box with yes and no buttons\n"}
{"id": "51115408", "raw_code": "    public boolean showYesNoQuestionDialog(String message) {\n        int option = JOptionPane.showConfirmDialog(this,\n            message, \"Confirm\", JOptionPane.YES_NO_OPTION,\n            JOptionPane.QUESTION_MESSAGE);\n        return option == JOptionPane.YES_OPTION;\n    }\n", "raw_comment": "    /**\n     * Shows a modal question dialog box, with Yes and No buttons.\n     * @param message The question message\n     * @return <code>true</code> if the Yes button was selected\n     */\n", "code": "public boolean show yes no question dialog string message int option joption pane show confirm dialog this message confirm joption pane yes no option joption pane question message return option joption pane yes option\n", "comment": "shows a modal question dialog box with yes and no buttons\n"}
{"id": "51115409", "raw_code": "    public String getUnresolvedUrl() {\n        return unresolvedUrl;\n    }\n", "raw_comment": "    /**\n     * Gets the originally requested URL.\n     * @return the unresolved URL\n     */\n", "code": "public string get unresolved url return unresolved url\n", "comment": "gets the originally requested url\n"}
{"id": "51115410", "raw_code": "    protected String getString(String field) {\n        if (\"-\".equals(field)) {\n            return \"\";\n        } else {\n            return field;\n        }\n    }\n", "raw_comment": "    /**\n     * Extracts a string field, converts \"-\" to an empty string.\n     * @param field The field string\n     * @return The string\n     */\n", "code": "protected string get string string field if equals field return else return field\n", "comment": "extracts a string field converts to an empty string\n"}
{"id": "51115425", "raw_code": "    public void setUnresolvedUrl(String unresolvedUrl) {\n        this.unresolvedUrl = unresolvedUrl;\n    }\n", "raw_comment": "    /**\n     * Sets the originally requested URL.\n     * @param unresolvedUrl the unresolved URL\n     */\n", "code": "public void set unresolved url string unresolved url this unresolved url unresolved url\n", "comment": "sets the originally requested url\n"}
{"id": "51115430", "raw_code": "    protected int getInteger(String field) throws InvalidLogEntryException {\n        int result = 0;\n        try {\n            if (field == null) {\n                // check for null explicitly because Sun classes don't\n                throw new InvalidLogEntryException(\"Invalid Integer Numerical Field\");\n            \n            } else if (!\"-\".equals(field)) {\n                result = Integer.parseInt(field);\n            }\n\n        } catch (NumberFormatException nfe) {\n            throw new InvalidLogEntryException(\"Invalid Integer Numerical Field: \" + field);\n        }\n        return result;\n    }\n", "raw_comment": "    /**\n     * Converts a numerical field to an integer value.\n     * Also allows \"-\", meaning zero.\n     * @param field The field string\n     * @return The numerical value\n     * @throws InvalidLogEntryException An invalid numerical string\n     */\n", "code": "protected int get integer string field throws invalid log entry exception int result 0 try if field null check for null explicitly because sun classes don t throw new invalid log entry exception invalid integer numerical field else if equals field result integer parse int field catch number format exception nfe throw new invalid log entry exception invalid integer numerical field field return result\n", "comment": "converts a numerical field to an integer value\n"}
{"id": "51115435", "raw_code": "    public String getResolvedUrl() {\n        return resolvedUrl;\n    }\n", "raw_comment": "    /**\n     * Gets the resolved URL.\n     * @return the resolved URL\n     */\n", "code": "public string get resolved url return resolved url\n", "comment": "gets the resolved url\n"}
{"id": "51115439", "raw_code": "    public void setResolvedUrl(String resolvedUrl) {\n        this.resolvedUrl = resolvedUrl;\n    }\n", "raw_comment": "    /**\n     * Sets the resolved URL.\n     * @param resolvedUrl the resolved URL\n     */\n", "code": "public void set resolved url string resolved url this resolved url resolved url\n", "comment": "sets the resolved url\n"}
{"id": "51115442", "raw_code": "                public String getDescription() {\n                    return TextResources.getResources().getString(\"program.open.description\");\n                }\n", "raw_comment": "                /**\n                 * Get the Filter's description.\n                 * @return The description\n                 */\n", "code": "public string get description return text resources get resources get string program open description\n", "comment": "get the filters description\n"}
{"id": "51115443", "raw_code": "    protected float getFloat(String field) throws InvalidLogEntryException {\n        float result = 0.0F;\n        try {\n            if (field == null) {\n                // check for null explicitly because Sun classes don't\n                throw new InvalidLogEntryException(\"Invalid Float Numerical Field\");\n            \n            } else if (!\"-\".equals(field)) {\n                result = Float.parseFloat(field);\n            }\n\n        } catch (NumberFormatException nfe) {\n            throw new InvalidLogEntryException(\"Invalid Float Numerical Field: \" + field);\n        }\n        return result;\n    }\n", "raw_comment": "    /**\n     * Converts a numerical field to an float value. \n     * Also allows \"-\", meaning zero.\n     * @param field The field string\n     * @return The numerical value\n     * @throws InvalidLogEntryException An invalid numerical string\n     */\n", "code": "protected float get float string field throws invalid log entry exception float result 0 0 f try if field null check for null explicitly because sun classes don t throw new invalid log entry exception invalid float numerical field else if equals field result float parse float field catch number format exception nfe throw new invalid log entry exception invalid float numerical field field return result\n", "comment": "converts a numerical field to an float value\n"}
{"id": "51115444", "raw_code": "    public float getHttpVersion() {\n        return httpVersion;\n    }\n", "raw_comment": "    /**\n     * Gets the HTTP version.\n     * @return the HTTP version\n     */\n", "code": "public float get http version return http version\n", "comment": "gets the http version\n"}
{"id": "51115448", "raw_code": "    public void setHttpVersion(float version) {\n        this.httpVersion = version;\n    }\n", "raw_comment": "    /**\n     * Sets the HTTP version.\n     * @param version the HTTP version\n     */\n", "code": "public void set http version float version this http version version\n", "comment": "sets the http version\n"}
{"id": "51115464", "raw_code": "    public String getReferrer() {\n        return referrer;\n    }\n", "raw_comment": "    /**\n     * Gets the HTTP referrer, which might be <code>null</code>.\n     * @return the referrer\n     */\n", "code": "public string get referrer return referrer\n", "comment": "gets the http referrer which might be code null code\n"}
{"id": "51115468", "raw_code": "                public String getDescription() {\n                    return TextResources.getResources().getString(\"program.save.description\");\n                }\n", "raw_comment": "                /**\n                 * Get the Filter's description.\n                 * @return The description\n                 */\n", "code": "public string get description return text resources get resources get string program save description\n", "comment": "get the filters description\n"}
{"id": "51115513", "raw_code": "    public int hashCode() {\n        // hash-code is based on all original (unresolved) fields\n        // (must be same as equals)\n        return new HashCodeBuilder()\n            .append(getBytes())\n            .append(getDate())\n            .append(getHttpVersion())\n            .append(getMethod())\n            .append(getReferrer())\n            .append(getResponse())\n            .append(getUnresolvedHost())\n            .append(getUnresolvedUrl())\n            .append(getUserAgent())\n            .toHashCode();\n    }\n", "raw_comment": "    /**\n     * Get a unique hashcode that identifies this instance, used when storing\n     * in a Hashtable.\n     * @return the hashcode.\n     */ \n", "code": "public int hash code hash code is based on all original unresolved fields must be same as equals return new hash code builder append get bytes append get date append get http version append get method append get referrer append get response append get unresolved host append get unresolved url append get user agent to hash code\n", "comment": "get a unique hashcode that identifies this instance used when storing\n"}
{"id": "50353447", "raw_code": "\tpublic Number getAccountPendingBalance(int accountId) throws Exception {\n\t\tStatement stmt = null;\n\t\tResultSet rs = null;\n\t\tFloat balance = null;\n\t\tConnection conn = null;\n\t\ttry {\n\t\t\tconn = pm.getConnection();\n\t\t\tstmt = conn.createStatement();\n\t\t\trs = stmt.executeQuery(\"select sum(val) from t_entry, trans where trans.id=t_entry.tid and aid=\"+accountId +\" and (trans.status = 'C' or trans.status= 'X')\");\n\t\t\tif (rs.next())\n\t\t\t{\n\t\t\t\tbalance = new Float(rs.getFloat(1));\n\t\t\t}\n\t\t}\n\t\tfinally\n\t\t{\n\t\t\tpm.close(rs);\n\t\t\tpm.close(stmt);\n\t\t\tpm.close(conn);\n\t\t}\n\t\treturn balance;\n\t}\n", "raw_comment": "\t/**\n\t * Method getAccountPendingBalance.\n\t * @param accountId\n\t * @return Number\n\t */\n", "code": "public number get account pending balance int account id throws exception statement stmt null result set rs null float balance null connection conn null try conn pm get connection stmt conn create statement rs stmt execute query select sum val from t entry trans where trans id t entry tid and aid account id and trans status c or trans status x if rs next balance new float rs get float 1 finally pm close rs pm close stmt pm close conn return balance\n", "comment": "method get account pending balance\n"}
{"id": "50353483", "raw_code": "\tpublic Integer getNumOfTransactions() {\n\t\treturn numOfTransactions;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the numOfTransactions.\n\t * @return Integer\n\t */\n", "code": "public integer get num of transactions return num of transactions\n", "comment": "returns the num of transactions\n"}
{"id": "50353488", "raw_code": "\tpublic void setNumOfTransactions(Integer numOfTransactions) {\n\t\tthis.numOfTransactions = numOfTransactions;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the numOfTransactions.\n\t * @param numOfTransactions The numOfTransactions to set\n\t */\n", "code": "public void set num of transactions integer num of transactions this num of transactions num of transactions\n", "comment": "sets the num of transactions\n"}
{"id": "50353491", "raw_code": "\tpublic Integer getAccountNumber() {\n\t\treturn accountNumber;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the accountNumber.\n\t * @return Integer\n\t */\n", "code": "public integer get account number return account number\n", "comment": "returns the account number\n"}
{"id": "50353492", "raw_code": "\tpublic void setAccountNumber(Integer accountNumber) {\n\t\tthis.accountNumber = accountNumber;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the accountNumber.\n\t * @param accountNumber The accountNumber to set\n\t */\n", "code": "public void set account number integer account number this account number account number\n", "comment": "sets the account number\n"}
{"id": "50353501", "raw_code": "\tpublic Integer getTransferAccount() {\n\t\treturn transferAccount;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the transferAccount.\n\t * @return Integer\n\t */\n", "code": "public integer get transfer account return transfer account\n", "comment": "returns the transfer account\n"}
{"id": "50353503", "raw_code": "\tpublic void setTransferAccount(Integer transferAccount) {\n\t\tthis.transferAccount = transferAccount;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the transferAccount.\n\t * @param transferAccount The transferAccount to set\n\t */\n", "code": "public void set transfer account integer transfer account this transfer account transfer account\n", "comment": "sets the transfer account\n"}
{"id": "50353513", "raw_code": "\tpublic void setInterval(Integer interval) {\n\t\tthis.interval = interval;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the interval.\n\t * @param interval The interval to set\n\t */\n", "code": "public void set interval integer interval this interval interval\n", "comment": "sets the interval\n"}
{"id": "50353516", "raw_code": "\tpublic void setNextApply(Calendar nextApply) {\n\t\tthis.nextApply = nextApply;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the nextApply.\n\t * @param nextApply The nextApply to set\n\t */\n", "code": "public void set next apply calendar next apply this next apply next apply\n", "comment": "sets the next apply\n"}
{"id": "50353518", "raw_code": "\tpublic void setTrans(Transaction trans) {\n\t\tthis.trans = trans;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the trans.\n\t * @param trans The trans to set\n\t */\n", "code": "public void set trans transaction trans this trans trans\n", "comment": "sets the trans\n"}
{"id": "50353522", "raw_code": "\tpublic String getPayee() {\n\t\treturn payee;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the payee.\n\t * @return String\n\t */\n", "code": "public string get payee return payee\n", "comment": "returns the payee\n"}
{"id": "50353537", "raw_code": "\tpublic Character getStatus() {\n\t\treturn status;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the status.\n\t * @return Character\n\t */\n", "code": "public character get status return status\n", "comment": "returns the status\n"}
{"id": "50353539", "raw_code": "\tpublic void setBalance(String balance) {\n\t\tthis.balance = balance;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the balance.\n\t * @param balance The balance to set\n\t */\n", "code": "public void set balance string balance this balance balance\n", "comment": "sets the balance\n"}
{"id": "50353540", "raw_code": "\tpublic Calendar getTransactionDate() {\n\t\treturn transactionDate;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the transactionDate.\n\t * @return Calendar\n\t */\n", "code": "public calendar get transaction date return transaction date\n", "comment": "returns the transaction date\n"}
{"id": "50353553", "raw_code": "\tpublic void setTransactionDate(Calendar transactionDate) {\n\t\tthis.transactionDate = transactionDate;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the transactionDate.\n\t * @param transactionDate The transactionDate to set\n\t */\n", "code": "public void set transaction date calendar transaction date this transaction date transaction date\n", "comment": "sets the transaction date\n"}
{"id": "50353554", "raw_code": "\tpublic Hashtable getAccountTypes() {\n\t\treturn accountTypes;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the accountTypes.\n\t * @return Hashtable\n\t */\n", "code": "public hashtable get account types return account types\n", "comment": "returns the account types\n"}
{"id": "50353556", "raw_code": "\tpublic Collection getAllAccounts() {\n\t\treturn allAccounts;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the allAccounts.\n\t * @return Collection\n\t */\n", "code": "public collection get all accounts return all accounts\n", "comment": "returns the all accounts\n"}
{"id": "50353557", "raw_code": "\tpublic Collection getSplits() {\n\t\treturn splits;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the splits.\n\t * @return Collection\n\t */\n", "code": "public collection get splits return splits\n", "comment": "returns the splits\n"}
{"id": "50353558", "raw_code": "\tpublic void setAccountTypes(Hashtable accountTypes) {\n\t\tthis.accountTypes = accountTypes;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the accountTypes.\n\t * @param accountTypes The accountTypes to set\n\t */\n", "code": "public void set account types hashtable account types this account types account types\n", "comment": "sets the account types\n"}
{"id": "50353559", "raw_code": "\tpublic void setTransactions(List transactions) {\n\t\tthis.transactions = transactions;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the transactions.\n\t * @param transactions The transactions to set\n\t */\n", "code": "public void set transactions list transactions this transactions transactions\n", "comment": "sets the transactions\n"}
{"id": "50353560", "raw_code": "\tpublic void setSplits(Collection splits) {\n\t\t\t\tfloat f = 0;\n\t\tif (splits != null)\n\t\ttry { \n\t\t\tIterator i = splits.iterator();\n\t\t\twhile (i!=null && i.hasNext())\n\t\t\t{\n\t\t\t\tf += ((Split) i.next()).getAmount().floatValue();\n\t\t\t}\n\t\t} catch (Throwable th) {\n\t\t\tSystem.out.println(th);\n\t\t\tth.printStackTrace();\n\t\t}\n\t\tsetTotal(new Float(f));\n\t\n\t\tthis.splits = splits;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the splits.\n\t * @param splits The splits to set\n\t */\n", "code": "public void set splits collection splits float f 0 if splits null try iterator i splits iterator while i null i has next f split i next get amount float value catch throwable th system out println th th print stack trace set total new float f this splits splits\n", "comment": "sets the splits\n"}
{"id": "50353561", "raw_code": "\tpublic void setAllAccounts(Collection allAccounts) {\n\t\tthis.allAccounts = allAccounts;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the allAccounts.\n\t * @param allAccounts The allAccounts to set\n\t */\n", "code": "public void set all accounts collection all accounts this all accounts all accounts\n", "comment": "sets the all accounts\n"}
{"id": "50353562", "raw_code": "\tpublic String getEndBalance() {\n\t\treturn endBalance;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the endBalance.\n\t * @return String\n\t */\n", "code": "public string get end balance return end balance\n", "comment": "returns the end balance\n"}
{"id": "50353566", "raw_code": "\tpublic String getReconciledBalance() {\n\t\treturn reconciledBalance;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the reconciledBalance.\n\t * @return String\n\t */\n", "code": "public string get reconciled balance return reconciled balance\n", "comment": "returns the reconciled balance\n"}
{"id": "50353568", "raw_code": "\tpublic void setEndBalance(String endBalance) {\n\t\tthis.endBalance = endBalance;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the endBalance.\n\t * @param endBalance The endBalance to set\n\t */\n", "code": "public void set end balance string end balance this end balance end balance\n", "comment": "sets the end balance\n"}
{"id": "50353570", "raw_code": "\tpublic void setReconciledBalance(String reconciledBalance) {\n\t\tthis.reconciledBalance = reconciledBalance;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the reconciledBalance.\n\t * @param reconciledBalance The reconciledBalance to set\n\t */\n", "code": "public void set reconciled balance string reconciled balance this reconciled balance reconciled balance\n", "comment": "sets the reconciled balance\n"}
{"id": "50353590", "raw_code": "\tpublic String getPendingBalance() {\n\t\treturn pendingBalance;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the pendingBalance.\n\t * @return String\n\t */\n", "code": "public string get pending balance return pending balance\n", "comment": "returns the pending balance\n"}
{"id": "50353595", "raw_code": "\tpublic void setPendingBalance(String pendingBalance) {\n\t\tthis.pendingBalance = pendingBalance;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the pendingBalance.\n\t * @param pendingBalance The pendingBalance to set\n\t */\n", "code": "public void set pending balance string pending balance this pending balance pending balance\n", "comment": "sets the pending balance\n"}
{"id": "50353647", "raw_code": "\tpublic void setTransactionDate(String transactionDate) {\n\t\tthis.transactionDate = transactionDate;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the transactionDate.\n\t * @param transactionDate The transactionDate to set\n\t */\n", "code": "public void set transaction date string transaction date this transaction date transaction date\n", "comment": "sets the transaction date\n"}
{"id": "50353654", "raw_code": "\tpublic void setSplits(Collection splits) {\n\t\tthis.splits = splits;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the splits.\n\t * @param splits The splits to set\n\t */\n", "code": "public void set splits collection splits this splits splits\n", "comment": "sets the splits\n"}
{"id": "50353658", "raw_code": "\tpublic List getAllCategories() {\n\t\treturn allCategories;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the allCategories.\n\t * @return List\n\t */\n", "code": "public list get all categories return all categories\n", "comment": "returns the all categories\n"}
{"id": "50353662", "raw_code": "\tpublic void setAllCategories(List allCategories) {\n\t\tthis.allCategories = allCategories;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the allCategories.\n\t * @param allCategories The allCategories to set\n\t */\n", "code": "public void set all categories list all categories this all categories all categories\n", "comment": "sets the all categories\n"}
{"id": "23261256", "raw_code": "\tpublic boolean isConnected() {\n\t\treturn bytes != null;\n\t}\n", "raw_comment": "\t/**\n\t * Returns <tt>true</tt>, if this connection is already connected,\n\t * <tt>false</tt> otherwise.\n\t * @return <tt>true</tt>, if this connection is already connected,\n\t *         <tt>false</tt> otherwise\n\t */\n", "code": "public boolean is connected return bytes null\n", "comment": "returns tt true tt if this connection is already connected\n"}
{"id": "23261278", "raw_code": "\tpublic URL createURL(URL baseUrl, String name) {\n\t\tString urlSpecification = JAR_PROTOCOL + PROTOCOL_DELIMITER + baseUrl.toExternalForm() + \"!/\" + name;\n\t\treturn createURL(urlSpecification);\n\t}\n", "raw_comment": "\t/**\n\t * Creates an inner-jar-url pointing to the resource with the specified name\n\t * within the zip- or jar-file referenced by the specified base-URL.\n\t * @param baseUrl the jar-file\n\t * @param name the name of the resource\n\t * @return the URL of the resource\n\t */\n", "code": "public url create url url base url string name string url specification jar protocol protocol delimiter base url to external form name return create url url specification\n", "comment": "creates an inner jar url pointing to the resource with the specified name\n"}
{"id": "23261282", "raw_code": "\tpublic URL createURL(String urlSpecification) {\n\t\ttry {\n\t\t\tif (urlSpecification.startsWith(INNER_JAR_PROTOCOL + PROTOCOL_DELIMITER)) {\n\t\t\t\treturn new URL(null, urlSpecification, new InnerJarStreamHandler());\n\t\t\t} else {\n\t\t\t\treturn new URL(urlSpecification);\n\t\t\t}\t\t\n\t\t} catch (MalformedURLException e) {\n\t\t\treturn null;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Creates an URL for the specified specification.\n\t * This implementation handles the creation of inner-jar-urls.\n\t * @param urlSpecification the specification\n\t * @return the URL\n\t */\n", "code": "public url create url string url specification try if url specification starts with inner jar protocol protocol delimiter return new url null url specification new inner jar stream handler else return new url url specification catch malformed urlexception e return null\n", "comment": "creates an url for the specified specification\n"}
{"id": "23261290", "raw_code": "\tpublic boolean isDirectory(URL url) {\n\t\tif (isFile(url)) {\n\t\t\tFile file = toFile(url);\n\t\t\treturn file == null? false: file.isDirectory();\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Returns <tt>true</tt>, if the specified URL denotes a directory.\n\t * @param url the url to check\n\t * @return <tt>true</tt>, if the specified URL denotes a directory, <tt>false</tt> otherwise\n\t */\n", "code": "public boolean is directory url url if is file url file file to file url return file null false file is directory else return false\n", "comment": "returns tt true tt if the specified url denotes a directory\n"}
{"id": "23261291", "raw_code": "\tpublic boolean isJar(String filename) {\n\t\treturn filename.trim().toLowerCase().endsWith(JAR_SUFFIX);\n\t}\n", "raw_comment": "\t/**\n\t * Returns <tt>true</tt>, if the specified filename denotes a jar-file.\n\t * @param filename the filename to check\n\t * @return <tt>true</tt>, if the specified filename denotes a jar-file, <tt>false</tt> otherwise\n\t */\n", "code": "public boolean is jar string filename return filename trim to lower case ends with jar suffix\n", "comment": "returns tt true tt if the specified filename denotes a jar file\n"}
{"id": "23261293", "raw_code": "\tprivate File toFile(URL url) {\n\t\ttry {\n\t\t\treturn new File(url.toURI());\n\t\t} catch (URISyntaxException e) {\n\t\t\treturn null;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Converts the specified <tt>URL</tt> to a <tt>File</tt>.\n\t * @param url the <tt>URL</tt> to convert\n\t * @return the file, or <tt>null</tt>,\n\t *         if the specified <tt>URL</tt> cannot be converted to a <tt>File</tt>\n\t */\n", "code": "private file to file url url try return new file url to uri catch urisyntax exception e return null\n", "comment": "converts the specified tt url tt to a tt file tt\n"}
{"id": "39917895", "raw_code": "    private QuestionnaireMgr lookupBean() {\n        try {\n            Context c = new InitialContext();\n            return (QuestionnaireMgr) c.lookup(\"java:comp/env/ejb/QuestionnaireMgr\");\n            \n        } catch(NamingException ne) {\n            Logger.getLogger(getClass().getName()).log(Level.SEVERE,\"exception caught\" ,ne);\n            throw new RuntimeException(ne);\n        }\n    }\n", "raw_comment": "    /** Looks-up the session bean */\n", "code": "private questionnaire mgr lookup bean try context c new initial context return questionnaire mgr c lookup java comp env ejb questionnaire mgr catch naming exception ne logger get logger get class get name log level severe exception caught ne throw new runtime exception ne\n", "comment": "looks up the session bean\n"}
{"id": "34836877", "raw_code": "    public boolean getVisible() {\n        if (getCloud()==null) {\n            return true;\n        }\n        return visible;\n    }\n", "raw_comment": "    /**\n     * gets visibility status\n     * @returns true if visible\n     */\n", "code": "public boolean get visible if get cloud null return true return visible\n", "comment": "gets visibility status\n"}
{"id": "34837396", "raw_code": "    public void setSource(String sourceType,String sourceVal) {\n        setSourceList(sourceVal);\n        typeNameSource=sourceType;\n    }\n", "raw_comment": "    /**\n     * Set the source\n     * @param sourceType sourcetype attribute\n     * @param sourceVal tysource content\n     */\n", "code": "public void set source string source type string source val set source list source val type name source source type\n", "comment": "set the source\n"}
{"id": "35926450", "raw_code": "    public void onSurfaceCreated(GL10 gl, EGLConfig config) {\n        // Do nothing special.\n    }\n", "raw_comment": "\t/**\n\t * Empty method, might be used in the future. \n\t * @see android.opengl.GLSurfaceView.Renderer#onSurfaceCreated(javax.microedition.khronos.opengles.GL10, javax.microedition.khronos.egl.EGLConfig)\n\t */\n", "code": "public void on surface created gl10 gl eglconfig config do nothing special\n", "comment": "empty method might be used in the future\n"}
{"id": "9295100", "raw_code": "    protected void onDocumentCreate() {\n        hyperlinks = new ArrayList<XWPFHyperlink>();\n        comments = new ArrayList<XWPFComment>();\n        paragraphs = new ArrayList<XWPFParagraph>();\n        tables= new ArrayList<XWPFTable>();\n\n        ctDocument = CTDocument1.Factory.newInstance();\n        ctDocument.addNewBody();\n        \n        settings =  (XWPFSettings) createRelationship(XWPFRelation.SETTINGS, XWPFFactory.getInstance());\n\n        POIXMLProperties.ExtendedProperties expProps = getProperties().getExtendedProperties();\n        expProps.getUnderlyingProperties().setApplication(DOCUMENT_CREATOR);\n    }\n", "raw_comment": "    /**\n     * Create a new CTWorkbook with all values set to default\n     */\n", "code": "protected void on document create hyperlinks new array list xwpfhyperlink comments new array list xwpfcomment paragraphs new array list xwpfparagraph tables new array list xwpftable ct document ctdocument1 factory new instance ct document add new body settings xwpfsettings create relationship xwpfrelation settings xwpffactory get instance poixmlproperties extended properties exp props get properties get extended properties exp props get underlying properties set application document creator\n", "comment": "create a new ctworkbook with all values set to default\n"}
{"id": "9295110", "raw_code": "    public String getText() {\n        StringBuffer out = new StringBuffer();\n        out.append(text);\n        return out.toString();\n    }\n", "raw_comment": "    /**\n     * Return the textual content of the paragraph, including text from pictures\n     * in it.\n     */\n", "code": "public string get text string buffer out new string buffer out append text return out to string\n", "comment": "return the textual content of the paragraph including text from pictures\n"}
{"id": "9295112", "raw_code": "    public String getParagraphText() {\n        return text.toString();\n    }\n", "raw_comment": "    /**\n     * Returns the text of the paragraph, but not of any objects in the\n     * paragraph\n     */\n", "code": "public string get paragraph text return text to string\n", "comment": "returns the text of the paragraph but not of any objects in the\n"}
{"id": "9295115", "raw_code": "    public XWPFRun createRun() {\n        return new XWPFRun(paragraph.addNewR(), this);\n    }\n", "raw_comment": "    /**\n     * Appends a new run to this paragraph\n     *\n     * @return a new text run\n     */\n", "code": "public xwpfrun create run return new xwpfrun paragraph add new r this\n", "comment": "appends a new run to this paragraph\n"}
{"id": "9295116", "raw_code": "    public PackagePart getPartById(String id) {\n        try {\n            return getTargetPart(\n                    getCorePart().getRelationship(id)\n            );\n        } catch(InvalidFormatException e) {\n            throw new IllegalArgumentException(e);\n        }\n    }\n", "raw_comment": "    /**\n     * Get the document part that's defined as the\n     *  given relationship of the core document.\n     */\n", "code": "public package part get part by id string id try return get target part get core part get relationship id catch invalid format exception e throw new illegal argument exception e\n", "comment": "get the document part thats defined as the\n"}
{"id": "9295117", "raw_code": "    public ParagraphAlignment getAlignment() {\n        CTPPr pr = getCTPPr();\n        return pr == null || !pr.isSetJc() ? ParagraphAlignment.LEFT\n                : ParagraphAlignment.valueOf(pr.getJc().getVal().intValue());\n    }\n", "raw_comment": "    /**\n     * Returns the paragraph alignment which shall be applied to text in this\n     * paragraph.\n     * <p/>\n     * <p/>\n     * If this element is not set on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then no alignment is applied to the\n     * paragraph.\n     * </p>\n     *\n     * @return the paragraph alignment of this paragraph.\n     */\n", "code": "public paragraph alignment get alignment ctppr pr get ctppr return pr null pr is set jc paragraph alignment left paragraph alignment value of pr get jc get val int value\n", "comment": "returns the paragraph alignment which shall be applied to text in this\n"}
{"id": "9295118", "raw_code": "    public XWPFHeaderFooterPolicy getHeaderFooterPolicy() {\n        return headerFooterPolicy;\n    }\n", "raw_comment": "    /**\n     * Returns the policy on headers and footers, which\n     *  also provides a way to get at them.\n     */\n", "code": "public xwpfheader footer policy get header footer policy return header footer policy\n", "comment": "returns the policy on headers and footers which\n"}
{"id": "9295119", "raw_code": "    public void setAlignment(ParagraphAlignment align) {\n        CTPPr pr = getCTPPr();\n        CTJc jc = pr.isSetJc() ? pr.getJc() : pr.addNewJc();\n        STJc.Enum en = STJc.Enum.forInt(align.getValue());\n        jc.setVal(en);\n    }\n", "raw_comment": "    /**\n     * Specifies the paragraph alignment which shall be applied to text in this\n     * paragraph.\n     * <p/>\n     * <p/>\n     * If this element is not set on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then no alignment is applied to the\n     * paragraph.\n     * </p>\n     *\n     * @param align the paragraph alignment to apply to this paragraph.\n     */\n", "code": "public void set alignment paragraph alignment align ctppr pr get ctppr ctjc jc pr is set jc pr get jc pr add new jc stjc enum en stjc enum for int align get value jc set val en\n", "comment": "specifies the paragraph alignment which shall be applied to text in this\n"}
{"id": "9295121", "raw_code": "    public TextAlignment getVerticalAlignment() {\n        CTPPr pr = getCTPPr();\n        return (pr == null || !pr.isSetTextAlignment()) ? TextAlignment.AUTO\n                : TextAlignment.valueOf(pr.getTextAlignment().getVal()\n                .intValue());\n    }\n", "raw_comment": "    /**\n     * Returns the text vertical alignment which shall be applied to text in\n     * this paragraph.\n     * <p/>\n     * If the line height (before any added spacing) is larger than one or more\n     * characters on the line, all characters will be aligned to each other as\n     * specified by this element.\n     * </p>\n     * <p/>\n     * If this element is omitted on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then the vertical alignment of all\n     * characters on the line shall be automatically determined by the consumer.\n     * </p>\n     *\n     * @return the vertical alignment of this paragraph.\n     */\n", "code": "public text alignment get vertical alignment ctppr pr get ctppr return pr null pr is set text alignment text alignment auto text alignment value of pr get text alignment get val int value\n", "comment": "returns the text vertical alignment which shall be applied to text in\n"}
{"id": "9295123", "raw_code": "    public void setVerticalAlignment(TextAlignment valign) {\n        CTPPr pr = getCTPPr();\n        CTTextAlignment textAlignment = pr.isSetTextAlignment() ? pr\n                .getTextAlignment() : pr.addNewTextAlignment();\n        STTextAlignment.Enum en = STTextAlignment.Enum\n                .forInt(valign.getValue());\n        textAlignment.setVal(en);\n    }\n", "raw_comment": "    /**\n     * Specifies the text vertical alignment which shall be applied to text in\n     * this paragraph.\n     * <p/>\n     * If the line height (before any added spacing) is larger than one or more\n     * characters on the line, all characters will be aligned to each other as\n     * specified by this element.\n     * </p>\n     * <p/>\n     * If this element is omitted on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then the vertical alignment of all\n     * characters on the line shall be automatically determined by the consumer.\n     * </p>\n     *\n     * @param valign the paragraph vertical alignment to apply to this\n     *               paragraph.\n     */\n", "code": "public void set vertical alignment text alignment valign ctppr pr get ctppr cttext alignment text alignment pr is set text alignment pr get text alignment pr add new text alignment sttext alignment enum en sttext alignment enum for int valign get value text alignment set val en\n", "comment": "specifies the text vertical alignment which shall be applied to text in\n"}
{"id": "9295124", "raw_code": "    public XWPFParagraph createParagraph(){\n        return new XWPFParagraph(ctDocument.getBody().addNewP(), this);\n    }\n", "raw_comment": "    /**\n     * Appends a new paragraph to this document\n     *\n     * @return a new paragraph\n     */\n", "code": "public xwpfparagraph create paragraph return new xwpfparagraph ct document get body add new p this\n", "comment": "appends a new paragraph to this document\n"}
{"id": "9295125", "raw_code": "    public XWPFTable createTable(){\n        return new XWPFTable(this, ctDocument.getBody().addNewTbl());\n    }\n", "raw_comment": "    /**\n     * Create an empty table with one row and one column as default.\n     *\n     * @return a new table\n     */\n", "code": "public xwpftable create table return new xwpftable this ct document get body add new tbl\n", "comment": "create an empty table with one row and one column as default\n"}
{"id": "9295126", "raw_code": "    public void setBorderTop(Borders border) {\n        CTPBdr ct = getCTPBrd(true);\n\n        CTBorder pr = (ct != null && ct.isSetTop()) ? ct.getTop() : ct.addNewTop();\n        if (border.getValue() == Borders.NONE.getValue())\n            ct.unsetTop();\n        else\n            pr.setVal(STBorder.Enum.forInt(border.getValue()));\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed above a set of paragraphs\n     * which have the same set of paragraph border settings.\n     * <p/>\n     * <p/>\n     * To determine if any two adjoining paragraphs shall have an individual top\n     * and bottom border or a between border, the set of borders on the two\n     * adjoining paragraphs are compared. If the border information on those two\n     * paragraphs is identical for all possible paragraphs borders, then the\n     * between border is displayed. Otherwise, the final paragraph shall use its\n     * bottom border and the following paragraph shall use its top border,\n     * respectively. If this border specifies a space attribute, that value\n     * determines the space above the text (ignoring any spacing above) which\n     * should be left before this border is drawn, specified in points.\n     * </p>\n     * <p/>\n     * If this element is omitted on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then no between border shall be applied\n     * above identical paragraphs.\n     * </p>\n     * <b>This border can only be a line border.</b>\n     *\n     * @param border\n     * @see Borders for a list of all types of borders\n     */\n", "code": "public void set border top borders border ctpbdr ct get ctpbrd true ctborder pr ct null ct is set top ct get top ct add new top if border get value borders none get value ct unset top else pr set val stborder enum for int border get value\n", "comment": "specifies the border which shall be displayed above a set of paragraphs\n"}
{"id": "9295127", "raw_code": "    public XWPFTable createTable(int rows, int cols) {\n    return new XWPFTable(this, ctDocument.getBody().addNewTbl(), rows, cols);\n    }\n", "raw_comment": "    /**\n     * Create an empty table with a number of rows and cols specified\n     * @param rows\n     * @param cols\n     * @return table\n     */\n", "code": "public xwpftable create table int rows int cols return new xwpftable this ct document get body add new tbl rows cols\n", "comment": "create an empty table with a number of rows and cols specified\n"}
{"id": "9295130", "raw_code": "    public Borders getBorderTop() {\n        CTPBdr border = getCTPBrd(false);\n        CTBorder ct = null;\n        if (border != null) {\n            ct = border.getTop();\n        }\n        STBorder.Enum ptrn = (ct != null) ? ct.getVal() : STBorder.NONE;\n        return Borders.valueOf(ptrn.intValue());\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed above a set of paragraphs\n     * which have the same set of paragraph border settings.\n     *\n     * @return paragraphBorder - the top border for the paragraph\n     * @see #setBorderTop(Borders)\n     * @see Borders a list of all types of borders\n     */\n", "code": "public borders get border top ctpbdr border get ctpbrd false ctborder ct null if border null ct border get top stborder enum ptrn ct null ct get val stborder none return borders value of ptrn int value\n", "comment": "specifies the border which shall be displayed above a set of paragraphs\n"}
{"id": "9295131", "raw_code": "    public boolean isEnforcedReadonlyProtection() {\n        return settings.isEnforcedWith(STDocProtect.READ_ONLY);\n    }\n", "raw_comment": "    /**\n     * Verifies that the documentProtection tag in settings.xml file <br/>\n     * specifies that the protection is enforced (w:enforcement=\"1\") <br/>\n     * and that the kind of protection is readOnly (w:edit=\"readOnly\")<br/>\n     * <br/>\n     * sample snippet from settings.xml\n     * <pre>\n     *     &lt;w:settings  ... &gt;\n     *         &lt;w:documentProtection w:edit=&quot;readOnly&quot; w:enforcement=&quot;1&quot;/&gt;\n     * </pre>\n     * \n     * @return true if documentProtection is enforced with option readOnly\n     */\n", "code": "public boolean is enforced readonly protection return settings is enforced with stdoc protect read only\n", "comment": "verifies that the document protection tag in settings\n"}
{"id": "9295132", "raw_code": "    public boolean isEnforcedFillingFormsProtection() {\n        return settings.isEnforcedWith(STDocProtect.FORMS);\n    }\n", "raw_comment": "    /**\n     * Verifies that the documentProtection tag in settings.xml file <br/>\n     * specifies that the protection is enforced (w:enforcement=\"1\") <br/>\n     * and that the kind of protection is forms (w:edit=\"forms\")<br/>\n     * <br/>\n     * sample snippet from settings.xml\n     * <pre>\n     *     &lt;w:settings  ... &gt;\n     *         &lt;w:documentProtection w:edit=&quot;forms&quot; w:enforcement=&quot;1&quot;/&gt;\n     * </pre>\n     * \n     * @return true if documentProtection is enforced with option forms\n     */\n", "code": "public boolean is enforced filling forms protection return settings is enforced with stdoc protect forms\n", "comment": "verifies that the document protection tag in settings\n"}
{"id": "9295133", "raw_code": "    public void setBorderBottom(Borders border) {\n        CTPBdr ct = getCTPBrd(true);\n        CTBorder pr = ct.isSetBottom() ? ct.getBottom() : ct.addNewBottom();\n        if (border.getValue() == Borders.NONE.getValue())\n            ct.unsetBottom();\n        else\n            pr.setVal(STBorder.Enum.forInt(border.getValue()));\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed below a set of paragraphs\n     * which have the same set of paragraph border settings.\n     * <p/>\n     * To determine if any two adjoining paragraphs shall have an individual top\n     * and bottom border or a between border, the set of borders on the two\n     * adjoining paragraphs are compared. If the border information on those two\n     * paragraphs is identical for all possible paragraphs borders, then the\n     * between border is displayed. Otherwise, the final paragraph shall use its\n     * bottom border and the following paragraph shall use its top border,\n     * respectively. If this border specifies a space attribute, that value\n     * determines the space after the bottom of the text (ignoring any space\n     * below) which should be left before this border is drawn, specified in\n     * points.\n     * </p>\n     * <p/>\n     * If this element is omitted on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then no between border shall be applied\n     * below identical paragraphs.\n     * </p>\n     * <b>This border can only be a line border.</b>\n     *\n     * @param border\n     * @see Borders a list of all types of borders\n     */\n", "code": "public void set border bottom borders border ctpbdr ct get ctpbrd true ctborder pr ct is set bottom ct get bottom ct add new bottom if border get value borders none get value ct unset bottom else pr set val stborder enum for int border get value\n", "comment": "specifies the border which shall be displayed below a set of paragraphs\n"}
{"id": "9295134", "raw_code": "    public boolean isEnforcedCommentsProtection() {\n        return settings.isEnforcedWith(STDocProtect.COMMENTS);\n    }\n", "raw_comment": "    /**\n     * Verifies that the documentProtection tag in settings.xml file <br/>\n     * specifies that the protection is enforced (w:enforcement=\"1\") <br/>\n     * and that the kind of protection is comments (w:edit=\"comments\")<br/>\n     * <br/>\n     * sample snippet from settings.xml\n     * <pre>\n     *     &lt;w:settings  ... &gt;\n     *         &lt;w:documentProtection w:edit=&quot;comments&quot; w:enforcement=&quot;1&quot;/&gt;\n     * </pre>\n     * \n     * @return true if documentProtection is enforced with option comments\n     */\n", "code": "public boolean is enforced comments protection return settings is enforced with stdoc protect comments\n", "comment": "verifies that the document protection tag in settings\n"}
{"id": "9295135", "raw_code": "    public boolean isEnforcedTrackedChangesProtection() {\n        return settings.isEnforcedWith(STDocProtect.TRACKED_CHANGES);\n    }\n", "raw_comment": "    /**\n     * Verifies that the documentProtection tag in settings.xml file <br/>\n     * specifies that the protection is enforced (w:enforcement=\"1\") <br/>\n     * and that the kind of protection is trackedChanges (w:edit=\"trackedChanges\")<br/>\n     * <br/>\n     * sample snippet from settings.xml\n     * <pre>\n     *     &lt;w:settings  ... &gt;\n     *         &lt;w:documentProtection w:edit=&quot;trackedChanges&quot; w:enforcement=&quot;1&quot;/&gt;\n     * </pre>\n     * \n     * @return true if documentProtection is enforced with option trackedChanges\n     */\n", "code": "public boolean is enforced tracked changes protection return settings is enforced with stdoc protect tracked changes\n", "comment": "verifies that the document protection tag in settings\n"}
{"id": "9295136", "raw_code": "    public Borders getBorderBottom() {\n        CTPBdr border = getCTPBrd(false);\n        CTBorder ct = null;\n        if (border != null) {\n            ct = border.getBottom();\n        }\n        STBorder.Enum ptrn = ct != null ? ct.getVal() : STBorder.NONE;\n        return Borders.valueOf(ptrn.intValue());\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed below a set of\n     * paragraphs which have the same set of paragraph border settings.\n     *\n     * @return paragraphBorder - the bottom border for the paragraph\n     * @see #setBorderBottom(Borders)\n     * @see Borders a list of all types of borders\n     */\n", "code": "public borders get border bottom ctpbdr border get ctpbrd false ctborder ct null if border null ct border get bottom stborder enum ptrn ct null ct get val stborder none return borders value of ptrn int value\n", "comment": "specifies the border which shall be displayed below a set of\n"}
{"id": "9295138", "raw_code": "    public void setBorderLeft(Borders border) {\n        CTPBdr ct = getCTPBrd(true);\n        CTBorder pr = ct.isSetLeft() ? ct.getLeft() : ct.addNewLeft();\n        if (border.getValue() == Borders.NONE.getValue())\n            ct.unsetLeft();\n        else\n            pr.setVal(STBorder.Enum.forInt(border.getValue()));\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed on the left side of the\n     * page around the specified paragraph.\n     * <p/>\n     * To determine if any two adjoining paragraphs should have a left border\n     * which spans the full line height or not, the left border shall be drawn\n     * between the top border or between border at the top (whichever would be\n     * rendered for the current paragraph), and the bottom border or between\n     * border at the bottom (whichever would be rendered for the current\n     * paragraph).\n     * </p>\n     * <p/>\n     * If this element is omitted on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then no left border shall be applied.\n     * </p>\n     * <b>This border can only be a line border.</b>\n     *\n     * @param border\n     * @see Borders for a list of all possible borders\n     */\n", "code": "public void set border left borders border ctpbdr ct get ctpbrd true ctborder pr ct is set left ct get left ct add new left if border get value borders none get value ct unset left else pr set val stborder enum for int border get value\n", "comment": "specifies the border which shall be displayed on the left side of the\n"}
{"id": "9295139", "raw_code": "    public void enforceFillingFormsProtection() {\n        settings.setEnforcementEditValue(STDocProtect.FORMS);\n    } \n", "raw_comment": "    /**\n     * Enforce the Filling Forms protection.<br/>\n     * In the documentProtection tag inside settings.xml file, <br/>\n     * it sets the value of enforcement to \"1\" (w:enforcement=\"1\") <br/>\n     * and the value of edit to forms (w:edit=\"forms\")<br/>\n     * <br/>\n     * sample snippet from settings.xml\n     * <pre>\n     *     &lt;w:settings  ... &gt;\n     *         &lt;w:documentProtection w:edit=&quot;forms&quot; w:enforcement=&quot;1&quot;/&gt;\n     * </pre>\n     */\n", "code": "public void enforce filling forms protection settings set enforcement edit value stdoc protect forms\n", "comment": "enforce the filling forms protection\n"}
{"id": "9295140", "raw_code": "    public void enforceCommentsProtection() {\n        settings.setEnforcementEditValue(STDocProtect.COMMENTS);\n    }\n", "raw_comment": "    /**\n     * Enforce the Comments protection.<br/>\n     * In the documentProtection tag inside settings.xml file,<br/>\n     * it sets the value of enforcement to \"1\" (w:enforcement=\"1\") <br/>\n     * and the value of edit to comments (w:edit=\"comments\")<br/>\n     * <br/>\n     * sample snippet from settings.xml\n     * <pre>\n     *     &lt;w:settings  ... &gt;\n     *         &lt;w:documentProtection w:edit=&quot;comments&quot; w:enforcement=&quot;1&quot;/&gt;\n     * </pre>\n     */\n", "code": "public void enforce comments protection settings set enforcement edit value stdoc protect comments\n", "comment": "enforce the comments protection\n"}
{"id": "9295141", "raw_code": "    public Borders getBorderLeft() {\n        CTPBdr border = getCTPBrd(false);\n        CTBorder ct = null;\n        if (border != null) {\n            ct = border.getLeft();\n        }\n        STBorder.Enum ptrn = ct != null ? ct.getVal() : STBorder.NONE;\n        return Borders.valueOf(ptrn.intValue());\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed on the left side of the\n     * page around the specified paragraph.\n     *\n     * @return ParagraphBorder - the left border for the paragraph\n     * @see #setBorderLeft(Borders)\n     * @see Borders for a list of all possible borders\n     */\n", "code": "public borders get border left ctpbdr border get ctpbrd false ctborder ct null if border null ct border get left stborder enum ptrn ct null ct get val stborder none return borders value of ptrn int value\n", "comment": "specifies the border which shall be displayed on the left side of the\n"}
{"id": "9295142", "raw_code": "    public void enforceTrackedChangesProtection() {\n        settings.setEnforcementEditValue(STDocProtect.TRACKED_CHANGES);               \n    }\n", "raw_comment": "    /**\n     * Enforce the Tracked Changes protection.<br/>\n     * In the documentProtection tag inside settings.xml file, <br/>\n     * it sets the value of enforcement to \"1\" (w:enforcement=\"1\") <br/>\n     * and the value of edit to trackedChanges (w:edit=\"trackedChanges\")<br/>\n     * <br/>\n     * sample snippet from settings.xml\n     * <pre>\n     *     &lt;w:settings  ... &gt;\n     *         &lt;w:documentProtection w:edit=&quot;trackedChanges&quot; w:enforcement=&quot;1&quot;/&gt;\n     * </pre>\n     */\n", "code": "public void enforce tracked changes protection settings set enforcement edit value stdoc protect tracked changes\n", "comment": "enforce the tracked changes protection\n"}
{"id": "9295144", "raw_code": "    public void setBorderRight(Borders border) {\n        CTPBdr ct = getCTPBrd(true);\n        CTBorder pr = ct.isSetRight() ? ct.getRight() : ct.addNewRight();\n        if (border.getValue() == Borders.NONE.getValue())\n            ct.unsetRight();\n        else\n            pr.setVal(STBorder.Enum.forInt(border.getValue()));\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed on the right side of the\n     * page around the specified paragraph.\n     * <p/>\n     * To determine if any two adjoining paragraphs should have a right border\n     * which spans the full line height or not, the right border shall be drawn\n     * between the top border or between border at the top (whichever would be\n     * rendered for the current paragraph), and the bottom border or between\n     * border at the bottom (whichever would be rendered for the current\n     * paragraph).\n     * </p>\n     * <p/>\n     * If this element is omitted on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then no right border shall be applied.\n     * </p>\n     * <b>This border can only be a line border.</b>\n     *\n     * @param border\n     * @see Borders for a list of all possible borders\n     */\n", "code": "public void set border right borders border ctpbdr ct get ctpbrd true ctborder pr ct is set right ct get right ct add new right if border get value borders none get value ct unset right else pr set val stborder enum for int border get value\n", "comment": "specifies the border which shall be displayed on the right side of the\n"}
{"id": "9295146", "raw_code": "    public void removeProtectionEnforcement() {\n        settings.removeEnforcement();\n    }\n", "raw_comment": "    /**\n     * Remove protection enforcement.<br/>\n     * In the documentProtection tag inside settings.xml file <br/>\n     * it sets the value of enforcement to \"0\" (w:enforcement=\"0\") <br/>\n     */\n", "code": "public void remove protection enforcement settings remove enforcement\n", "comment": "remove protection enforcement\n"}
{"id": "9295149", "raw_code": "    public Borders getBorderRight() {\n        CTPBdr border = getCTPBrd(false);\n        CTBorder ct = null;\n        if (border != null) {\n            ct = border.getRight();\n        }\n        STBorder.Enum ptrn = ct != null ? ct.getVal() : STBorder.NONE;\n        return Borders.valueOf(ptrn.intValue());\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed on the right side of the\n     * page around the specified paragraph.\n     *\n     * @return ParagraphBorder - the right border for the paragraph\n     * @see #setBorderRight(Borders)\n     * @see Borders for a list of all possible borders\n     */\n", "code": "public borders get border right ctpbdr border get ctpbrd false ctborder ct null if border null ct border get right stborder enum ptrn ct null ct get val stborder none return borders value of ptrn int value\n", "comment": "specifies the border which shall be displayed on the right side of the\n"}
{"id": "9295150", "raw_code": "    public void setBorderBetween(Borders border) {\n        CTPBdr ct = getCTPBrd(true);\n        CTBorder pr = ct.isSetBetween() ? ct.getBetween() : ct.addNewBetween();\n        if (border.getValue() == Borders.NONE.getValue())\n            ct.unsetBetween();\n        else\n            pr.setVal(STBorder.Enum.forInt(border.getValue()));\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed between each paragraph in a\n     * set of paragraphs which have the same set of paragraph border settings.\n     * <p/>\n     * To determine if any two adjoining paragraphs should have a between border\n     * or an individual top and bottom border, the set of borders on the two\n     * adjoining paragraphs are compared. If the border information on those two\n     * paragraphs is identical for all possible paragraphs borders, then the\n     * between border is displayed. Otherwise, each paragraph shall use its\n     * bottom and top border, respectively. If this border specifies a space\n     * attribute, that value is ignored - this border is always located at the\n     * bottom of each paragraph with an identical following paragraph, taking\n     * into account any space after the line pitch.\n     * </p>\n     * <p/>\n     * If this element is omitted on a given paragraph, its value is determined\n     * by the setting previously set at any level of the style hierarchy (i.e.\n     * that previous setting remains unchanged). If this setting is never\n     * specified in the style hierarchy, then no between border shall be applied\n     * between identical paragraphs.\n     * </p>\n     * <b>This border can only be a line border.</b>\n     *\n     * @param border\n     * @see Borders for a list of all possible borders\n     */\n", "code": "public void set border between borders border ctpbdr ct get ctpbrd true ctborder pr ct is set between ct get between ct add new between if border get value borders none get value ct unset between else pr set val stborder enum for int border get value\n", "comment": "specifies the border which shall be displayed between each paragraph in a\n"}
{"id": "9295151", "raw_code": "    public Borders getBorderBetween() {\n        CTPBdr border = getCTPBrd(false);\n        CTBorder ct = null;\n        if (border != null) {\n            ct = border.getBetween();\n        }\n        STBorder.Enum ptrn = ct != null ? ct.getVal() : STBorder.NONE;\n        return Borders.valueOf(ptrn.intValue());\n    }\n", "raw_comment": "    /**\n     * Specifies the border which shall be displayed between each paragraph in a\n     * set of paragraphs which have the same set of paragraph border settings.\n     *\n     * @return ParagraphBorder - the between border for the paragraph\n     * @see #setBorderBetween(Borders)\n     * @see Borders for a list of all possible borders\n     */\n", "code": "public borders get border between ctpbdr border get ctpbrd false ctborder ct null if border null ct border get between stborder enum ptrn ct null ct get val stborder none return borders value of ptrn int value\n", "comment": "specifies the border which shall be displayed between each paragraph in a\n"}
{"id": "9295152", "raw_code": "    public void setPageBreak(boolean pageBreak) {\n        CTPPr ppr = getCTPPr();\n        CTOnOff ct_pageBreak = ppr.isSetPageBreakBefore() ? ppr\n                .getPageBreakBefore() : ppr.addNewPageBreakBefore();\n        if (pageBreak)\n            ct_pageBreak.setVal(STOnOff.TRUE);\n        else\n            ct_pageBreak.setVal(STOnOff.FALSE);\n    }\n", "raw_comment": "    /**\n     * Specifies that when rendering this document in a paginated\n     * view, the contents of this paragraph are rendered on the start of a new\n     * page in the document.\n     * <p/>\n     * If this element is omitted on a given paragraph,\n     * its value is determined by the setting previously set at any level of the\n     * style hierarchy (i.e. that previous setting remains unchanged). If this\n     * setting is never specified in the style hierarchy, then this property\n     * shall not be applied. Since the paragraph is specified to start on a new\n     * page, it begins page two even though it could have fit on page one.\n     * </p>\n     *\n     * @param pageBreak -\n     *                  boolean value\n     */\n", "code": "public void set page break boolean page break ctppr ppr get ctppr cton off ct page break ppr is set page break before ppr get page break before ppr add new page break before if page break ct page break set val ston off true else ct page break set val ston off false\n", "comment": "specifies that when rendering this document in a paginated\n"}
{"id": "9295156", "raw_code": "    public boolean isPageBreak() {\n        CTPPr ppr = getCTPPr();\n        CTOnOff ct_pageBreak = ppr.isSetPageBreakBefore() ? ppr\n                .getPageBreakBefore() : null;\n        if (ct_pageBreak != null\n                && ct_pageBreak.getVal().intValue() == STOnOff.INT_TRUE) {\n            return true;\n        }\n        return false;\n    }\n", "raw_comment": "    /**\n     * Specifies that when rendering this document in a paginated\n     * view, the contents of this paragraph are rendered on the start of a new\n     * page in the document.\n     * <p/>\n     * If this element is omitted on a given paragraph,\n     * its value is determined by the setting previously set at any level of the\n     * style hierarchy (i.e. that previous setting remains unchanged). If this\n     * setting is never specified in the style hierarchy, then this property\n     * shall not be applied. Since the paragraph is specified to start on a new\n     * page, it begins page two even though it could have fit on page one.\n     * </p>\n     *\n     * @return boolean - if page break is set\n     */\n", "code": "public boolean is page break ctppr ppr get ctppr cton off ct page break ppr is set page break before ppr get page break before null if ct page break null ct page break get val int value ston off int true return true return false\n", "comment": "specifies that when rendering this document in a paginated\n"}
{"id": "9295160", "raw_code": "    public void setSpacingAfter(int spaces) {\n        CTSpacing spacing = getCTSpacing(true);\n        if (spacing != null) {\n            BigInteger bi = new BigInteger(\"\" + spaces);\n            spacing.setAfter(bi);\n        }\n\n    }\n", "raw_comment": "    /**\n     * Specifies the spacing that should be added after the last line in this\n     * paragraph in the document in absolute units.\n     * <p/>\n     * If the afterLines attribute or the afterAutoSpacing attribute is also\n     * specified, then this attribute value is ignored.\n     * </p>\n     *\n     * @param spaces -\n     *               a positive whole number, whose contents consist of a\n     *               measurement in twentieths of a point.\n     */\n", "code": "public void set spacing after int spaces ctspacing spacing get ctspacing true if spacing null big integer bi new big integer spaces spacing set after bi\n", "comment": "specifies the spacing that should be added after the last line in this\n"}
{"id": "9295163", "raw_code": "    public int getSpacingAfter() {\n        CTSpacing spacing = getCTSpacing(false);\n        return (spacing != null && spacing.isSetAfter()) ? spacing.getAfter().intValue() : -1;\n    }\n", "raw_comment": "    /**\n     * Specifies the spacing that should be added after the last line in this\n     * paragraph in the document in absolute units.\n     *\n     * @return int - value representing the spacing after the paragraph\n     */\n", "code": "public int get spacing after ctspacing spacing get ctspacing false return spacing null spacing is set after spacing get after int value 1\n", "comment": "specifies the spacing that should be added after the last line in this\n"}
{"id": "9295165", "raw_code": "    public void setSpacingAfterLines(int spaces) {\n        CTSpacing spacing = getCTSpacing(true);\n        BigInteger bi = new BigInteger(\"\" + spaces);\n        spacing.setAfterLines(bi);\n    }\n", "raw_comment": "    /**\n     * Specifies the spacing that should be added after the last line in this\n     * paragraph in the document in line units.\n     * <b>The value of this attribute is\n     * specified in one hundredths of a line.\n     * </b>\n     * <p/>\n     * If the afterAutoSpacing attribute\n     * is also specified, then this attribute value is ignored. If this setting\n     * is never specified in the style hierarchy, then its value shall be zero\n     * (if needed)\n     * </p>\n     *\n     * @param spaces -\n     *               a positive whole number, whose contents consist of a\n     *               measurement in twentieths of a\n     */\n", "code": "public void set spacing after lines int spaces ctspacing spacing get ctspacing true big integer bi new big integer spaces spacing set after lines bi\n", "comment": "specifies the spacing that should be added after the last line in this\n"}
{"id": "9295168", "raw_code": "    public int getSpacingAfterLines() {\n        CTSpacing spacing = getCTSpacing(false);\n        return (spacing != null && spacing.isSetAfterLines()) ? spacing.getAfterLines().intValue() : -1;\n    }\n", "raw_comment": "    /**\n     * Specifies the spacing that should be added after the last line in this\n     * paragraph in the document in absolute units.\n     *\n     * @return bigInteger - value representing the spacing after the paragraph\n     * @see #setSpacingAfterLines(int)\n     */\n", "code": "public int get spacing after lines ctspacing spacing get ctspacing false return spacing null spacing is set after lines spacing get after lines int value 1\n", "comment": "specifies the spacing that should be added after the last line in this\n"}
{"id": "9295170", "raw_code": "    public void setSpacingBefore(int spaces) {\n        CTSpacing spacing = getCTSpacing(true);\n        BigInteger bi = new BigInteger(\"\" + spaces);\n        spacing.setBefore(bi);\n    }\n", "raw_comment": "    /**\n     * Specifies the spacing that should be added above the first line in this\n     * paragraph in the document in absolute units.\n     * <p/>\n     * If the beforeLines attribute or the beforeAutoSpacing attribute is also\n     * specified, then this attribute value is ignored.\n     * </p>\n     *\n     * @param spaces\n     */\n", "code": "public void set spacing before int spaces ctspacing spacing get ctspacing true big integer bi new big integer spaces spacing set before bi\n", "comment": "specifies the spacing that should be added above the first line in this\n"}
{"id": "9295174", "raw_code": "    public int getSpacingBefore() {\n        CTSpacing spacing = getCTSpacing(false);\n        return (spacing != null && spacing.isSetBefore()) ? spacing.getBefore().intValue() : -1;\n    }\n", "raw_comment": "    /**\n     * Specifies the spacing that should be added above the first line in this\n     * paragraph in the document in absolute units.\n     *\n     * @return the spacing that should be added above the first line\n     * @see #setSpacingBefore(int)\n     */\n", "code": "public int get spacing before ctspacing spacing get ctspacing false return spacing null spacing is set before spacing get before int value 1\n", "comment": "specifies the spacing that should be added above the first line in this\n"}
{"id": "9295176", "raw_code": "    public void setSpacingBeforeLines(int spaces) {\n        CTSpacing spacing = getCTSpacing(true);\n        BigInteger bi = new BigInteger(\"\" + spaces);\n        spacing.setBeforeLines(bi);\n    }\n", "raw_comment": "    /**\n     * Specifies the spacing that should be added before the first line in this\n     * paragraph in the document in line units. <b> The value of this attribute\n     * is specified in one hundredths of a line. </b>\n     * <p/>\n     * If the beforeAutoSpacing attribute is also specified, then this attribute\n     * value is ignored. If this setting is never specified in the style\n     * hierarchy, then its value shall be zero.\n     * </p>\n     *\n     * @param spaces\n     */\n", "code": "public void set spacing before lines int spaces ctspacing spacing get ctspacing true big integer bi new big integer spaces spacing set before lines bi\n", "comment": "specifies the spacing that should be added before the first line in this\n"}
{"id": "9295198", "raw_code": "    public void setSpacingLineRule(LineSpacingRule rule) {\n        CTSpacing spacing = getCTSpacing(true);\n        spacing.setLineRule(STLineSpacingRule.Enum.forInt(rule.getValue()));\n    }\n", "raw_comment": "    /**\n     * Specifies how the spacing between lines is calculated as stored in the\n     * line attribute. If this attribute is omitted, then it shall be assumed to\n     * be of a value auto if a line attribute value is present.\n     *\n     * @param rule\n     * @see LineSpacingRule\n     */\n", "code": "public void set spacing line rule line spacing rule rule ctspacing spacing get ctspacing true spacing set line rule stline spacing rule enum for int rule get value\n", "comment": "specifies how the spacing between lines is calculated as stored in the\n"}
{"id": "9295199", "raw_code": "    public LineSpacingRule getSpacingLineRule() {\n        CTSpacing spacing = getCTSpacing(false);\n        return (spacing != null && spacing.isSetLineRule()) ? LineSpacingRule.valueOf(spacing\n                .getLineRule().intValue()) : LineSpacingRule.AUTO;\n    }\n", "raw_comment": "    /**\n     * Specifies how the spacing between lines is calculated as stored in the\n     * line attribute. If this attribute is omitted, then it shall be assumed to\n     * be of a value auto if a line attribute value is present.\n     *\n     * @return rule\n     * @see LineSpacingRule\n     * @see #setSpacingLineRule(LineSpacingRule)\n     */\n", "code": "public line spacing rule get spacing line rule ctspacing spacing get ctspacing false return spacing null spacing is set line rule line spacing rule value of spacing get line rule int value line spacing rule auto\n", "comment": "specifies how the spacing between lines is calculated as stored in the\n"}
{"id": "9295201", "raw_code": "    public void setIndentationLeft(int indentation) {\n        CTInd indent = getCTInd(true);\n        BigInteger bi = new BigInteger(\"\" + indentation);\n        indent.setLeft(bi);\n    }\n", "raw_comment": "    /**\n     * Specifies the indentation which shall be placed between the left text\n     * margin for this paragraph and the left edge of that paragraph's content\n     * in a left to right paragraph, and the right text margin and the right\n     * edge of that paragraph's text in a right to left paragraph\n     * <p/>\n     * If this attribute is omitted, its value shall be assumed to be zero.\n     * Negative values are defined such that the text is moved past the text margin,\n     * positive values move the text inside the text margin.\n     * </p>\n     *\n     * @param indentation\n     */\n", "code": "public void set indentation left int indentation ctind indent get ctind true big integer bi new big integer indentation indent set left bi\n", "comment": "specifies the indentation which shall be placed between the left text\n"}
{"id": "9295202", "raw_code": "    public int getIndentationLeft() {\n        CTInd indentation = getCTInd(false);\n        return (indentation != null && indentation.isSetLeft()) ? indentation.getLeft().intValue()\n                : -1;\n    }\n", "raw_comment": "    /**\n     * Specifies the indentation which shall be placed between the left text\n     * margin for this paragraph and the left edge of that paragraph's content\n     * in a left to right paragraph, and the right text margin and the right\n     * edge of that paragraph's text in a right to left paragraph\n     * <p/>\n     * If this attribute is omitted, its value shall be assumed to be zero.\n     * Negative values are defined such that the text is moved past the text margin,\n     * positive values move the text inside the text margin.\n     * </p>\n     *\n     * @return indentation or null if indentation is not set\n     */\n", "code": "public int get indentation left ctind indentation get ctind false return indentation null indentation is set left indentation get left int value 1\n", "comment": "specifies the indentation which shall be placed between the left text\n"}
{"id": "9295208", "raw_code": "    public void setIndentationRight(int indentation) {\n        CTInd indent = getCTInd(true);\n        BigInteger bi = new BigInteger(\"\" + indentation);\n        indent.setRight(bi);\n    }\n", "raw_comment": "    /**\n     * Specifies the indentation which shall be placed between the right text\n     * margin for this paragraph and the right edge of that paragraph's content\n     * in a left to right paragraph, and the right text margin and the right\n     * edge of that paragraph's text in a right to left paragraph\n     * <p/>\n     * If this attribute is omitted, its value shall be assumed to be zero.\n     * Negative values are defined such that the text is moved past the text margin,\n     * positive values move the text inside the text margin.\n     * </p>\n     *\n     * @param indentation\n     */\n", "code": "public void set indentation right int indentation ctind indent get ctind true big integer bi new big integer indentation indent set right bi\n", "comment": "specifies the indentation which shall be placed between the right text\n"}
{"id": "9295221", "raw_code": "    public int getIndentationHanging() {\n        CTInd indentation = getCTInd(false);\n        return (indentation != null && indentation.isSetHanging()) ? indentation.getHanging().intValue() : -1;\n    }\n", "raw_comment": "    /**\n     * Specifies the indentation which shall be removed from the first line of\n     * the parent paragraph, by moving the indentation on the first line back\n     * towards the beginning of the direction of text flow.\n     * This indentation is\n     * specified relative to the paragraph indentation which is specified for\n     * all other lines in the parent paragraph.\n     * The firstLine and hanging\n     * attributes are mutually exclusive, if both are specified, then the\n     * firstLine value is ignored.\n     *\n     * @return indentation or null if indentation is not set\n     */\n", "code": "public int get indentation hanging ctind indentation get ctind false return indentation null indentation is set hanging indentation get hanging int value 1\n", "comment": "specifies the indentation which shall be removed from the first line of\n"}
{"id": "9295222", "raw_code": "    public void setIndentationFirstLine(int indentation) {\n        CTInd indent = getCTInd(true);\n        BigInteger bi = new BigInteger(\"\" + indentation);\n        indent.setFirstLine(bi);\n    }\n", "raw_comment": "    /**\n     * Specifies the additional indentation which shall be applied to the first\n     * line of the parent paragraph. This additional indentation is specified\n     * relative to the paragraph indentation which is specified for all other\n     * lines in the parent paragraph.\n     * The firstLine and hanging attributes are\n     * mutually exclusive, if both are specified, then the firstLine value is\n     * ignored.\n     * If the firstLineChars attribute is also specified, then this\n     * value is ignored. If this attribute is omitted, then its value shall be\n     * assumed to be zero (if needed).\n     *\n     * @param indentation\n     */\n", "code": "public void set indentation first line int indentation ctind indent get ctind true big integer bi new big integer indentation indent set first line bi\n", "comment": "specifies the additional indentation which shall be applied to the first\n"}
{"id": "9295224", "raw_code": "    public int getIndentationFirstLine() {\n        CTInd indentation = getCTInd(false);\n        return (indentation != null && indentation.isSetFirstLine()) ? indentation.getFirstLine().intValue()\n                : -1;\n    }\n", "raw_comment": "    /**\n     * Specifies the additional indentation which shall be applied to the first\n     * line of the parent paragraph. This additional indentation is specified\n     * relative to the paragraph indentation which is specified for all other\n     * lines in the parent paragraph.\n     * The firstLine and hanging attributes are\n     * mutually exclusive, if both are specified, then the firstLine value is\n     * ignored.\n     * If the firstLineChars attribute is also specified, then this\n     * value is ignored.\n     * If this attribute is omitted, then its value shall be\n     * assumed to be zero (if needed).\n     *\n     * @return indentation or null if indentation is not set\n     */\n", "code": "public int get indentation first line ctind indentation get ctind false return indentation null indentation is set first line indentation get first line int value 1\n", "comment": "specifies the additional indentation which shall be applied to the first\n"}
{"id": "9295227", "raw_code": "    public void setWordWrap(boolean wrap) {\n        CTOnOff wordWrap = getCTPPr().isSetWordWrap() ? getCTPPr()\n                .getWordWrap() : getCTPPr().addNewWordWrap();\n        if (wrap)\n            wordWrap.setVal(STOnOff.TRUE);\n        else\n            wordWrap.unsetVal();\n    }\n", "raw_comment": "    /**\n     * This element specifies whether a consumer shall break Latin text which\n     * exceeds the text extents of a line by breaking the word across two lines\n     * (breaking on the character level) or by moving the word to the following\n     * line (breaking on the word level).\n     *\n     * @param wrap - boolean\n     */\n", "code": "public void set word wrap boolean wrap cton off word wrap get ctppr is set word wrap get ctppr get word wrap get ctppr add new word wrap if wrap word wrap set val ston off true else word wrap unset val\n", "comment": "this element specifies whether a consumer shall break latin text which\n"}
{"id": "9295229", "raw_code": "    public boolean isWordWrap() {\n        CTOnOff wordWrap = getCTPPr().isSetWordWrap() ? getCTPPr()\n                .getWordWrap() : null;\n        if (wordWrap != null) {\n            return (wordWrap.getVal() == STOnOff.ON\n                    || wordWrap.getVal() == STOnOff.TRUE || wordWrap.getVal() == STOnOff.X_1) ? true\n                    : false;\n        }\n        return false;\n    }\n", "raw_comment": "    /**\n     * This element specifies whether a consumer shall break Latin text which\n     * exceeds the text extents of a line by breaking the word across two lines\n     * (breaking on the character level) or by moving the word to the following\n     * line (breaking on the word level).\n     *\n     * @return boolean\n     */\n", "code": "public boolean is word wrap cton off word wrap get ctppr is set word wrap get ctppr get word wrap null if word wrap null return word wrap get val ston off on word wrap get val ston off true word wrap get val ston off x 1 true false return false\n", "comment": "this element specifies whether a consumer shall break latin text which\n"}
{"id": "9295232", "raw_code": "    public void setStyle(String newStyle) {\n    \tCTPPr pr = getCTPPr();\n    \tCTString style = pr.getPStyle() != null ? pr.getPStyle() : pr.addNewPStyle();\n    \tstyle.setVal(newStyle);\n    }\n", "raw_comment": "    /**\n     * This method provides a style to the paragraph\n     * This is useful when, e.g. an Heading style has to be assigned\n     * @param newStyle\n     */\n", "code": "public void set style string new style ctppr pr get ctppr ctstring style pr get pstyle null pr get pstyle pr add new pstyle style set val new style\n", "comment": "this method provides a style to the paragraph\n"}
{"id": "9295236", "raw_code": "    public String getStyle() {\n    \tCTPPr pr = getCTPPr();\n    \tCTString style = pr.isSetPStyle() ? pr.getPStyle() : null;\n    \treturn style != null ? style.getVal() : null;\n    }\n", "raw_comment": "    /**\n     * Gets the style of the paragraph\n     * @return\n     */\n", "code": "public string get style ctppr pr get ctppr ctstring style pr is set pstyle pr get pstyle null return style null style get val null\n", "comment": "gets the style of the paragraph\n"}
{"id": "49854474", "raw_code": "    public String getServletInfo() {\n        return \"Servlet for a Group page request\";\n    }\n", "raw_comment": "    /** \n    * Returns a short description of the servlet.\n    */\n", "code": "public string get servlet info return servlet for a group page request\n", "comment": "returns a short description of the servlet\n"}
{"id": "49854495", "raw_code": "    public String getServletInfo() {\n        return \"Servlet that handles course news group requests\";\n    }\n", "raw_comment": "    /** \n    * Returns a short description of the servlet.\n    */\n", "code": "public string get servlet info return servlet that handles course news group requests\n", "comment": "returns a short description of the servlet\n"}
{"id": "31124348", "raw_code": "    public void setNext(BodyFilter f) {\n        next = f;\n    }\n", "raw_comment": "    /**\n     * Store the next filter in the pipeline.\n     *\n     * @param f a BodyFilter that is next in the pipeline\n     */\n", "code": "public void set next body filter f next f\n", "comment": "store the next filter in the pipeline\n"}
{"id": "31124349", "raw_code": "    public boolean shouldApply(EntityHeader header) {\n        this.header = header;\n        return true;\n    }\n", "raw_comment": "    /**\n     * Determine if this filter should be applied to a specific request. This implementation always returns true.\n     *\n     * @param header a EntityHeader representing the request\n     * @return true\n     */\n", "code": "public boolean should apply entity header header this header header return true\n", "comment": "determine if this filter should be applied to a specific request\n"}
{"id": "31124351", "raw_code": "    public void registerEndCallback(PipelineHandler handler, EntityHeader eh) {\n        this.handler = handler;\n    }\n", "raw_comment": "    /**\n     * Store the handler to call when end of stream is reached.\n     *\n     * @param handler a PipelineHandler to store\n     * @param eh a EntityHeader representing the request (ignored)\n     */\n", "code": "public void register end callback pipeline handler handler entity header eh this handler handler\n", "comment": "store the handler to call when end of stream is reached\n"}
{"id": "31124355", "raw_code": "    public void setInput(InputStream input) {\n    }\n", "raw_comment": "    /**\n     * This implementation does not read from input, so this method does nothing.\n     *\n     * @param input a InputStream to read from\n     */\n", "code": "public void set input input stream input\n", "comment": "this implementation does not read from input so this method does nothing\n"}
{"id": "31124356", "raw_code": "    public void setOutput(OutputStream output) {\n        outStream = output;\n    }\n", "raw_comment": "    /**\n     * Store a stream to use for output\n     *\n     * @param output a OutputStream to store\n     */\n", "code": "public void set output output stream output out stream output\n", "comment": "store a stream to use for output\n"}
{"id": "31124357", "raw_code": "    public void endReached(EntityHeader eh, Exception e) {\n        next = null;\n        header = null;\n        if (outStream != null)\n            try {\n                outStream.flush();\n                outStream = null;\n            } catch (IOException ioe) { }\n        if (handler != null) {\n            handler.endReached(eh, e);\n            handler = null;\n        } else if (e != null) {\n            // e.printStackTrace();\n        }\n    }\n", "raw_comment": "    /**\n     * This method is invoked when end of stream is reached. If handler is defined, the endReached\n     * method on it is invoked. It is important that this method always set all instance variables to null\n     * before returning, to ensure that this class is reentrant.\n     *\n     * @param eh a EntityHeader that represents the request\n     * @param e an Exception that is being propagated to the final handler. It is null when the end of stream\n     * has been reached without any errors.\n     */\n", "code": "public void end reached entity header eh exception e next null header null if out stream null try out stream flush out stream null catch ioexception ioe if handler null handler end reached eh e handler null else if e null e print stack trace\n", "comment": "this method is invoked when end of stream is reached\n"}
{"id": "31124391", "raw_code": "   public HttpReader getWebReader(String host, int port) {\n     return factory.getWebReader(host, port);\n   }\n", "raw_comment": "   /**\n    * This returns a web reader for the specified host and port.\n    *\n    * @param host a String that represents the web server.\n    * @param port a int that specifies the port on the web server.\n    * @return an HttpReader that may or may not be pre-connected to the\n    *         requested server and port, depending on whether or not\n    *         one is available in the connectedPool.\n    */\n", "code": "public http reader get web reader string host int port return factory get web reader host port\n", "comment": "this returns a web reader for the specified host and port\n"}
{"id": "4728778", "raw_code": "\tpublic int definition(int i, int j) {\n\t\t// odd numbers always belongs to the last definition,\n\t\t// numberOfTrailingZeros of odd number is 0\n\t\t// therefore i belongs to the definition maxdef - numberOfTrailingZeros(i)\n\t\t// cave at, there is an exeception for 0, numberOfTrailingZeros is 64 but we think of it as \"0\"\n\t\tint offset = Math.min(Long.numberOfTrailingZeros(i), Long.numberOfTrailingZeros(j));\n\t\treturn Math.max(0, maxDefinition - offset);\n\t}\n", "raw_comment": "\t/**\n\t * return the definition this points belongs too.\n\t * \n\t * @param i\n\t * @param j\n\t * @return\n\t */\n", "code": "public int definition int i int j odd numbers always belongs to the last definition number of trailing zeros of odd number is 0 therefore i belongs to the definition maxdef number of trailing zeros i cave at there is an exeception for 0 number of trailing zeros is 64 but we think of it as 0 int offset math min long number of trailing zeros i long number of trailing zeros j return math max 0 max definition offset\n", "comment": "return the definition this points belongs too\n"}
{"id": "4728843", "raw_code": "\tpublic void setBean(BEAN model) {\n\t\tObject old = this.bean;\n\t\tthis.bean = model;\n\t\tbind(old);\n\t\t\n\t}\n", "raw_comment": "\t/** Sets the actual bean object\n\t * \n\t * @param model\n\t */\n", "code": "public void set bean bean model object old this bean this bean model bind old\n", "comment": "sets the actual bean object\n"}
{"id": "4728857", "raw_code": "\tpublic void setPropertyName(String propertyName) {\n\t\tthis.propertyName = propertyName;\n\t\tbind(bean);\n\t}\n", "raw_comment": "\t/** attribute to bind to.\n\t * @param propertyName usual lowercased property name\n\t */\n", "code": "public void set property name string property name this property name property name bind bean\n", "comment": "attribute to bind to\n"}
{"id": "4728864", "raw_code": "\tpublic void autoScale() {\n\t\t// compute auto scale and repaint\n\t\tif (!autoScaleZ)\n\t\t\treturn;\n\t\tif (plotFunction1 && plotFunction2) {\n\t\t\tsetZMin(Math.min(z1Min, z2Min));\n\t\t\tsetZMax(Math.max(z1Max, z2Max));\n\t\t} else {\n\t\t\tif (plotFunction1) {\n\t\t\t\tsetZMin(z1Min);\n\t\t\t\tsetZMax(z1Max);\n\t\t\t}\n\t\t\tif (plotFunction2) {\n\t\t\t\tsetZMin(z2Min);\n\t\t\t\tsetZMax(z2Max);\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Autoscale based on actual values\n\t */\n", "code": "public void auto scale compute auto scale and repaint if auto scale z return if plot function1 plot function2 set zmin math min z1 min z2 min set zmax math max z1 max z2 max else if plot function1 set zmin z1 min set zmax z1 max if plot function2 set zmin z2 min set zmax z2 max\n", "comment": "autoscale based on actual values\n"}
{"id": "4728867", "raw_code": "\tpublic static synchronized double ceil(double d, int digits) {\n\t\tif (d == 0)\n\t\t\treturn d;\n\t\tlong og = (long) Math.ceil((Math.log(Math.abs(d)) / Math.log(10)));\n\t\tdouble factor = Math.pow(10, digits - og);\n\t\tdouble res = Math.ceil((d * factor)) / factor;\n\t\treturn res;\n\t}\n", "raw_comment": "\t/**\n\t * internally used to ceil values\n\t * \n\t * @param d\n\t * @param digits\n\t * @return\n\t */\n", "code": "public static synchronized double ceil double d int digits if d 0 return d long og long math ceil math log math abs d math log 10 double factor math pow 10 digits og double res math ceil d factor factor return res\n", "comment": "internally used to ceil values\n"}
{"id": "4729171", "raw_code": "\tpublic Plotter newPlotter(int calcDivisions) {\n\t\tsetCalcDivisions(calcDivisions);\n\t\treturn new PlotterImpl();\n\t}\n", "raw_comment": "\t/**\n\t * factory to get a plotter, i.e. the best way to append data to this surface model\n\t * \n\t * @param calcDivisions\n\t * @return\n\t */\n", "code": "public plotter new plotter int calc divisions set calc divisions calc divisions return new plotter impl\n", "comment": "factory to get a plotter i\n"}
{"id": "20808657", "raw_code": "            \tpublic void advanceBuffer(double newSample) {\n            \t\tif (numElements < buffer.length) {\n            \t\t\tbuffer[numElements] = newSample * newSample;\n            \t\t\trunningSum += buffer[numElements];\n            \t\t\tnumElements++;\n            \t\t}\n            \t\telse {\n            \t\t\trunningSum        -= buffer[startIndex];\n            \t\t\tbuffer[startIndex] = newSample * newSample;\n            \t\t\trunningSum        += buffer[startIndex];\n\t            \t\tstartIndex = (startIndex + 1) % buffer.length;\n            \t\t}\n            \t}\n", "raw_comment": "            \t/**\n            \t * This method moves the buffer on by one element.\n            \t * \n            \t * @param newSample The new sample for the buffer. This becomes the \n            \t * last element in the buffer. The old 'first' sample is overwritten.\n            \t */\n", "code": "public void advance buffer double new sample if num elements buffer length buffer num elements new sample new sample running sum buffer num elements num elements else running sum buffer start index buffer start index new sample new sample running sum buffer start index start index start index 1 buffer length\n", "comment": "this method moves the buffer on by one element\n"}
{"id": "20808673", "raw_code": "//            \tpublic double get(int index) {\n//            \t\treturn buffer[(startIndex + index) % buffer.length];\n//            \t}\n", "raw_comment": "            \t/**\n            \t * This method retrieves the given element from the buffer.\n            \t * \n            \t * @param index The virtual index into the buffer (from 0 to \n            \t * <code>buffer.length - 1</code>). Note: <em>There is no \n            \t * error checking done on this value</em>.\n            \t * @return The requested element.\n            \t */\n", "code": "public double get int index return buffer start index index buffer length\n", "comment": "this method retrieves the given element from the buffer\n"}
{"id": "20809910", "raw_code": "    protected boolean userSaysRevert() {\n        Toolkit.getDefaultToolkit().beep();\n        ftf.selectAll();\n        Object[] options = {\"Edit\",\n                            \"Revert\"};\n        int answer = JOptionPane.showOptionDialog(\n            SwingUtilities.getWindowAncestor(ftf),\n            \"The value must be a float between \"\n            + minimum + \" and \"\n            + maximum + \".\\n\"\n            + \"You can either continue editing \"\n            + \"or revert to the last valid value.\",\n            \"Invalid Text Entered\",\n            JOptionPane.YES_NO_OPTION,\n            JOptionPane.ERROR_MESSAGE,\n            null,\n            options,\n            options[1]);\n\t    \n        if (answer == 1) { //Revert!\n            ftf.setValue(ftf.getValue());\n\t    return true;\n        }\n\treturn false;\n    }\n", "raw_comment": "    /** \n     * Lets the user know that the text they entered is \n     * bad. Returns true if the user elects to revert to\n     * the last good value.  Otherwise, returns false, \n     * indicating that the user wants to continue editing.\n     */\n", "code": "protected boolean user says revert toolkit get default toolkit beep ftf select all object options edit revert int answer joption pane show option dialog swing utilities get window ancestor ftf the value must be a float between minimum and maximum n you can either continue editing or revert to the last valid value invalid text entered joption pane yes no option joption pane error message null options options 1 if answer 1 revert ftf set value ftf get value return true return false\n", "comment": "lets the user know that the text they entered is\n"}
{"id": "20809923", "raw_code": "    protected boolean userSaysRevert() {\n        Toolkit.getDefaultToolkit().beep();\n        ftf.selectAll();\n        Object[] options = {\"Edit\",\n                            \"Revert\"};\n        int answer = JOptionPane.showOptionDialog(\n            SwingUtilities.getWindowAncestor(ftf),\n            \"The value must be a double between \"\n            + minimum + \" and \"\n            + maximum + \".\\n\"\n            + \"You can either continue editing \"\n            + \"or revert to the last valid value.\",\n            \"Invalid Text Entered\",\n            JOptionPane.YES_NO_OPTION,\n            JOptionPane.ERROR_MESSAGE,\n            null,\n            options,\n            options[1]);\n\t    \n        if (answer == 1) { //Revert!\n            ftf.setValue(ftf.getValue());\n\t    return true;\n        }\n\treturn false;\n    }\n", "raw_comment": "    /** \n     * Lets the user know that the text they entered is \n     * bad. Returns true if the user elects to revert to\n     * the last good value.  Otherwise, returns false, \n     * indicating that the user wants to continue editing.\n     */\n", "code": "protected boolean user says revert toolkit get default toolkit beep ftf select all object options edit revert int answer joption pane show option dialog swing utilities get window ancestor ftf the value must be a double between minimum and maximum n you can either continue editing or revert to the last valid value invalid text entered joption pane yes no option joption pane error message null options options 1 if answer 1 revert ftf set value ftf get value return true return false\n", "comment": "lets the user know that the text they entered is\n"}
{"id": "20810133", "raw_code": "\tpublic void getData()\n\t{   \n\t}\n", "raw_comment": "\t/**\n\t * Optionally override in sub-classes.\n\t */\n", "code": "public void get data\n", "comment": "optionally override in sub classes\n"}
{"id": "50421347", "raw_code": "\tpublic void addNewDocument(Document newDocument) {\n\t\t// remove all documents after the current position\n\t\twhile (docs.size() - 1 > currentPosition) {\n\t\t\tdocs.removeElementAt(docs.size() - 1);\n\t\t}\n\t\t\n\t\t// limit the size\n\t\tif (docs.size() >= SIZE) {\n\t\t\tdocs.removeElementAt(0);\n\t\t\t-- currentPosition;\n\t\t}\n\t\t\n\t\tdocs.add(newDocument);\n\t\tgoToNext();\n\t}\n", "raw_comment": "\t/**\n\t *  Adds a new document to the history. The new document is displayed in the\n\t *  text pane while the previously shown document is saved in the history\n\t *  list. \n\t *  <p>\n\t *  The new document is added to the history right after the document\n\t *  in the history which was last displayed. Any documents that were placed \n\t *  in the history list after the previously displayed one, are removed from\n\t *  the history list.\n\t *  @param newDocument the new document to be shown in the text pane\n\t */\n", "code": "public void add new document document new document remove all documents after the current position while docs size 1 current position docs remove element at docs size 1 limit the size if docs size size docs remove element at 0 current position docs add new document go to next\n", "comment": "adds a new document to the history\n"}
{"id": "50421350", "raw_code": "\tpublic void goToPrevious() {\n\t\tif (currentPosition > 0) {\n\t\t\tsetDocument(--currentPosition);\n\t\t\tresetScrollPane();\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t *  Displays the previous document in the history list. If there is none, \n\t *  nothing happens\n\t */\n", "code": "public void go to previous if current position 0 set document current position reset scroll pane\n", "comment": "displays the previous document in the history list\n"}
{"id": "50421356", "raw_code": "\tprivate void bugfix() {\n\t\tElement bugfix = doc.getElement(BUGFIX_ID);\n\t\tif (bugfix == null) {\n\t\t\tElement bodyElement = findElement(doc.getDefaultRootElement(), HTML.Tag.BODY.toString());\n\t\t\ttry {\n\t\t\t\tdoc.insertAfterStart(bodyElement, \"<div id=\\\"\" + BUGFIX_ID + \"\\\"></div>\");\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tSystem.exit(1);\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t *\tchecks to see if the <code>HTMLDocument</code> contains an\n\t *\t<code>Element</code> with the string contained in BUGFIX_ID. If it does not \n\t *\texist, a &lt;DIV&gt; element with that id is inserted right after the \n\t *\t&lt;body&gt; element of the document. This is needed for a workaround for the\n\t *\tJava bug with the same id. After this, <code>addStylized()</code> will \n\t *\tinsert all the HTML just before this comment tag.\n\t *\n\t *\t@param doc the HTML document to perform this on\n\t *\n\t *\t@return the bugfix element\n\t */\n", "code": "private void bugfix element bugfix doc get element bugfix id if bugfix null element body element find element doc get default root element html tag body to string try doc insert after start body element div id bugfix id div catch exception e e print stack trace system exit 1\n", "comment": "checks to see if the code htmldocument code contains an\n"}
{"id": "50421380", "raw_code": "    public String getShortServerInfo() {\n        return shortServerInfo;\n    }\n", "raw_comment": "    /**\n     *  This returns the short information on the server, received upon\n     *  connection (for example \"miranda.org dictd 1.6.92/rf on Linux 2.2.19\").\n     *  @return String containing short info on server.\n     *  @see <a href=\"rfc2229.txt\">RFC 2229</a>, section 3.1\n     */\n", "code": "public string get short server info return short server info\n", "comment": "this returns the short information on the server received upon\n"}
{"id": "50421436", "raw_code": "        public void actionPerformed(ActionEvent e) {\n            showDefaultText();\n        }\n", "raw_comment": "        /**\n         *  Displays the default text in the status display.\n         *  @param e any <code>ActionEvent</code>\n         */\n", "code": "public void action performed action event e show default text\n", "comment": "displays the default text in the status display\n"}
{"id": "50421445", "raw_code": "\tpublic int getServerToUse() {\n\t\tString s = getProperty(SERVER_TO_USE_KEY);\n\t\tif (s != null) {\n\t\t\treturn Integer.parseInt(s) - 1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t *\tReturns the index of the server to use.\n\t *\n\t *\t@return the index of the server to use >= 0 or -1 if not set\n\t */\n", "code": "public int get server to use string s get property server to use key if s null return integer parse int s 1 else return 1\n", "comment": "returns the index of the server to use\n"}
{"id": "50421448", "raw_code": "\tpublic String getServer(int index) {\n\t\tint count = getServerCount();\n\t\tif (-1 < index && index < count) {\n\t\t\treturn getProperty(SERVER_KEY + (index + 1));\n\t\t} else {\n\t\t\tthrow new IndexOutOfBoundsException(\"Invalid index: \" + index + \". Must be 0 <= index < \" + count + \".\");\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t *\tGets the server set in the preferences. It is in a form like this:\n\t *\t\"dict.org:2628\".\n\t *\n\t *\t@param index the index of the server to return.\n\t *\t@return the server and port\n\t *\t@throws IndexOutOfBoundException if the index given is less than 0 or \n\t *\tequal or larger than number of servers stored.\n\t */\n", "code": "public string get server int index int count get server count if 1 index index count return get property server key index 1 else throw new index out of bounds exception invalid index index must be 0 index count\n", "comment": "gets the server set in the preferences\n"}
{"id": "50421452", "raw_code": "\tpublic void addServer(String server) throws IllegalArgumentException {\n\t\t// check for valid format\n\t\tint index;\n\t\tif ((index = server.indexOf(':')) != -1) {\n\t\t\ttry {\n\t\t\t\tInteger.parseInt(server.substring(index + 1));\n\t\t\t} catch (NumberFormatException e) {\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid entry: \" + server + \". Has to be in the form \\\"dict.org:2628\\\".\");\n\t\t\t}\n\t\t\t\n\t\t\tsetProperty(SERVER_KEY + (getServerCount() + 1), server);\n\t\t} else {\n\t\t\tthrow new IllegalArgumentException(\"Invalid entry: \" + server + \". Has to be in the form \\\"dict.org:2628\\\".\");\n\t\t}\n\t\t\n\t}\n", "raw_comment": "\t/**\n\t *\tAdds a new server to the list of servers. The server should be passed as\n\t *\ta string in the format \"dict.org:2628\".\n\t *\n\t *\t@param server The server to add.\n\t *\t@throws InvalidArgumentException If the string passed is not in the right format.\n\t */\n", "code": "public void add server string server throws illegal argument exception check for valid format int index if index server index of 1 try integer parse int server substring index 1 catch number format exception e throw new illegal argument exception invalid entry server has to be in the form dict org 2628 set property server key get server count 1 server else throw new illegal argument exception invalid entry server has to be in the form dict org 2628\n", "comment": "adds a new server to the list of servers\n"}
{"id": "50421453", "raw_code": "\tpublic void deleteServer(int index) {\n\t\tint count = getServerCount();\n\t\tfor (int i = 1; index + i < count; i++) {\n\t\t\tString serverEntry = getProperty(SERVER_KEY + (index + i + 1));\n\t\t\tsetProperty(SERVER_KEY + (index + i), serverEntry);\n\t\t}\n\t\tapplicationProperties.remove(SERVER_KEY + count);\n\t}\n", "raw_comment": "\t/**\n\t *\tRemoves a server entry from the preferences.\n\t *\n\t *\t@param index The index (>= 0) of the entry to remove.\n\t */\n", "code": "public void delete server int index int count get server count for int i 1 index i count i string server entry get property server key index i 1 set property server key index i server entry application properties remove server key count\n", "comment": "removes a server entry from the preferences\n"}
{"id": "50421456", "raw_code": "\tpublic String getProperty(String key) {\n\t\treturn applicationProperties.getProperty(key);\n\t}\n", "raw_comment": "\t/**\n\t *\tGets a property. Simply calls <code>getProperty(key)</code> on the \n\t *\tunderlying <code>Properties</code> object.\n\t *\n\t *\t@param key the key under which the required value has been saved\n\t *\t@return the value, or if property does not exist, null\n\t */\n", "code": "public string get property string key return application properties get property key\n", "comment": "gets a property\n"}
{"id": "50421459", "raw_code": "\tpublic Object setProperty(String key, String value) {\n\t\tpropertiesChanged = true;\n\t\treturn applicationProperties.setProperty(key, value);\n\t}\n", "raw_comment": "\t/**\n\t *\tSets a property. Simply calls <code>setProperty(key, value)</code> on \n\t *\tthe underlying <code>Properties</code> object.\n\t *\n\t *\t@param key the String to be used as key\n\t *\t@param value the value to be saved\n\t *\t@return the previous value of the specified key in this property list, \n\t *\tor null if it did not have one\n\t */\n", "code": "public object set property string key string value properties changed true return application properties set property key value\n", "comment": "sets a property\n"}
{"id": "50421464", "raw_code": "    public void apply() {\n        propertyChangeSupport.firePropertyChange(\"apply\", false, true);\n    }\n", "raw_comment": "    /**\n     *  Fires a <code>PropertyChangeEvent</code> to any \n     *  <code>PropertyChangeListener</code>s that have been added.\n     */\n", "code": "public void apply property change support fire property change apply false true\n", "comment": "fires a code property change event code to any\n"}
{"id": "50421468", "raw_code": "    public String getDatabaseShort() {\n        return databaseShort;\n    }\n", "raw_comment": "    /**\n     *  Returns the short name of the database from which the defintion was\n     *  received.\n     *  @return The short name of the database.\n     */\n", "code": "public string get database short return database short\n", "comment": "returns the short name of the database from which the defintion was\n"}
{"id": "50421469", "raw_code": "    public String getDatabaseLong() {\n        return databaseLong;\n    }\n", "raw_comment": "    /**\n     *  Gets the full name of the database from which this definition was\n     *  received.\n     *  @return The full name of the database.\n     */\n", "code": "public string get database long return database long\n", "comment": "gets the full name of the database from which this definition was\n"}
{"id": "21388076", "raw_code": "\tprivate void initialize() {\n\t\tthis.setSize(300, 200);\n\t\tthis.setContentPane(getJContentPane());\t\n\t\tthis.setTitle(\"Login\");\n\t\tthis.setLocationRelativeTo(null);\n\t\tthis.setDefaultCloseOperation(EXIT_ON_CLOSE);\n\t\tthis.centraliza();\n\t\tthis.setResizable(false);\n\t\tthis.setVisible(true);\n\t\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 300 200 this set content pane get jcontent pane this set title login this set location relative to null this set default close operation exit on close this centraliza this set resizable false this set visible true\n", "comment": "this method initializes this\n"}
{"id": "21388099", "raw_code": "\tpublic JButton getBtLogar() {\n\t\tif (btLogar == null) {\n\t\t\tbtLogar = new JButton();\n\t\t\tbtLogar.setBounds(new Rectangle(1, 130, 144, 34));\n\t\t\tbtLogar.setText(\"Logar\");\n\t\t}\n\t\treturn btLogar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btLogar\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get bt logar if bt logar null bt logar new jbutton bt logar set bounds new rectangle 1 130 144 34 bt logar set text logar return bt logar\n", "comment": "this method initializes bt logar\n"}
{"id": "21388104", "raw_code": "\tpublic JButton getBtCancelar() {\n\t\tif (btCancelar == null) {\n\t\t\tbtCancelar = new JButton();\n\t\t\tbtCancelar.setBounds(new Rectangle(148, 130, 143, 34));\n\t\t\tbtCancelar.setText(\"Cancelar\");\n\t\t}\n\t\treturn btCancelar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btCancelar\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get bt cancelar if bt cancelar null bt cancelar new jbutton bt cancelar set bounds new rectangle 148 130 143 34 bt cancelar set text cancelar return bt cancelar\n", "comment": "this method initializes bt cancelar\n"}
{"id": "21388108", "raw_code": "\tpublic JTextField getTxtLogin() {\n\t\tif (txtLogin == null) {\n\t\t\ttxtLogin = new JTextField();\n\t\t\ttxtLogin.setBounds(new Rectangle(105, 75, 132, 20));\n\t\t}\n\t\treturn txtLogin;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtLogin\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt login if txt login null txt login new jtext field txt login set bounds new rectangle 105 75 132 20 return txt login\n", "comment": "this method initializes txt login\n"}
{"id": "21388110", "raw_code": "\tpublic JPasswordField getPfSenha() {\n\t\tif (pfSenha == null) {\n\t\t\tpfSenha = new JPasswordField();\n\t\t\tpfSenha.setBounds(new Rectangle(105, 105, 132, 20));\n\t\t}\n\t\treturn pfSenha;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes pfSenha\n\t * \n\t * @return javax.swing.JPasswordField\n\t */\n", "code": "public jpassword field get pf senha if pf senha null pf senha new jpassword field pf senha set bounds new rectangle 105 105 132 20 return pf senha\n", "comment": "this method initializes pf senha\n"}
{"id": "21388129", "raw_code": "\tprivate void initialize() {\n\t\tthis.setSize(489, 303);\n\t\tthis.setContentPane(getJContentPane());\n\t\tthis.setLocationRelativeTo(null);\n\t\tthis.setTitle(\"Consultar Alunos\");\n\t\tthis.setResizable(false);\n\t\tthis.setVisible(true);\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 489 303 this set content pane get jcontent pane this set location relative to null this set title consultar alunos this set resizable false this set visible true\n", "comment": "this method initializes this\n"}
{"id": "21388130", "raw_code": "\tprivate void initialize() {\n\t\tthis.setSize(563, 405);\n\t\tthis.setContentPane(getJContentPane());\n\t\tthis.setTitle(\"Cadastro de Alunos\");\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 563 405 this set content pane get jcontent pane this set title cadastro de alunos\n", "comment": "this method initializes this\n"}
{"id": "21388135", "raw_code": "\tprivate JPanel getJContentPane() {\n\t\tif (jContentPane == null) {\n\t\t\tjContentPane = new JPanel();\n\t\t\tjContentPane.setLayout(null);\n\t\t\tjContentPane.add(getTbCadastro(), null);\n\t\t}\n\t\treturn jContentPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jContentPane\n\t * \n\t * @return javax.swing.JPanel\n\t */\n", "code": "private jpanel get jcontent pane if j content pane null j content pane new jpanel j content pane set layout null j content pane add get tb cadastro null return j content pane\n", "comment": "this method initializes j content pane\n"}
{"id": "21388140", "raw_code": "\tprivate JScrollPane getJScrollPane() {\n\t\tif (jScrollPane == null) {\n\t\t\tjScrollPane = new JScrollPane();\n\t\t\tjScrollPane.setBounds(new Rectangle(2, 60, 477, 164));\n\t\t\tjScrollPane.setViewportView(getJTable());\n\t\t}\n\t\treturn jScrollPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jScrollPane\n\t * \n\t * @return javax.swing.JScrollPane\n\t */\n", "code": "private jscroll pane get jscroll pane if j scroll pane null j scroll pane new jscroll pane j scroll pane set bounds new rectangle 2 60 477 164 j scroll pane set viewport view get jtable return j scroll pane\n", "comment": "this method initializes j scroll pane\n"}
{"id": "21388152", "raw_code": "\tprivate void initialize() {\n\n\t\tthis.setSize(640, 480);\n\t\tthis.setJMenuBar(getMbPrincipal());\n\t\tthis.setTitle(\"Principal\");\n\t\tthis.setLocationRelativeTo(null);\n\t\tthis.setResizable(false);\n\t\tthis.setVisible(true);\n\t\tthis.setExtendedState(MAXIMIZED_BOTH);\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 640 480 this set jmenu bar get mb principal this set title principal this set location relative to null this set resizable false this set visible true this set extended state maximized both\n", "comment": "this method initializes this\n"}
{"id": "21388157", "raw_code": "\tprivate JTextField getTxtMatricula() {\n\t\tif (txtMatricula == null) {\n\t\t\ttxtMatricula = new JTextField();\n\t\t\ttxtMatricula.setBounds(new Rectangle(11, 26, 60, 20));\n\t\t}\n\t\treturn txtMatricula;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtMatricula\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt matricula if txt matricula null txt matricula new jtext field txt matricula set bounds new rectangle 11 26 60 20 return txt matricula\n", "comment": "this method initializes txt matricula\n"}
{"id": "21388163", "raw_code": "\tpublic JButton getBtnSair() {\n\t\tif (btnSair == null) {\n\t\t\tbtnSair = new JButton();\n\t\t\tbtnSair.setBounds(new Rectangle(361, 229, 117, 32));\n\t\t\tbtnSair\n\t\t\t\t\t.setIcon(new ImageIcon(\n\t\t\t\t\t\t\t\"C:/Documents and Settings/Meira/Meus documentos/Downloads/famfamfam_silk_icons_v013/icons/door_in.png\"));\n\t\t\tbtnSair.setText(\"Sair\");\n\t\t}\n\t\treturn btnSair;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnSair\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get btn sair if btn sair null btn sair new jbutton btn sair set bounds new rectangle 361 229 117 32 btn sair set icon new image icon c documents and settings meira meus documentos downloads famfamfam silk icons v013 icons door in png btn sair set text sair return btn sair\n", "comment": "this method initializes btn sair\n"}
{"id": "21388164", "raw_code": "\tprivate JMenuBar getMbPrincipal() {\n\t\tif (mbPrincipal == null) {\n\t\t\tmbPrincipal = new JMenuBar();\n\t\t\tmbPrincipal.add(getMenuAluno());\n\t\t}\n\t\treturn mbPrincipal;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes mbPrincipal\n\t * \n\t * @return javax.swing.JMenuBar\n\t */\n", "code": "private jmenu bar get mb principal if mb principal null mb principal new jmenu bar mb principal add get menu aluno return mb principal\n", "comment": "this method initializes mb principal\n"}
{"id": "21388168", "raw_code": "\tprivate JMenu getMenuAluno() {\n\t\tif (menuAluno == null) {\n\t\t\tmenuAluno = new JMenu();\n\t\t\tmenuAluno.setText(\"Aluno\");\n\t\t\tmenuAluno.add(getMiCadastro());\n\t\t\tmenuAluno.add(getMiPesquisa());\n\t\t\tJSeparator separator = new JSeparator();\n\t\t\tmenuAluno.add(separator);\n\t\t\tmenuAluno.add(getMiSair());\n\t\t}\n\t\treturn menuAluno;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes menuAluno\n\t * \n\t * @return javax.swing.JMenu\n\t */\n", "code": "private jmenu get menu aluno if menu aluno null menu aluno new jmenu menu aluno set text aluno menu aluno add get mi cadastro menu aluno add get mi pesquisa jseparator separator new jseparator menu aluno add separator menu aluno add get mi sair return menu aluno\n", "comment": "this method initializes menu aluno\n"}
{"id": "21388169", "raw_code": "\tpublic JComboBox getCbPesquisa() {\n\t\tif (cbPesquisa == null) {\n\t\t\tcbPesquisa = new JComboBox();\n\t\t\tcbPesquisa.addItem(\"CPF\");\n\t\t\tcbPesquisa.addItem(\"Nome\");\n\t\t\tcbPesquisa.addItem(\"Vencimento\");\n\t\t\tcbPesquisa.setBounds(new Rectangle(103, 16, 115, 20));\n\t\t}\n\t\treturn cbPesquisa;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes cbPesquisa\n\t * \n\t * @return javax.swing.JComboBox\n\t */\n", "code": "public jcombo box get cb pesquisa if cb pesquisa null cb pesquisa new jcombo box cb pesquisa add item cpf cb pesquisa add item nome cb pesquisa add item vencimento cb pesquisa set bounds new rectangle 103 16 115 20 return cb pesquisa\n", "comment": "this method initializes cb pesquisa\n"}
{"id": "21388170", "raw_code": "\tprivate void initialize() {\n\t\tthis.setSize(569, 425);\n\t\tthis.setContentPane(getJContentPane());\n\t\tthis.setLocationRelativeTo(null);\n\t\tthis.setResizable(false);\n\t\tthis.setTitle(\"Cadastro de Alunos\");\n\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 569 425 this set content pane get jcontent pane this set location relative to null this set resizable false this set title cadastro de alunos\n", "comment": "this method initializes this\n"}
{"id": "21388171", "raw_code": "\tprivate JTextField getTxtNome() {\n\t\tif (txtNome == null) {\n\t\t\ttxtNome = new JTextField();\n\t\t\ttxtNome.setBounds(new Rectangle(89, 26, 220, 20));\n\t\t}\n\t\treturn txtNome;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtNome\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt nome if txt nome null txt nome new jtext field txt nome set bounds new rectangle 89 26 220 20 return txt nome\n", "comment": "this method initializes txt nome\n"}
{"id": "21388174", "raw_code": "\tpublic JMenuItem getMiCadastro() {\n\t\tif (miCadastro == null) {\n\t\t\tmiCadastro = new JMenuItem();\n\t\t\tmiCadastro.setText(\"Cadastro de Alunos\");\n\t\t}\n\t\treturn miCadastro;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes miCadastro\n\t * \n\t * @return javax.swing.JMenuItem\n\t */\n", "code": "public jmenu item get mi cadastro if mi cadastro null mi cadastro new jmenu item mi cadastro set text cadastro de alunos return mi cadastro\n", "comment": "this method initializes mi cadastro\n"}
{"id": "21388176", "raw_code": "\tpublic JTextField getTxtDescricao() {\n\t\tif (txtDescricao == null) {\n\t\t\ttxtDescricao = new JTextField();\n\t\t\ttxtDescricao.setBounds(new Rectangle(306, 16, 169, 20));\n\t\t}\n\t\treturn txtDescricao;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtDescricao\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt descricao if txt descricao null txt descricao new jtext field txt descricao set bounds new rectangle 306 16 169 20 return txt descricao\n", "comment": "this method initializes txt descricao\n"}
{"id": "21388177", "raw_code": "\tpublic JMenuItem getMiPesquisa() {\n\t\tif (miPesquisa == null) {\n\t\t\tmiPesquisa = new JMenuItem();\n\t\t\tmiPesquisa.setText(\"Pesquisa de Alunos\");\n\t\t}\n\t\treturn miPesquisa;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes miPesquisa\n\t * \n\t * @return javax.swing.JMenuItem\n\t */\n", "code": "public jmenu item get mi pesquisa if mi pesquisa null mi pesquisa new jmenu item mi pesquisa set text pesquisa de alunos return mi pesquisa\n", "comment": "this method initializes mi pesquisa\n"}
{"id": "21388180", "raw_code": "\tpublic JMenuItem getMiSair() {\n\t\tif (miSair == null) {\n\t\t\tmiSair = new JMenuItem();\n\t\t\tmiSair.setText(\"Sair\");\n\t\t}\n\t\treturn miSair;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes miSair\n\t * \n\t * @return javax.swing.JMenuItem\n\t */\n", "code": "public jmenu item get mi sair if mi sair null mi sair new jmenu item mi sair set text sair return mi sair\n", "comment": "this method initializes mi sair\n"}
{"id": "21388181", "raw_code": "\tpublic JButton getBtnSelecionar() {\n\t\tif (btnSelecionar == null) {\n\t\t\tbtnSelecionar = new JButton();\n\t\t\tbtnSelecionar.setBounds(new Rectangle(3, 229, 117, 32));\n\t\t\tbtnSelecionar.setText(\"Selecionar\");\n\t\t\tbtnSelecionar\n\t\t\t\t\t.setIcon(new ImageIcon(\n\t\t\t\t\t\t\t\"C:/Documents and Settings/Meira/Meus documentos/Downloads/famfamfam_silk_icons_v013/icons/accept.png\"));\n\t\t}\n\t\treturn btnSelecionar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnSelecionar\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get btn selecionar if btn selecionar null btn selecionar new jbutton btn selecionar set bounds new rectangle 3 229 117 32 btn selecionar set text selecionar btn selecionar set icon new image icon c documents and settings meira meus documentos downloads famfamfam silk icons v013 icons accept png return btn selecionar\n", "comment": "this method initializes btn selecionar\n"}
{"id": "21388182", "raw_code": "\tprivate JTextField getTxtNascimento() {\n\t\tif (txtNascimento == null) {\n\t\t\ttxtNascimento = new JTextField();\n\t\t\ttxtNascimento.setBounds(new Rectangle(330, 26, 75, 20));\n\t\t}\n\t\treturn txtNascimento;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtNascimento\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt nascimento if txt nascimento null txt nascimento new jtext field txt nascimento set bounds new rectangle 330 26 75 20 return txt nascimento\n", "comment": "this method initializes txt nascimento\n"}
{"id": "21388185", "raw_code": "\tprivate JComboBox getCbSexo() {\n\t\tif (cbSexo == null) {\n\t\t\tcbSexo = new JComboBox();\n\t\t\tcbSexo.addItem(\"\");\n\t\t\tcbSexo.addItem(\"Feminino\");\n\t\t\tcbSexo.addItem(\"Masculino\");\n\t\t\tcbSexo.setBounds(new Rectangle(424, 26, 109, 20));\n\t\t}\n\t\treturn cbSexo;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes cbSexo\t\n\t * \t\n\t * @return javax.swing.JComboBox\t\n\t */\n", "code": "private jcombo box get cb sexo if cb sexo null cb sexo new jcombo box cb sexo add item cb sexo add item feminino cb sexo add item masculino cb sexo set bounds new rectangle 424 26 109 20 return cb sexo\n", "comment": "this method initializes cb sexo\n"}
{"id": "21388189", "raw_code": "\tprivate JTextField getTxtRua() {\n\t\tif (txtRua == null) {\n\t\t\ttxtRua = new JTextField();\n\t\t\ttxtRua.setBounds(new Rectangle(12, 67, 231, 20));\n\t\t}\n\t\treturn txtRua;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtRua\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt rua if txt rua null txt rua new jtext field txt rua set bounds new rectangle 12 67 231 20 return txt rua\n", "comment": "this method initializes txt rua\n"}
{"id": "21388192", "raw_code": "\tprivate JTextField getTxtBairro() {\n\t\tif (txtBairro == null) {\n\t\t\ttxtBairro = new JTextField();\n\t\t\ttxtBairro.setBounds(new Rectangle(331, 67, 76, 20));\n\t\t}\n\t\treturn txtBairro;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtBairro\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt bairro if txt bairro null txt bairro new jtext field txt bairro set bounds new rectangle 331 67 76 20 return txt bairro\n", "comment": "this method initializes txt bairro\n"}
{"id": "21388204", "raw_code": "\tprivate JTextField getTxtCidade() {\n\t\tif (txtCidade == null) {\n\t\t\ttxtCidade = new JTextField();\n\t\t\ttxtCidade.setBounds(new Rectangle(426, 67, 110, 20));\n\t\t}\n\t\treturn txtCidade;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtCidade\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt cidade if txt cidade null txt cidade new jtext field txt cidade set bounds new rectangle 426 67 110 20 return txt cidade\n", "comment": "this method initializes txt cidade\n"}
{"id": "21388219", "raw_code": "\tprivate JTextField getTxtNumero() {\n\t\tif (txtNumero == null) {\n\t\t\ttxtNumero = new JTextField();\n\t\t\ttxtNumero.setBounds(new Rectangle(262, 67, 47, 20));\n\t\t}\n\t\treturn txtNumero;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtNumero\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt numero if txt numero null txt numero new jtext field txt numero set bounds new rectangle 262 67 47 20 return txt numero\n", "comment": "this method initializes txt numero\n"}
{"id": "21388232", "raw_code": "\tprivate JTextField getTxtZonaAlvo() {\n\t\tif (txtZonaAlvo == null) {\n\t\t\ttxtZonaAlvo = new JTextField();\n\t\t\ttxtZonaAlvo.setBounds(new Rectangle(13, 107, 100, 20));\n\t\t}\n\t\treturn txtZonaAlvo;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtZonaAlvo\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt zona alvo if txt zona alvo null txt zona alvo new jtext field txt zona alvo set bounds new rectangle 13 107 100 20 return txt zona alvo\n", "comment": "this method initializes txt zona alvo\n"}
{"id": "21388245", "raw_code": "\tprivate JComboBox getCbModalidade() {\n\t\tif (cbModalidade == null) {\n\t\t\tcbModalidade = new JComboBox();\n\t\t\tcbModalidade.setBounds(new Rectangle(129, 107, 113, 19));\n\t\t}\n\t\treturn cbModalidade;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes cbModalidade\t\n\t * \t\n\t * @return javax.swing.JComboBox\t\n\t */\n", "code": "private jcombo box get cb modalidade if cb modalidade null cb modalidade new jcombo box cb modalidade set bounds new rectangle 129 107 113 19 return cb modalidade\n", "comment": "this method initializes cb modalidade\n"}
{"id": "21388254", "raw_code": "\tprivate JTextField getTxtDataInicio() {\n\t\tif (txtDataInicio == null) {\n\t\t\ttxtDataInicio = new JTextField();\n\t\t\ttxtDataInicio.setBounds(new Rectangle(262, 107, 74, 20));\n\t\t}\n\t\treturn txtDataInicio;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtDataInicio\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt data inicio if txt data inicio null txt data inicio new jtext field txt data inicio set bounds new rectangle 262 107 74 20 return txt data inicio\n", "comment": "this method initializes txt data inicio\n"}
{"id": "21388260", "raw_code": "\tpublic JTextField getTxtNome() {\n\t\tif (txtNome == null) {\n\t\t\ttxtNome = new JTextField();\n\t\t\ttxtNome.setBounds(new Rectangle(87, 28, 304, 20));\n\t\t}\n\t\treturn txtNome;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtNome\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt nome if txt nome null txt nome new jtext field txt nome set bounds new rectangle 87 28 304 20 return txt nome\n", "comment": "this method initializes txt nome\n"}
{"id": "21388262", "raw_code": "\tprivate JTable getJTable() {\n\t\tif (jTable == null) {\n\t\t\tjTable = new JTable();\n\t\t\tjTable.setBounds(new Rectangle(13, 205, 527, 81));\n\t\t}\n\t\treturn jTable;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTable\t\n\t * \t\n\t * @return javax.swing.JTable\t\n\t */\n", "code": "private jtable get jtable if j table null j table new jtable j table set bounds new rectangle 13 205 527 81 return j table\n", "comment": "this method initializes j table\n"}
{"id": "21388267", "raw_code": "\tprivate JButton getBtnNovo() {\n\t\tif (btnNovo == null) {\n\t\t\tbtnNovo = new JButton();\n\t\t\tbtnNovo.setBounds(new Rectangle(13, 146, 50, 40));\n\t\t}\n\t\treturn btnNovo;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnNovo\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get btn novo if btn novo null btn novo new jbutton btn novo set bounds new rectangle 13 146 50 40 return btn novo\n", "comment": "this method initializes btn novo\n"}
{"id": "21388272", "raw_code": "\tpublic JTextField getTxtNascimento() {\n\t\tif (txtNascimento == null) {\n\t\t\ttxtNascimento = new JTextField();\n\t\t\ttxtNascimento.setBounds(new Rectangle(87, 50, 122, 20));\n\t\t}\n\t\treturn txtNascimento;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtNascimento\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt nascimento if txt nascimento null txt nascimento new jtext field txt nascimento set bounds new rectangle 87 50 122 20 return txt nascimento\n", "comment": "this method initializes txt nascimento\n"}
{"id": "21388278", "raw_code": "\tprivate JButton getBtnExcluir() {\n\t\tif (btnExcluir == null) {\n\t\t\tbtnExcluir = new JButton();\n\t\t\tbtnExcluir.setBounds(new Rectangle(66, 146, 50, 40));\n\t\t}\n\t\treturn btnExcluir;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnExcluir\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get btn excluir if btn excluir null btn excluir new jbutton btn excluir set bounds new rectangle 66 146 50 40 return btn excluir\n", "comment": "this method initializes btn excluir\n"}
{"id": "21388286", "raw_code": "\tprivate JButton getBtnGravar() {\n\t\tif (btnGravar == null) {\n\t\t\tbtnGravar = new JButton();\n\t\t\tbtnGravar.setBounds(new Rectangle(119, 146, 50, 40));\n\t\t}\n\t\treturn btnGravar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnGravar\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get btn gravar if btn gravar null btn gravar new jbutton btn gravar set bounds new rectangle 119 146 50 40 return btn gravar\n", "comment": "this method initializes btn gravar\n"}
{"id": "21388296", "raw_code": "\tpublic JTextField getTxtCPF() {\n\t\tif (txtCPF == null) {\n\t\t\ttxtCPF = new JTextField();\n\t\t\ttxtCPF.setBounds(new Rectangle(87, 71, 122, 20));\n\t\t}\n\t\treturn txtCPF;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtCPF\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt cpf if txt cpf null txt cpf new jtext field txt cpf set bounds new rectangle 87 71 122 20 return txt cpf\n", "comment": "this method initializes txt cpf\n"}
{"id": "21388301", "raw_code": "\tprivate JTextField getTxtDiaVencimento() {\n\t\tif (txtDiaVencimento == null) {\n\t\t\ttxtDiaVencimento = new JTextField();\n\t\t\ttxtDiaVencimento.setBounds(new Rectangle(351, 107, 55, 20));\n\t\t}\n\t\treturn txtDiaVencimento;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtDiaVencimento\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get txt dia vencimento if txt dia vencimento null txt dia vencimento new jtext field txt dia vencimento set bounds new rectangle 351 107 55 20 return txt dia vencimento\n", "comment": "this method initializes txt dia vencimento\n"}
{"id": "21388319", "raw_code": "\tprivate JButton getBtnAtualizar() {\n\t\tif (btnAtualizar == null) {\n\t\t\tbtnAtualizar = new JButton();\n\t\t\tbtnAtualizar.setBounds(new Rectangle(172, 146, 50, 40));\n\t\t}\n\t\treturn btnAtualizar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnAtualizar\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get btn atualizar if btn atualizar null btn atualizar new jbutton btn atualizar set bounds new rectangle 172 146 50 40 return btn atualizar\n", "comment": "this method initializes btn atualizar\n"}
{"id": "21388323", "raw_code": "\tpublic JComboBox getCbSexo() {\n\t\tif (cbSexo == null) {\n\t\t\tcbSexo = new JComboBox();\n\t\t\tcbSexo.addItem(\"Feminino\");\n\t\t\tcbSexo.addItem(\"Masculino\");\n\t\t\tcbSexo.setBounds(new Rectangle(261, 50, 130, 20));\n\t\t}\n\t\treturn cbSexo;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes cbSexo\n\t * \n\t * @return javax.swing.JComboBox\n\t */\n", "code": "public jcombo box get cb sexo if cb sexo null cb sexo new jcombo box cb sexo add item feminino cb sexo add item masculino cb sexo set bounds new rectangle 261 50 130 20 return cb sexo\n", "comment": "this method initializes cb sexo\n"}
{"id": "21388337", "raw_code": "\tprivate JButton getBtnPesquisar() {\n\t\tif (btnPesquisar == null) {\n\t\t\tbtnPesquisar = new JButton();\n\t\t\tbtnPesquisar.setBounds(new Rectangle(225, 146, 50, 40));\n\t\t}\n\t\treturn btnPesquisar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnPesquisar\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get btn pesquisar if btn pesquisar null btn pesquisar new jbutton btn pesquisar set bounds new rectangle 225 146 50 40 return btn pesquisar\n", "comment": "this method initializes btn pesquisar\n"}
{"id": "21388407", "raw_code": "\tpublic JTextField getTxtEnd() {\n\t\tif (txtEnd == null) {\n\t\t\ttxtEnd = new JTextField();\n\t\t\ttxtEnd.setBounds(new Rectangle(82, 26, 151, 20));\n\t\t}\n\t\treturn txtEnd;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtEnd\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt end if txt end null txt end new jtext field txt end set bounds new rectangle 82 26 151 20 return txt end\n", "comment": "this method initializes txt end\n"}
{"id": "21388461", "raw_code": "\tpublic JTextField getTxtBairro() {\n\t\tif (txtBairro == null) {\n\t\t\ttxtBairro = new JTextField();\n\t\t\ttxtBairro.setBounds(new Rectangle(82, 50, 151, 20));\n\t\t}\n\t\treturn txtBairro;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtBairro\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt bairro if txt bairro null txt bairro new jtext field txt bairro set bounds new rectangle 82 50 151 20 return txt bairro\n", "comment": "this method initializes txt bairro\n"}
{"id": "21388525", "raw_code": "\tpublic JTextField getTxtCidade() {\n\t\tif (txtCidade == null) {\n\t\t\ttxtCidade = new JTextField();\n\t\t\ttxtCidade.setBounds(new Rectangle(82, 73, 151, 20));\n\t\t}\n\t\treturn txtCidade;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtCidade\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt cidade if txt cidade null txt cidade new jtext field txt cidade set bounds new rectangle 82 73 151 20 return txt cidade\n", "comment": "this method initializes txt cidade\n"}
{"id": "21388607", "raw_code": "\tpublic JTextField getTxtZonaAlvo() {\n\t\tif (txtZonaAlvo == null) {\n\t\t\ttxtZonaAlvo = new JTextField();\n\t\t\ttxtZonaAlvo.setBounds(new Rectangle(90, 38, 151, 20));\n\t\t}\n\t\treturn txtZonaAlvo;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtZonaAlvo\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt zona alvo if txt zona alvo null txt zona alvo new jtext field txt zona alvo set bounds new rectangle 90 38 151 20 return txt zona alvo\n", "comment": "this method initializes txt zona alvo\n"}
{"id": "21388612", "raw_code": "\tpublic JTextField getTxtDataInicio() {\n\t\tif (txtDataInicio == null) {\n\t\t\ttxtDataInicio = new JTextField();\n\t\t\ttxtDataInicio.setBounds(new Rectangle(336, 37, 89, 20));\n\t\t}\n\t\treturn txtDataInicio;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtDataInicio\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt data inicio if txt data inicio null txt data inicio new jtext field txt data inicio set bounds new rectangle 336 37 89 20 return txt data inicio\n", "comment": "this method initializes txt data inicio\n"}
{"id": "21388615", "raw_code": "\tpublic JTextField getTxtDiaVencimento() {\n\t\tif (txtDiaVencimento == null) {\n\t\t\ttxtDiaVencimento = new JTextField();\n\t\t\ttxtDiaVencimento.setBounds(new Rectangle(336, 60, 89, 20));\n\t\t}\n\t\treturn txtDiaVencimento;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtDiaVencimento\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "public jtext field get txt dia vencimento if txt dia vencimento null txt dia vencimento new jtext field txt dia vencimento set bounds new rectangle 336 60 89 20 return txt dia vencimento\n", "comment": "this method initializes txt dia vencimento\n"}
{"id": "21388624", "raw_code": "\tpublic JButton getBtnGravar() {\n\t\tif (btnGravar == null) {\n\t\t\tbtnGravar = new JButton();\n\t\t\tbtnGravar.setBounds(new Rectangle(2, 324, 109, 28));\n\t\t\tbtnGravar\n\t\t\t\t\t.setIcon(new ImageIcon(\n\t\t\t\t\t\t\t\"C:/Documents and Settings/Meira/Meus documentos/Downloads/famfamfam_silk_icons_v013/icons/application_add.png\"));\n\t\t\tbtnGravar.setText(\"Incluir\");\n\t\t}\n\t\treturn btnGravar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnGravar\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get btn gravar if btn gravar null btn gravar new jbutton btn gravar set bounds new rectangle 2 324 109 28 btn gravar set icon new image icon c documents and settings meira meus documentos downloads famfamfam silk icons v013 icons application add png btn gravar set text incluir return btn gravar\n", "comment": "this method initializes btn gravar\n"}
{"id": "21388668", "raw_code": "\tpublic JButton getBtnLimpar() {\n\t\tif (btnLimpar == null) {\n\t\t\tbtnLimpar = new JButton();\n\t\t\tbtnLimpar.setBounds(new Rectangle(112, 324, 109, 28));\n\t\t\tbtnLimpar.setText(\"Limpar\");\n\t\t\tbtnLimpar\n\t\t\t\t\t.setIcon(new ImageIcon(\n\t\t\t\t\t\t\t\"C:/Documents and Settings/Meira/Meus documentos/Downloads/famfamfam_silk_icons_v013/icons/page_white.png\"));\n\t\t}\n\t\treturn btnLimpar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnLimpar\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get btn limpar if btn limpar null btn limpar new jbutton btn limpar set bounds new rectangle 112 324 109 28 btn limpar set text limpar btn limpar set icon new image icon c documents and settings meira meus documentos downloads famfamfam silk icons v013 icons page white png return btn limpar\n", "comment": "this method initializes btn limpar\n"}
{"id": "21388707", "raw_code": "\tpublic JButton getBtnExcluir() {\n\t\tif (btnExcluir == null) {\n\t\t\tbtnExcluir = new JButton();\n\t\t\tbtnExcluir.setBounds(new Rectangle(223, 324, 109, 28));\n\t\t\tbtnExcluir.setText(\"Excluir\");\n\t\t\tbtnExcluir\n\t\t\t\t\t.setIcon(new ImageIcon(\n\t\t\t\t\t\t\t\"C:/Documents and Settings/Meira/Meus documentos/Downloads/famfamfam_silk_icons_v013/icons/application_delete.png\"));\n\t\t}\n\t\treturn btnExcluir;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnExcluir\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get btn excluir if btn excluir null btn excluir new jbutton btn excluir set bounds new rectangle 223 324 109 28 btn excluir set text excluir btn excluir set icon new image icon c documents and settings meira meus documentos downloads famfamfam silk icons v013 icons application delete png return btn excluir\n", "comment": "this method initializes btn excluir\n"}
{"id": "21388741", "raw_code": "\tpublic JButton getBtnAtualizar() {\n\t\tif (btnAtualizar == null) {\n\t\t\tbtnAtualizar = new JButton();\n\t\t\tbtnAtualizar.setBounds(new Rectangle(334, 324, 109, 28));\n\t\t\tbtnAtualizar.setText(\"Atualizar\");\n\t\t\tbtnAtualizar\n\t\t\t\t\t.setIcon(new ImageIcon(\n\t\t\t\t\t\t\t\"C:/Documents and Settings/Meira/Meus documentos/Downloads/famfamfam_silk_icons_v013/icons/application_edit.png\"));\n\t\t}\n\t\treturn btnAtualizar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnAtualizar\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get btn atualizar if btn atualizar null btn atualizar new jbutton btn atualizar set bounds new rectangle 334 324 109 28 btn atualizar set text atualizar btn atualizar set icon new image icon c documents and settings meira meus documentos downloads famfamfam silk icons v013 icons application edit png return btn atualizar\n", "comment": "this method initializes btn atualizar\n"}
{"id": "21388779", "raw_code": "\tpublic JButton getBtnConsultar() {\n\t\tif (btnConsultar == null) {\n\t\t\tbtnConsultar = new JButton();\n\t\t\tbtnConsultar.setBounds(new Rectangle(445, 324, 109, 28));\n\t\t\tbtnConsultar.setText(\"Consultar\");\n\t\t\tbtnConsultar\n\t\t\t\t\t.setIcon(new ImageIcon(\n\t\t\t\t\t\t\t\"C:/Documents and Settings/Meira/Meus documentos/Downloads/famfamfam_silk_icons_v013/icons/find.png\"));\n\t\t}\n\t\treturn btnConsultar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes btnConsultar\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "public jbutton get btn consultar if btn consultar null btn consultar new jbutton btn consultar set bounds new rectangle 445 324 109 28 btn consultar set text consultar btn consultar set icon new image icon c documents and settings meira meus documentos downloads famfamfam silk icons v013 icons find png return btn consultar\n", "comment": "this method initializes btn consultar\n"}
{"id": "21388838", "raw_code": "\tpublic JTextField getTxtNumero() {\n\t\tif (txtNumero == null) {\n\t\t\ttxtNumero = new JTextField();\n\t\t\ttxtNumero.setBounds(new Rectangle(306, 26, 50, 20));\n\t\t}\n\t\treturn txtNumero;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtNumero\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt numero if txt numero null txt numero new jtext field txt numero set bounds new rectangle 306 26 50 20 return txt numero\n", "comment": "this method initializes txt numero\n"}
{"id": "21388877", "raw_code": "\tpublic JTextField getTxtAluno() {\n\t\tif (txtAluno == null) {\n\t\t\ttxtAluno = new JTextField();\n\t\t\ttxtAluno.setEditable(false);\n\t\t\ttxtAluno.setBounds(new Rectangle(56, 19, 283, 20));\n\t\t}\n\t\treturn txtAluno;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtAluno\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt aluno if txt aluno null txt aluno new jtext field txt aluno set editable false txt aluno set bounds new rectangle 56 19 283 20 return txt aluno\n", "comment": "this method initializes txt aluno\n"}
{"id": "21388950", "raw_code": "\tpublic JTextField getTxtPeso() {\n\t\tif (txtPeso == null) {\n\t\t\ttxtPeso = new JTextField();\n\t\t\ttxtPeso.setBounds(new Rectangle(59, 36, 36, 20));\n\t\t}\n\t\treturn txtPeso;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtPeso\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt peso if txt peso null txt peso new jtext field txt peso set bounds new rectangle 59 36 36 20 return txt peso\n", "comment": "this method initializes txt peso\n"}
{"id": "21388990", "raw_code": "\tpublic JTextField getTxtAltura() {\n\t\tif (txtAltura == null) {\n\t\t\ttxtAltura = new JTextField();\n\t\t\ttxtAltura.setBounds(new Rectangle(59, 64, 36, 20));\n\t\t}\n\t\treturn txtAltura;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtAltura\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt altura if txt altura null txt altura new jtext field txt altura set bounds new rectangle 59 64 36 20 return txt altura\n", "comment": "this method initializes txt altura\n"}
{"id": "21389035", "raw_code": "\tpublic JTextField getTxtBracoEsq() {\n\t\tif (txtBracoEsq == null) {\n\t\t\ttxtBracoEsq = new JTextField();\n\t\t\ttxtBracoEsq.setBounds(new Rectangle(205, 36, 36, 20));\n\t\t}\n\t\treturn txtBracoEsq;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtBracoEsq\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt braco esq if txt braco esq null txt braco esq new jtext field txt braco esq set bounds new rectangle 205 36 36 20 return txt braco esq\n", "comment": "this method initializes txt braco esq\n"}
{"id": "21389078", "raw_code": "\tpublic JTextField getTxtBracoDir() {\n\t\tif (txtBracoDir == null) {\n\t\t\ttxtBracoDir = new JTextField();\n\t\t\ttxtBracoDir.setBounds(new Rectangle(205, 64, 36, 20));\n\t\t}\n\t\treturn txtBracoDir;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtBracoDir\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt braco dir if txt braco dir null txt braco dir new jtext field txt braco dir set bounds new rectangle 205 64 36 20 return txt braco dir\n", "comment": "this method initializes txt braco dir\n"}
{"id": "21389124", "raw_code": "\tpublic JTextField getTxtTorax() {\n\t\tif (txtTorax == null) {\n\t\t\ttxtTorax = new JTextField();\n\t\t\ttxtTorax.setBounds(new Rectangle(305, 36, 36, 20));\n\t\t}\n\t\treturn txtTorax;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtTorax\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt torax if txt torax null txt torax new jtext field txt torax set bounds new rectangle 305 36 36 20 return txt torax\n", "comment": "this method initializes txt torax\n"}
{"id": "21389174", "raw_code": "\tpublic JTextField getTxtCintura() {\n\t\tif (txtCintura == null) {\n\t\t\ttxtCintura = new JTextField();\n\t\t\ttxtCintura.setBounds(new Rectangle(305, 64, 36, 20));\n\t\t}\n\t\treturn txtCintura;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtCintura\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt cintura if txt cintura null txt cintura new jtext field txt cintura set bounds new rectangle 305 64 36 20 return txt cintura\n", "comment": "this method initializes txt cintura\n"}
{"id": "21389230", "raw_code": "\tpublic JTextField getTxtQuadril() {\n\t\tif (txtQuadril == null) {\n\t\t\ttxtQuadril = new JTextField();\n\t\t\ttxtQuadril.setBounds(new Rectangle(305, 93, 36, 20));\n\t\t}\n\t\treturn txtQuadril;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtQuadril\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt quadril if txt quadril null txt quadril new jtext field txt quadril set bounds new rectangle 305 93 36 20 return txt quadril\n", "comment": "this method initializes txt quadril\n"}
{"id": "21389283", "raw_code": "\tpublic JTextField getTxtCoxaEsq() {\n\t\tif (txtCoxaEsq == null) {\n\t\t\ttxtCoxaEsq = new JTextField();\n\t\t\ttxtCoxaEsq.setBounds(new Rectangle(450, 36, 36, 20));\n\t\t}\n\t\treturn txtCoxaEsq;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtCoxaEsq\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt coxa esq if txt coxa esq null txt coxa esq new jtext field txt coxa esq set bounds new rectangle 450 36 36 20 return txt coxa esq\n", "comment": "this method initializes txt coxa esq\n"}
{"id": "21389329", "raw_code": "\tpublic JTextField getTxtCoxaDir() {\n\t\tif (txtCoxaDir == null) {\n\t\t\ttxtCoxaDir = new JTextField();\n\t\t\ttxtCoxaDir.setBounds(new Rectangle(450, 64, 36, 20));\n\t\t}\n\t\treturn txtCoxaDir;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtCoxaDir\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt coxa dir if txt coxa dir null txt coxa dir new jtext field txt coxa dir set bounds new rectangle 450 64 36 20 return txt coxa dir\n", "comment": "this method initializes txt coxa dir\n"}
{"id": "21389387", "raw_code": "\tpublic JTextField getTxtPantuDir() {\n\t\tif (txtPantuDir == null) {\n\t\t\ttxtPantuDir = new JTextField();\n\t\t\ttxtPantuDir.setBounds(new Rectangle(142, 93, 36, 20));\n\t\t}\n\t\treturn txtPantuDir;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtPantuDir\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt pantu dir if txt pantu dir null txt pantu dir new jtext field txt pantu dir set bounds new rectangle 142 93 36 20 return txt pantu dir\n", "comment": "this method initializes txt pantu dir\n"}
{"id": "21389443", "raw_code": "\tpublic JTextField getTxtPantuEsq() {\n\t\tif (txtPantuEsq == null) {\n\t\t\ttxtPantuEsq = new JTextField();\n\t\t\ttxtPantuEsq.setBounds(new Rectangle(142, 119, 36, 20));\n\t\t}\n\t\treturn txtPantuEsq;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes txtPantuEsq\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "public jtext field get txt pantu esq if txt pantu esq null txt pantu esq new jtext field txt pantu esq set bounds new rectangle 142 119 36 20 return txt pantu esq\n", "comment": "this method initializes txt pantu esq\n"}
{"id": "21389499", "raw_code": "\tpublic JComboBox getCbModalidade() {\n\t\tif (cbModalidade == null) {\n\t\t\tcbModalidade = new JComboBox();\n\t\t\tcbModalidade.addItem(\"Muscula\ufffd\ufffdo\");\n\t\t\tcbModalidade.addItem(\"Muscula\ufffd\ufffdo + Esteira\");\n\t\t\tcbModalidade.setBounds(new Rectangle(90, 60, 151, 20));\n\t\t}\n\t\treturn cbModalidade;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes cbModalidade\t\n\t * \t\n\t * @return javax.swing.JComboBox\t\n\t */\n", "code": "public jcombo box get cb modalidade if cb modalidade null cb modalidade new jcombo box cb modalidade add item muscula o cb modalidade add item muscula o esteira cb modalidade set bounds new rectangle 90 60 151 20 return cb modalidade\n", "comment": "this method initializes cb modalidade\n"}
{"id": "4811789", "raw_code": "    private void writeFile(String filename) {\n        try {\n            Source source = new DOMSource(document);\n            File file = new File(filename);\n            Result result = new StreamResult(file);\n            \n            Transformer xformer = TransformerFactory.newInstance().newTransformer();\n            xformer.transform(source, result);\n        }\n        catch (TransformerException ex) {\n            Logger.getLogger(\"syncd\").log(Level.SEVERE, ex.getLocalizedMessage());\n        }\n    }\n", "raw_comment": "    /**\n     * Saves the XML-file\n     * @param filename\n     */\n", "code": "private void write file string filename try source source new domsource document file file new file filename result result new stream result file transformer xformer transformer factory new instance new transformer xformer transform source result catch transformer exception ex logger get logger syncd log level severe ex get localized message\n", "comment": "saves the xml file\n"}
{"id": "4811794", "raw_code": "    public Lyrics getLyrics(String xmlString) {\n        Lyrics lyrics = new Lyrics();\n        try{\n            DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n            DocumentBuilder db = dbf.newDocumentBuilder();\n            Document doc = db.parse(new InputSource(new StringReader(xmlString)));\n            parseDocument(doc, lyrics);\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n        }\n        return lyrics;\n    }\n", "raw_comment": "    /**\n     * Returns a lyricsObject from a string\n     * @param xmlString\n     * @return lyrics\n     */\n", "code": "public lyrics get lyrics string xml string lyrics lyrics new lyrics try document builder factory dbf document builder factory new instance document builder db dbf new document builder document doc db parse new input source new string reader xml string parse document doc lyrics catch exception e e print stack trace return lyrics\n", "comment": "returns a lyrics object from a string\n"}
{"id": "4811795", "raw_code": "    public Object getValueAt(int rowIndex, int columnIndex) {\n        Object value;\n        if(columnIndex == 0)\n            value = Time.parseString((long)lyrics.getSentences().get(rowIndex).getShowTime());\n        else if(columnIndex == 1)\n            value = Time.parseString((long)lyrics.getSentences().get(rowIndex).getRemoveTime());\n        else\n            value = lyrics.getSentences().get(rowIndex).getSentence();\n        return value;\n    }\n", "raw_comment": "    /**\n     * Returns the value from a given position in the table\n     * @param rowIndex\n     * @param columnIndex\n     * @return\n     */\n", "code": "public object get value at int row index int column index object value if column index 0 value time parse string long lyrics get sentences get row index get show time else if column index 1 value time parse string long lyrics get sentences get row index get remove time else value lyrics get sentences get row index get sentence return value\n", "comment": "returns the value from a given position in the table\n"}
{"id": "4811828", "raw_code": "    private Connection getConnection() throws DatabaseException{\n        Connection con = null;\n        try {\n            con = DriverManager.getConnection(CONNECTIONSTRING);\n        } catch (SQLException ex) {\n            Logger.getLogger(\"syncd\").log(Level.SEVERE, ex.getLocalizedMessage());\n            throw new DatabaseException();\n        }\n        return con;\n    }\n", "raw_comment": "    /**\n     * Returns a connectionObject to connect with the database\n     * @return connection\n     */\n", "code": "private connection get connection throws database exception connection con null try con driver manager get connection connectionstring catch sqlexception ex logger get logger syncd log level severe ex get localized message throw new database exception return con\n", "comment": "returns a connection object to connect with the database\n"}
{"id": "4811855", "raw_code": "    public void start() {\n        //mediaPlayer.getGainControl().setLevel(arg0);\n        if(mediaPlayer!=null) {\n            mediaPlayer.start();\n            song.setPlaying(true);\n            paused = false;\n        }\n        else\n            next();\n    }\n", "raw_comment": "    /**\n     * Start the player\n     */\n", "code": "public void start media player get gain control set level arg0 if media player null media player start song set playing true paused false else next\n", "comment": "start the player\n"}
{"id": "4811857", "raw_code": "    public void pause() {\n        if(mediaPlayer!=null) {\n            mediaPlayer.stop();\n            paused = true;\n        }\n    }\n", "raw_comment": "    /**\n     * Pause the player\n     */\n", "code": "public void pause if media player null media player stop paused true\n", "comment": "pause the player\n"}
{"id": "4811860", "raw_code": "    public void stop() {\n        if(mediaPlayer!=null) {\n            mediaPlayer.close();\n            song.setPlaying(false);\n            song = null;\n            mediaPlayer = null;\n            paused = false;\n            Settings.getInstance().setSyncMode(false);\n        }\n    }\n", "raw_comment": "    /**\n     * Stop the player\n     */\n", "code": "public void stop if media player null media player close song set playing false song null media player null paused false settings get instance set sync mode false\n", "comment": "stop the player\n"}
{"id": "4811873", "raw_code": "    public int getDuration() {\n        int length = 0;\n        if(song!=null)\n            length = song.getLength();\n        return length;\n    }\n", "raw_comment": "    /**\n     * Returns the length of the song\n     * @return length\n     */\n", "code": "public int get duration int length 0 if song null length song get length return length\n", "comment": "returns the length of the song\n"}
{"id": "4811876", "raw_code": "    public int getCurrentPosition() {\n        int position = 0;\n        if(mediaPlayer!=null)\n            position = (int) mediaPlayer.getMediaTime().getSeconds();\n        return position;\n    }\n", "raw_comment": "    /**\n     * Returns the current position (seconds) of the player\n     * @return position\n     */\n", "code": "public int get current position int position 0 if media player null position int media player get media time get seconds return position\n", "comment": "returns the current position seconds of the player\n"}
{"id": "4811879", "raw_code": "    public long getCurrentPositionMillis() {\n        long position = 0;\n        if(mediaPlayer!=null)\n            position = (long) mediaPlayer.getMediaTime().getNanoseconds()/1000000;\n        return Math.abs(position);\n    }\n", "raw_comment": "    /**\n     * Returns the current position (milliseconds) of the player\n     * @return position\n     */\n", "code": "public long get current position millis long position 0 if media player null position long media player get media time get nanoseconds 1000000 return math abs position\n", "comment": "returns the current position milliseconds of the player\n"}
{"id": "4811881", "raw_code": "    public void setCurrentPosition(double seconds) {\n        if(mediaPlayer!=null) {\n            Time time = new Time(seconds);\n            mediaPlayer.setMediaTime(time);\n        }\n    }\n", "raw_comment": "    /**\n     * Sets the current position of the player (seconds)\n     * @param seconds\n     */\n", "code": "public void set current position double seconds if media player null time time new time seconds media player set media time time\n", "comment": "sets the current position of the player seconds\n"}
{"id": "4811883", "raw_code": "    public void setCurrentPosition(long milliSeconds) {\n        if(mediaPlayer!=null) {\n            Time time = new Time((long)milliSeconds*1000000);\n            mediaPlayer.setMediaTime(time);\n        }\n    }\n", "raw_comment": "    /**\n     * Sets the current position of the player (milliseconds)\n     * @param milliSeconds\n     */\n", "code": "public void set current position long milli seconds if media player null time time new time long milli seconds 1000000 media player set media time time\n", "comment": "sets the current position of the player milliseconds\n"}
{"id": "4811889", "raw_code": "    public LibrarySong getCurrentSong() {\n        return song;\n    }\n", "raw_comment": "    /**\n     * Returns the current song\n     * @return song\n     */\n", "code": "public library song get current song return song\n", "comment": "returns the current song\n"}
{"id": "4811899", "raw_code": "    public int getNumberOfChannels(){\n        int numBytesPerSample = audioInputStream.getFormat().getSampleSizeInBits() / NUM_BITS_PER_BYTE;\n        return audioInputStream.getFormat().getFrameSize() / numBytesPerSample;\n    }\n", "raw_comment": "    /**\n     * Returns the number of channels from the audiofile\n     * @return numberOfChannels\n     */\n", "code": "public int get number of channels int num bytes per sample audio input stream get format get sample size in bits num bits per byte return audio input stream get format get frame size num bytes per sample\n", "comment": "returns the number of channels from the audiofile\n"}
{"id": "4811903", "raw_code": "    public double getXScaleFactor(int panelWidth){\n        return (panelWidth / ((double) samplesContainer[0].length));\n    }\n", "raw_comment": "    /**\n     * Returns the factor to scale the wave to fit on the x-axis\n     * @param panelWidth\n     * @return XScaleFactor\n     */\n", "code": "public double get xscale factor int panel width return panel width double samples container 0 length\n", "comment": "returns the factor to scale the wave to fit on the x axis\n"}
{"id": "4811905", "raw_code": "    public double getYScaleFactor(int panelHeight){\n        return (panelHeight / (biggestSample * 2 * 1.2));\n    }\n", "raw_comment": "    /**\n     * Returns the factor to scale the wave to fit on the y-axis\n     * @param panelHeight\n     * @return\n     */\n", "code": "public double get yscale factor int panel height return panel height biggest sample 2 1 2\n", "comment": "returns the factor to scale the wave to fit on the y axis\n"}
{"id": "4811909", "raw_code": "    public int getIncrement(double xScale) {\n        try {\n            int increment = (int) (samplesContainer[0].length / (samplesContainer[0].length * xScale));\n            return increment;\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return -1;\n    }\n", "raw_comment": "    /**\n     * Returns the increment to draw the wave correctly on the panel\n     * @param xScale\n     * @return increment\n     */\n", "code": "public int get increment double x scale try int increment int samples container 0 length samples container 0 length x scale return increment catch exception e e print stack trace return 1\n", "comment": "returns the increment to draw the wave correctly on the panel\n"}
{"id": "4811912", "raw_code": "    public float getLength(){\n        return (audioInputStream.getFrameLength() / audioInputStream.getFormat().getFrameRate());\n    }\n", "raw_comment": "    /**\n     * Returns the length of the audiofile\n     * @return length\n     */\n", "code": "public float get length return audio input stream get frame length audio input stream get format get frame rate\n", "comment": "returns the length of the audiofile\n"}
{"id": "4811920", "raw_code": "    public void addSentence(Sentence sentence) {\n        sentences.add(sentence);\n    }\n", "raw_comment": "    /**\n     * Add a sentence to the array of sentences\n     * @param sentence\n     */\n", "code": "public void add sentence sentence sentence sentences add sentence\n", "comment": "add a sentence to the array of sentences\n"}
{"id": "4811949", "raw_code": "    public void saveProperties() {\n        FileOutputStream out = null;\n        try {\n            out = new FileOutputStream(\"src/Settings.properties\");\n            properties.store(out, \"Application Settings\");\n            out.close();\n        } catch (FileNotFoundException ex) {\n            Logger.getLogger(\"syncd\").log(Level.SEVERE, ex.getLocalizedMessage());\n        } catch (IOException ex) {\n            Logger.getLogger(\"syncd\").log(Level.SEVERE, ex.getLocalizedMessage());\n        } finally {\n            try {\n                out.close();\n            } catch (IOException ex) {\n                Logger.getLogger(\"syncd\").log(Level.SEVERE, ex.getLocalizedMessage());\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Saves the properties\n     */\n", "code": "public void save properties file output stream out null try out new file output stream src settings properties properties store out application settings out close catch file not found exception ex logger get logger syncd log level severe ex get localized message catch ioexception ex logger get logger syncd log level severe ex get localized message finally try out close catch ioexception ex logger get logger syncd log level severe ex get localized message\n", "comment": "saves the properties\n"}
{"id": "4811999", "raw_code": "    public void calculateZoomConstants() {\n        ZOOMSTEPS = (int) ((waveformPanel.getAudioInfo().getLength() * 1000) / WaveformPanel.MIN_MILLISECONDS_PER_WIDTH);\n        zoomSlider.setMaximum(ZOOMSTEPS);\n        zoomSlider.setValue(ZOOMSTEPS/2);\n        waveformPanel.zoom(ZOOMSTEPS/2);\n    }\n", "raw_comment": "    /**\n     * Calculates the zoomconstants\n     */\n", "code": "public void calculate zoom constants zoomsteps int waveform panel get audio info get length 1000 waveform panel min milliseconds per width zoom slider set maximum zoomsteps zoom slider set value zoomsteps 2 waveform panel zoom zoomsteps 2\n", "comment": "calculates the zoomconstants\n"}
{"id": "4812055", "raw_code": "    private void loadSong() {\n        if(audioInfo == null) {\n            this.thread = new Thread(this);\n            drawLoading();\n            try {\n                thread.start();\n            } catch (Exception ex) {\n                Logger.getLogger(\"syncd\").log(Level.SEVERE, ex.getLocalizedMessage());\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * This function converts the given song (pathname) to a wav-file.\n     * This file will be loaded into a AudioInfo-object.\n     * @param song\n     */\n", "code": "private void load song if audio info null this thread new thread this draw loading try thread start catch exception ex logger get logger syncd log level severe ex get localized message\n", "comment": "this function converts the given song pathname to a wav file\n"}
{"id": "4812060", "raw_code": "    public void updateTimer() {\n       time.setText(Time.parseString(player.getCurrentPosition())+\"/\"+Time.parseString(player.getDuration()));\n       sliderUpdate = true;\n       slider.setValue(player.getCurrentPosition());\n       sliderUpdate = false;\n    }\n", "raw_comment": "    /**\n     * Update the songTimer\n     */\n", "code": "public void update timer time set text time parse string player get current position time parse string player get duration slider update true slider set value player get current position slider update false\n", "comment": "update the song timer\n"}
{"id": "4812078", "raw_code": "    public float getCurrentPosition(){\n        return currentPosition;\n    }\n", "raw_comment": "    /**\n     * Returns the current position.\n     * @return currentPosition\n     */\n", "code": "public float get current position return current position\n", "comment": "returns the current position\n"}
{"id": "4812082", "raw_code": "    public void setCurrentPosition(long position){\n        showPosition(position);\n        currentPosition = position;\n        repaint();\n    }\n", "raw_comment": "    /**\n     * The current position of the song can be set.\n     * @param position\n     */\n", "code": "public void set current position long position show position position current position position repaint\n", "comment": "the current position of the song can be set\n"}
{"id": "4812100", "raw_code": "    public void goBack() {\n        if(leftBound - MILLISECONDS_PER_WIDTH/2 >=0)\n            leftBound -= MILLISECONDS_PER_WIDTH/2;\n        else\n            leftBound = 0;\n        repaintWave();\n    }\n", "raw_comment": "    /**\n     * The previous timeframe will be shown.\n     */\n", "code": "public void go back if left bound milliseconds per width 2 0 left bound milliseconds per width 2 else left bound 0 repaint wave\n", "comment": "the previous timeframe will be shown\n"}
{"id": "4812103", "raw_code": "    public void goForward() {\n        if(leftBound + MILLISECONDS_PER_WIDTH/2 <= audioInfo.getLength()*1000)\n            leftBound += MILLISECONDS_PER_WIDTH/2;\n        else\n            leftBound = (int)audioInfo.getLength()*1000 - MILLISECONDS_PER_WIDTH/2;\n        repaintWave();\n    }\n", "raw_comment": "    /**\n     * The next timeframe will be shown.\n     */\n", "code": "public void go forward if left bound milliseconds per width 2 audio info get length 1000 left bound milliseconds per width 2 else left bound int audio info get length 1000 milliseconds per width 2 repaint wave\n", "comment": "the next timeframe will be shown\n"}
{"id": "4812107", "raw_code": "    private void repaintWave() {\n        buffer = null;\n        this.repaint();\n    }\n", "raw_comment": "    /**\n     * The wave will completely be repainted\n     */\n", "code": "private void repaint wave buffer null this repaint\n", "comment": "the wave will completely be repainted\n"}
{"id": "4812112", "raw_code": "    private void resetWave() {\n        started = false;\n        audioInfo = null;\n        thread = null;\n        wavePanel.disableButtons();\n        remove(loadingLabel);\n        removeMouseMotionListener(this);\n        removeMouseListener(this);\n        removeComponentListener(this);\n        repaintWave();\n    }\n", "raw_comment": "    /**\n     * The audioInfo object will be reset and the panel will be cleared.\n     */\n", "code": "private void reset wave started false audio info null thread null wave panel disable buttons remove loading label remove mouse motion listener this remove mouse listener this remove component listener this repaint wave\n", "comment": "the audio info object will be reset and the panel will be cleared\n"}
{"id": "4812126", "raw_code": "    public void componentResized(ComponentEvent e) {\n        repaintWave();\n    }\n", "raw_comment": "    /**\n     * When the pane resizes, the wave has to be repainted.\n     * @param e\n     */\n", "code": "public void component resized component event e repaint wave\n", "comment": "when the pane resizes the wave has to be repainted\n"}
{"id": "4812142", "raw_code": "    public void mouseClicked(MouseEvent e) {\n        if(getHoveredWord(e)==null && e.getX() >= 0 && e.getX() <= getWidth()) {\n            setCurrentPosition(leftBound + MILLISECONDS_PER_WIDTH*e.getX()/getWidth());\n            player.setCurrentPosition((long)leftBound + MILLISECONDS_PER_WIDTH*e.getX()/getWidth());\n        }\n    }\n", "raw_comment": "     /**\n     * The current position can be adjusted with the mouse.\n     * @param e\n     */\n", "code": "public void mouse clicked mouse event e if get hovered word e null e get x 0 e get x get width set current position left bound milliseconds per width e get x get width player set current position long left bound milliseconds per width e get x get width\n", "comment": "the current position can be adjusted with the mouse\n"}
{"id": "9193214", "raw_code": "\tprivate void initialize() {\n\t\tthis.setSize(448, 315);\n\t\tthis.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n\t\tthis.setContentPane(getJContentPane());\n\t\tthis.setTitle(\"Servidor de comunica\ufffd\ufffdo do Hospital\");\n\t\tthis.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tif (h != null) {\n\t\t\t\t\th.disconnect();\n\t\t\t\t\th = null;\n\t\t\t\t\tSystem.exit(0);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set size 448 315 this set default close operation javax swing window constants dispose on close this set content pane get jcontent pane this set title servidor de comunica o do hospital this add window listener new java awt event window adapter public void window closing java awt event window event e if h null h disconnect h null system exit 0\n", "comment": "this method initializes this\n"}
{"id": "9193232", "raw_code": "\tprivate JTextField getNomeHospital() {\n\t\tif (login == null) {\n\t\t\tlogin = new JTextField();\n\t\t\tlogin.setBounds(new java.awt.Rectangle(130,45,200,25));\n\t\t\tlogin.setText(\"drugdealer.hospital02\");\n\t\t}\n\t\treturn login;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get nome hospital if login null login new jtext field login set bounds new java awt rectangle 130 45 200 25 login set text drugdealer hospital02 return login\n", "comment": "this method initializes j text field\n"}
{"id": "9193235", "raw_code": "\tprivate JTextField getJTextField2() {\n\t\tif (enviar == null) {\n\t\t\tenviar = new JTextField();\n\t\t\tenviar.setBounds(new java.awt.Rectangle(227,105,196,24));\n\t\t}\n\t\treturn enviar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField2\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field2 if enviar null enviar new jtext field enviar set bounds new java awt rectangle 227 105 196 24 return enviar\n", "comment": "this method initializes j text field2\n"}
{"id": "9193244", "raw_code": "\tprivate JTextField getJTextField3() {\n\t\tif (nomeHospital == null) {\n\t\t\tnomeHospital = new JTextField();\n\t\t\tnomeHospital.setBounds(new java.awt.Rectangle(130,15,200,25));\n\t\t\tnomeHospital.setText(\"Hospital da Restaura\ufffd\ufffdo\");\n\t\t}\n\t\treturn nomeHospital;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field3 if nome hospital null nome hospital new jtext field nome hospital set bounds new java awt rectangle 130 15 200 25 nome hospital set text hospital da restaura o return nome hospital\n", "comment": "this method initializes j text field\n"}
{"id": "9193246", "raw_code": "\tprivate JTextArea getMensagensRecebidas() {\n\t\tif (mensagensRecebidas == null) {\n\t\t\tmensagensRecebidas = new JTextArea();\n\t\t\tmensagensRecebidas.setBounds(new java.awt.Rectangle(15,75,200,197));\n\t\t}\n\t\treturn mensagensRecebidas;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextArea1\t\n\t * \t\n\t * @return javax.swing.JTextArea\t\n\t */\n", "code": "private jtext area get mensagens recebidas if mensagens recebidas null mensagens recebidas new jtext area mensagens recebidas set bounds new java awt rectangle 15 75 200 197 return mensagens recebidas\n", "comment": "this method initializes j text area1\n"}
{"id": "9193249", "raw_code": "\tprivate JCheckBox getCheck() {\n\t\tif (check == null) {\n\t\t\tcheck = new JCheckBox();\n\t\t\tcheck.setBounds(new java.awt.Rectangle(228,135,182,19));\n\t\t\tcheck.setText(\"Enviar Integer\");\n\t\t}\n\t\treturn check;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes array\t\n\t * \t\n\t * @return javax.swing.JCheckBox\t\n\t */\n", "code": "private jcheck box get check if check null check new jcheck box check set bounds new java awt rectangle 228 135 182 19 check set text enviar integer return check\n", "comment": "this method initializes array\n"}
{"id": "9193253", "raw_code": "\tprivate JTextField getJTextField() {\n\t\tif (jTextField == null) {\n\t\t\tjTextField = new JTextField();\n\t\t\tjTextField.setBounds(new java.awt.Rectangle(233,191,189,27));\n\t\t\tjTextField.setText(\"drugdealer.hospital01\");\n\t\t}\n\t\treturn jTextField;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field if j text field null j text field new jtext field j text field set bounds new java awt rectangle 233 191 189 27 j text field set text drugdealer hospital01 return j text field\n", "comment": "this method initializes j text field\n"}
{"id": "9193255", "raw_code": "\tprivate JCheckBox getJCheckBox() {\n\t\tif (jCheckBox == null) {\n\t\t\tjCheckBox = new JCheckBox();\n\t\t\tjCheckBox.setBounds(new java.awt.Rectangle(232,161,119,25));\n\t\t\tjCheckBox.setText(\"Soh pra este...\");\n\t\t}\n\t\treturn jCheckBox;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jCheckBox\t\n\t * \t\n\t * @return javax.swing.JCheckBox\t\n\t */\n", "code": "private jcheck box get jcheck box if j check box null j check box new jcheck box j check box set bounds new java awt rectangle 232 161 119 25 j check box set text soh pra este return j check box\n", "comment": "this method initializes j check box\n"}
{"id": "45710372", "raw_code": "  public int addAndGetIndex(E e) {\n    Integer index = indexes.get(e);\n    if (index != null) {\n   \t return index;\n    }\n    //  Else, add\n    int newIndex = size();\n    objects.add(e);\n    indexes.put(e,newIndex); \n    return newIndex;\n  }\n", "raw_comment": "  /**\n   * Add an element to the indexer if not already present. In either case,\n   * returns the index of the given object.\n   * @param e\n   * @return\n   */\n", "code": "public int add and get index e e integer index indexes get e if index null return index else add int new index size objects add e indexes put e new index return new index\n", "comment": "add an element to the indexer if not already present\n"}
{"id": "33625713", "raw_code": "\tpublic Account getAccount(int id){\n\t\tint num;\n\t\tAccount account=null;\n\t\tIterator i=accounts.iterator();\n\t\t\n\t\twhile(i.hasNext()){\n\t\t\taccount=(Account)i.next();\n\t\t\tnum=account.getId();\n\t\t\tif ( num==id)\n\t\t\t    break;\t\t\t\n\t\t}\n\t\treturn account;\t\n\t}\t\n", "raw_comment": "\t/**\n\t * method applies find some account\t  \n\t * @return account\n\t */\t\n", "code": "public account get account int id int num account account null iterator i accounts iterator while i has next account account i next num account get id if num id break return account\n", "comment": "method applies find some account\n"}
{"id": "33625741", "raw_code": "\tprivate void output(String off, Department d) {\n\t\tSystem.out.println(off + d);\n\t\tfor (Department s: d.subdepts) {\n\t\t\toutput(off + '\\t', s);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Resursive procedure used in print() method\n\t * @param off\n\t * @param d\n\t */\n", "code": "private void output string off department d system out println off d for department s d subdepts output off t s\n", "comment": "resursive procedure used in print method\n"}
{"id": "33625742", "raw_code": "\tpublic void print() {\n\t\toutput(\"\", this);\n\t}\n", "raw_comment": "\t/**\n\t * Prints department tree starting with current one  \n\t *\n\t */\n", "code": "public void print output this\n", "comment": "prints department tree starting with current one\n"}
{"id": "33625743", "raw_code": "\tprotected Department findDept(int id, Department d) {\n\t\tfor (Department s: d.subdepts) {\n\t\t\tif (s.getId() == id)\n\t\t\t\treturn s;\n\t\t\tDepartment buf = findDept(id, s); \n\t\t\tif (buf != null)\n\t\t\t\treturn buf;\n\t\t}\t\t\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Searches for department in loaded structure\n\t * @param id\n\t * @param d Department object, used for recursive processing  \n\t * @return Department object \n\t */\n", "code": "protected department find dept int id department d for department s d subdepts if s get id id return s department buf find dept id s if buf null return buf return null\n", "comment": "searches for department in loaded structure\n"}
{"id": "33625745", "raw_code": "\tprotected void processResultSet(ResultSet rs, int parentid) throws Exception {\n\t\tint row = 0;\n\t\trs.beforeFirst();\t\t\n\t\twhile (rs.next()) {\t\t\t\n\t\t\tif (rs.getInt(\"PARENT_ID\") == parentid) {\n\t\t\t\tDepartment dept = new Department(rs.getInt(\"ID\"), rs.getString(\"NAME\"));\t\t\t\t\n\t\t\t\taddExistingSubdept(dept);\n\t\t\t\trow = rs.getRow();\t\t\t\t\n\t\t\t\tdept.processResultSet(rs, dept.id);\n\t\t\t\trs.absolute(row);\t\t\t\t\n\t\t\t}\t\t\t\t\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Recursive function that fetches children of specified department \n\t * and adds them to department structure\n\t * @param rs ResultSet from SELECT query\n\t * @param parentid\n\t * @throws Exception\n\t */\n", "code": "protected void process result set result set rs int parentid throws exception int row 0 rs before first while rs next if rs get int parent id parentid department dept new department rs get int id rs get string name add existing subdept dept row rs get row dept process result set rs dept id rs absolute row\n", "comment": "recursive function that fetches children of specified department\n"}
{"id": "33625771", "raw_code": "\tpublic void renameDept(int id, String name) throws Exception {\n\t\tif (!deptExists(id)) {\n\t\t\tthrow new ManualException(\"Department doesn't exist\");\n\t\t}\n\t\tConnection con = getConnection();\n\t\tStatement s = con.createStatement();\t\t\n\t\tString sql = \"UPDATE DEPARTMENTS \" +\n\t\t\t\t\"SET NAME = '\" +name+ \"'\" +\n\t\t\t\t\"WHERE (ID = \" +id+ \")\";\n\t\ts.executeUpdate(sql);\n\t\tfreeConnection(con);\n\t}\n", "raw_comment": "\t/**\n\t * Renames department in database. After this loadStructure() method\n\t * should be executed\n\t * @param id ID of department\n\t * @param name new department's name\n\t * @throws Exception\n\t */\n", "code": "public void rename dept int id string name throws exception if dept exists id throw new manual exception department doesn t exist connection con get connection statement s con create statement string sql update departments set name name where id id s execute update sql free connection con\n", "comment": "renames department in database\n"}
{"id": "33625772", "raw_code": "\tpublic void deleteDept(int id) throws Exception {\n\t\tif (!deptExists(id)) {\n\t\t\tthrow new ManualException(\"Department doesn't exist\");\n\t\t}\n\t\tConnection con = getConnection();\n\t\tStatement s = con.createStatement();\t\t\n\t\tString sql = \"DELETE FROM DEPARTMENTS \" +\t\t\t\t\n\t\t\t\t\"WHERE (ID = \" +id+ \")\";\n\t\ts.executeUpdate(sql);\n\t\tfreeConnection(con);\t\t\n\t}\n", "raw_comment": "\t/**\n\t * Deletes department from database. After this loadStructure() method\n\t * should be executed\n\t * @param id ID of department\n\t * @throws Exception\n\t */\n", "code": "public void delete dept int id throws exception if dept exists id throw new manual exception department doesn t exist connection con get connection statement s con create statement string sql delete from departments where id id s execute update sql free connection con\n", "comment": "deletes department from database\n"}
{"id": "33625776", "raw_code": "\tpublic boolean addDepartment(Department dept, int parentid) throws Exception {\n\t\tString sql;\n\t\tConnection con = getConnection();\t\t\n\t\tStatement s = con.createStatement();\n\t\tif (parentid != 0 && !deptExists(parentid)) {\n\t\t\tfreeConnection(con);\n\t\t\treturn false;\t\t\n\t\t}\n\t\tsql = dept.insertionSQL(parentid);\n\t\tSystem.out.println(sql);\n\t\tif (s.executeUpdate(sql) == 1) {\n\t\t\tfreeConnection(con);\t\t\n\t\t\treturn true;\n\t\t}\n\t\tfreeConnection(con);\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Inserts a department into database\n\t * @param dept department object that should be inserted\n\t * @param parentid ID of parent department \n\t * @return\n\t * @throws Exception\n\t */\n", "code": "public boolean add department department dept int parentid throws exception string sql connection con get connection statement s con create statement if parentid 0 dept exists parentid free connection con return false sql dept insertion sql parentid system out println sql if s execute update sql 1 free connection con return true free connection con return false\n", "comment": "inserts a department into database\n"}
{"id": "33625805", "raw_code": "\tprivate JFrame getJFrame() {\n\t\tif (jFrame == null) {\n\t\t\tjFrame = new JFrame();\n\t\t\tjFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\t\tjFrame.setJMenuBar(getJJMenuBar());\n\t\t\tjFrame.setSize(610, 299);\n\t\t\tjFrame.setContentPane(getJContentPane());\n\t\t\tjFrame.setTitle(\"Application\");\n\t\t}\n\t\treturn jFrame;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jFrame\n\t * \n\t * @return javax.swing.JFrame\n\t */\n", "code": "private jframe get jframe if j frame null j frame new jframe j frame set default close operation jframe exit on close j frame set jmenu bar get jjmenu bar j frame set size 610 299 j frame set content pane get jcontent pane j frame set title application return j frame\n", "comment": "this method initializes j frame\n"}
{"id": "33625871", "raw_code": "\tprivate JButton getJButton() {\n\t\tif (jButton == null) {\n\t\t\tjButton = new JButton();\n\t\t\tjButton.setBounds(new Rectangle(64, 35, 143, 28));\n\t\t\tjButton.setText(\"Load struct\");\n\t\t\tjButton.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tSystem.out.println(\"actionPerformed()\"); \n\t\t\t\t\tb = Bank.getInstance();\n\t\t\t\t\ttry {\n\t\t\t\t\t\tb.loadStruct();\n\t\t\t\t\t} catch (Exception e1) {\n\t\t\t\t\t\tSystem.out.println(\"Failed to load department structure from database\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tb.print();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton if j button null j button new jbutton j button set bounds new rectangle 64 35 143 28 j button set text load struct j button add action listener new java awt event action listener public void action performed java awt event action event e system out println action performed b bank get instance try b load struct catch exception e1 system out println failed to load department structure from database return b print return j button\n", "comment": "this method initializes j button\n"}
{"id": "33625884", "raw_code": "\tprivate JTextField getJTextField() {\n\t\tif (jTextField == null) {\n\t\t\tjTextField = new JTextField();\n\t\t\tjTextField.setBounds(new Rectangle(372, 12, 157, 20));\n\t\t}\n\t\treturn jTextField;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field if j text field null j text field new jtext field j text field set bounds new rectangle 372 12 157 20 return j text field\n", "comment": "this method initializes j text field\n"}
{"id": "33625892", "raw_code": "\tprivate JTextField getJTextField1() {\n\t\tif (jTextField1 == null) {\n\t\t\tjTextField1 = new JTextField();\n\t\t\tjTextField1.setBounds(new Rectangle(281, 64, 248, 20));\n\t\t}\n\t\treturn jTextField1;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextField1\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get jtext field1 if j text field1 null j text field1 new jtext field j text field1 set bounds new rectangle 281 64 248 20 return j text field1\n", "comment": "this method initializes j text field1\n"}
{"id": "33625898", "raw_code": "\tprivate JTextPane getJTextPane() {\n\t\tif (jTextPane == null) {\n\t\t\tjTextPane = new JTextPane();\n\t\t\tjTextPane.setBounds(new Rectangle(21, 86, 241, 57));\n\t\t\tjTextPane.setText(\"You can add departments here. Enter id of parent department or 0 if department has no parent one\");\n\t\t}\n\t\treturn jTextPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextPane\t\n\t * \t\n\t * @return javax.swing.JTextPane\t\n\t */\n", "code": "private jtext pane get jtext pane if j text pane null j text pane new jtext pane j text pane set bounds new rectangle 21 86 241 57 j text pane set text you can add departments here enter id of parent department or 0 if department has no parent one return j text pane\n", "comment": "this method initializes j text pane\n"}
{"id": "33625911", "raw_code": "\tprivate JButton getJButton4() {\n\t\tif (jButton4 == null) {\n\t\t\tjButton4 = new JButton();\n\t\t\tjButton4.setBounds(new Rectangle(283, 145, 244, 25));\n\t\t\tjButton4.setText(\"Delete department\");\n\t\t\tjButton4.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tBank.getInstance().deleteDept(\n\t\t\t\t\t\t\t\tInteger.valueOf(jTextField.getText()));\n\t\t\t\t\t\tSystem.out.println(\"Department deleted\");\n\t\t\t\t\t} catch (NumberFormatException e1) {\n\t\t\t\t\t\tSystem.out.println(\"Incorrect integer input\");\n\t\t\t\t\t} catch (ManualException e1) {\n\t\t\t\t\t\tSystem.out.println(e1);\n\t\t\t\t\t} \t\t\t\t\t\n\t\t\t\t\tcatch (Exception e1) {\n\t\t\t\t\t\tSystem.out.println(\"Error deleting department\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jButton4;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jButton4\t\n\t * \t\n\t * @return javax.swing.JButton\t\n\t */\n", "code": "private jbutton get jbutton4 if j button4 null j button4 new jbutton j button4 set bounds new rectangle 283 145 244 25 j button4 set text delete department j button4 add action listener new java awt event action listener public void action performed java awt event action event e try bank get instance delete dept integer value of j text field get text system out println department deleted catch number format exception e1 system out println incorrect integer input catch manual exception e1 system out println e1 catch exception e1 system out println error deleting department return j button4\n", "comment": "this method initializes j button4\n"}
{"id": "33625943", "raw_code": "\tpublic void init() {\n\t\t// Put your code here\n\t}\n", "raw_comment": "\t/**\n\t * Initialization of the servlet. <br>\n\t *\n\t * @throws ServletException if an error occure\n\t */\n", "code": "public void init put your code here\n", "comment": "initialization of the servlet\n"}
{"id": "7607985", "raw_code": "\tpublic void setBusinessService(BusinessService businessService) {\n\t\tthis.businessService = businessService;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the service\n\t * @param businessService the service\n\t */\n", "code": "public void set business service business service business service this business service business service\n", "comment": "sets the service\n"}
{"id": "7607986", "raw_code": "\tpublic void handleRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\tbusinessService.doSomething();\n\t}\n", "raw_comment": "\t/**\n\t * Process the given request, generating a response.\n\t *\n\t * @param request  current HTTP request\n\t * @param response current HTTP response\n\t * @throws javax.servlet.ServletException in case of general errors\n\t * @throws java.io.IOException\t\t\tin case of I/O errors\n\t */\n", "code": "public void handle request http servlet request request http servlet response response throws servlet exception ioexception business service do something\n", "comment": "process the given request generating a response\n"}
{"id": "7608084", "raw_code": "    public SayHi createSayHi() {\n        return new SayHi();\n    }\n", "raw_comment": "    /**\n     * Create an instance of {@link SayHi }\n     * \n     */\n", "code": "public say hi create say hi return new say hi\n", "comment": "create an instance of\n"}
{"id": "7608086", "raw_code": "    public SayHiResponse createSayHiResponse() {\n        return new SayHiResponse();\n    }\n", "raw_comment": "    /**\n     * Create an instance of {@link SayHiResponse }\n     * \n     */\n", "code": "public say hi response create say hi response return new say hi response\n", "comment": "create an instance of\n"}
{"id": "7608103", "raw_code": "    public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {\n        for (int i = 0; i < callbacks.length; i++) {\n            WSPasswordCallback pc = (WSPasswordCallback)callbacks[i];\n\n            String pass = passwords.get(pc.getIdentifier());\n            if (pass != null) {\n                pc.setPassword(pass);\n                return;\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * It attempts to get the password from the private \n     * alias/passwords map.\n     */\n", "code": "public void handle callback callbacks throws ioexception unsupported callback exception for int i 0 i callbacks length i wspassword callback pc wspassword callback callbacks i string pass passwords get pc get identifier if pass null pc set password pass return\n", "comment": "it attempts to get the password from the private\n"}
{"id": "7608105", "raw_code": "    public void setAliasPassword(String alias, String password) {\n        passwords.put(alias, password);\n    }\n", "raw_comment": "    /**\n     * Add an alias/password pair to the callback mechanism.\n     */\n", "code": "public void set alias password string alias string password passwords put alias password\n", "comment": "add an alias password pair to the callback mechanism\n"}
{"id": "27715109", "raw_code": "    public void changedUpdate(DocumentEvent documentEvent) {\n        // should never occur\n        System.out.println(\"!!! error UnknownOutputModule.changedUpdate() occured !!!\");\n    }\n", "raw_comment": "    /**\n     * method for DocumentListener when something changes in the Document\n     * @param documentEvent the DocumentEvent which took place\n     */\n", "code": "public void changed update document event document event should never occur system out println error unknown output module changed update occured\n", "comment": "method for document listener when something changes in the document\n"}
{"id": "27715110", "raw_code": "    public void insertUpdate(DocumentEvent documentEvent) {\n        documentChanged(documentEvent);\n    }\n", "raw_comment": "    /**\n     * method for DocumentListener when something is inserted into the Document\n     * @param documentEvent the DocumentEvent which took place\n     */\n", "code": "public void insert update document event document event document changed document event\n", "comment": "method for document listener when something is inserted into the document\n"}
{"id": "27715111", "raw_code": "    public void removeUpdate(DocumentEvent documentEvent) {\n        documentChanged(documentEvent);\n    }\n", "raw_comment": "    /**\n     * method for DocumentListener when something is removed from the Document\n     * @param documentEvent the DocumentEvent which took place\n     */\n", "code": "public void remove update document event document event document changed document event\n", "comment": "method for document listener when something is removed from the document\n"}
{"id": "27715112", "raw_code": "    private void documentChanged(DocumentEvent documentEvent) {\n        if (documentEvent.getDocument() == nameDocument) {\n            String text = outputModuleNameTextField.getText();\n            if (text.length() > 0) {\n                outputModuleName = outputModuleNameTextField.getText();\n            } else {\n                outputModuleName = SnortKonsole.messages.getString(\"<Empty>\");\n            }\n            \n            // this is a stupid outputModuleListModel.fire...() replacement\n            // (because it's protected) but hey, it works!\n            int index = outputModuleList.getSelectedIndex();\n            outputModuleListModel.set(index, outputModuleListModel.get(index));\n        }\n        \n        SnortKonsole.somethingHasChanged();\n    }\n", "raw_comment": "    /**\n     * central method when something was removed or inserted into a Document\n     * @param documentEvent the DocumentEvent which took place\n     */\n", "code": "private void document changed document event document event if document event get document name document string text output module name text field get text if text length 0 output module name output module name text field get text else output module name snort konsole messages get string empty this is a stupid output module list model fire replacement because it s protected but hey it works int index output module list get selected index output module list model set index output module list model get index snort konsole something has changed\n", "comment": "central method when something was removed or inserted into a document\n"}
{"id": "27715306", "raw_code": "    public void changedUpdate(DocumentEvent documentEvent) {\n\t// should never occur\n\tSystem.out.println(\"!!! error UnknownPreprocessor.changedUpdate() occured !!!\");\n    }\n", "raw_comment": "    /**\n     * method for DocumentListener when something changes in the Document\n     * @param documentEvent the DocumentEvent which took place\n     */\n", "code": "public void changed update document event document event should never occur system out println error unknown preprocessor changed update occured\n", "comment": "method for document listener when something changes in the document\n"}
{"id": "27715309", "raw_code": "    private void documentChanged(DocumentEvent documentEvent) {\n\tif (documentEvent.getDocument() == nameDocument) {\n\t    String text = preprocessorNameTextField.getText();\n\t    if (text.length() > 0) {\n\t\tpreprocessorName = preprocessorNameTextField.getText();\n\t    } else {\n\t\tpreprocessorName = SnortKonsole.messages.getString(\"<Empty>\");\n\t    }\n\t    \n\t    // this is a stupid preprocessorListModel.fire...() replacement\n\t    // (because it's protected) but hey, it works!\n\t    int index = preprocessorList.getSelectedIndex();\n\t    preprocessorListModel.set(index, preprocessorListModel.get(index));\n\t}\n\t\n\tSnortKonsole.somethingHasChanged();\n    }\n", "raw_comment": "    /**\n     * central method when something was removed or inserted into a Document\n     * @param documentEvent the DocumentEvent which took place\n     */\n", "code": "private void document changed document event document event if document event get document name document string text preprocessor name text field get text if text length 0 preprocessor name preprocessor name text field get text else preprocessor name snort konsole messages get string empty this is a stupid preprocessor list model fire replacement because it s protected but hey it works int index preprocessor list get selected index preprocessor list model set index preprocessor list model get index snort konsole something has changed\n", "comment": "central method when something was removed or inserted into a document\n"}
{"id": "46630752", "raw_code": "public void start( ){\n  Render.start();\n  coordinates.start();\n  selector.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start render start coordinates start selector start\n", "comment": "start the fb instances\n"}
{"id": "46630758", "raw_code": "public void stop( ){\n  Render.stop();\n  coordinates.stop();\n  selector.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop render stop coordinates stop selector stop\n", "comment": "stop the fb instances\n"}
{"id": "46630762", "raw_code": "public void alg_REQ(){\nif((VALUE.value==false)){NAME.value=\"/fb/rt/vhmi/sens0.gif\";}\nif((VALUE.value==true)){NAME.value=\"/fb/rt/vhmi/sens1.gif\";}\n}\n", "raw_comment": "  /** ALGORITHM REQ IN ST*/\n", "code": "public void alg req if value value false name value fb rt vhmi sens0 gif if value value true name value fb rt vhmi sens1 gif\n", "comment": "algorithm req in st\n"}
{"id": "46630907", "raw_code": "public void start( ){\n  Arm_sensor_1.start();\n  Arm_sensor_2.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start arm sensor 1 start arm sensor 2 start\n", "comment": "start the fb instances\n"}
{"id": "46630910", "raw_code": "public void stop( ){\n  Arm_sensor_1.stop();\n  Arm_sensor_2.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop arm sensor 1 stop arm sensor 2 stop\n", "comment": "stop the fb instances\n"}
{"id": "46630981", "raw_code": "public void alg_Move_Pist_Left(){\ninternal_rate.value = 10;\n\nOut_Pist_X.value = Temp_X.value - internal_rate.value ;\nOut_Pist_Y.value = Temp_Y.value ;\n\nPist_X_C.value = Out_Pist_X.value;\nPist_Y_C.value = Out_Pist_Y.value;\n\nTemp_X.value = Out_Pist_X.value; \nTemp_Y.value = Out_Pist_Y.value;\n}\n", "raw_comment": "  /** ALGORITHM Move_Pist_Left IN Java*/\n", "code": "public void alg move pist left internal rate value 10 out pist x value temp x value internal rate value out pist y value temp y value pist x c value out pist x value pist y c value out pist y value temp x value out pist x value temp y value out pist y value\n", "comment": "algorithm move pist left in java\n"}
{"id": "46630983", "raw_code": "public void alg_Move_Pist_Right(){\ninternal_rate.value = 10;\n\nOut_Pist_X.value = Temp_X.value + internal_rate.value ;\nOut_Pist_Y.value = Temp_Y.value ;\n\nPist_X_C.value = Out_Pist_X.value;\nPist_Y_C.value = Out_Pist_Y.value;\n\nTemp_X.value = Out_Pist_X.value; \nTemp_Y.value = Out_Pist_Y.value;\n}\n", "raw_comment": "  /** ALGORITHM Move_Pist_Right IN Java*/\n", "code": "public void alg move pist right internal rate value 10 out pist x value temp x value internal rate value out pist y value temp y value pist x c value out pist x value pist y c value out pist y value temp x value out pist x value temp y value out pist y value\n", "comment": "algorithm move pist right in java\n"}
{"id": "46630986", "raw_code": "public void alg_Stop_Temp(){\nOut_Pist_X.value = Temp_X.value;\nOut_Pist_Y.value = Temp_Y.value;\nPist_X_C.value = Temp_X.value;\nPist_Y_C.value = Temp_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Stop_Temp IN Java*/\n", "code": "public void alg stop temp out pist x value temp x value out pist y value temp y value pist x c value temp x value pist y c value temp y value\n", "comment": "algorithm stop temp in java\n"}
{"id": "46630991", "raw_code": "public void alg_Both_On_State(){\nOut_Pist_X.value = Temp_X.value;\nOut_Pist_Y.value = Temp_Y.value;\nPist_X_C.value = Temp_X.value;\nPist_Y_C.value = Temp_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Both_On_State IN Java*/\n", "code": "public void alg both on state out pist x value temp x value out pist y value temp y value pist x c value temp x value pist y c value temp y value\n", "comment": "algorithm both on state in java\n"}
{"id": "46631000", "raw_code": "public void alg_Move_Pist_Down(){\ninternal_rate.value = 10;\n\nOut_Pist_X.value = Temp_X.value ;\nOut_Pist_Y.value = Temp_Y.value - internal_rate.value ;\n\nPist_X_C.value = Out_Pist_X.value;\nPist_Y_C.value = Out_Pist_Y.value;\n\nTemp_X.value = Out_Pist_X.value; \nTemp_Y.value = Out_Pist_Y.value;\n}\n", "raw_comment": "  /** ALGORITHM Move_Pist_Down IN Java*/\n", "code": "public void alg move pist down internal rate value 10 out pist x value temp x value out pist y value temp y value internal rate value pist x c value out pist x value pist y c value out pist y value temp x value out pist x value temp y value out pist y value\n", "comment": "algorithm move pist down in java\n"}
{"id": "46631183", "raw_code": "public void alg_REQ(){\n}\n", "raw_comment": "  /** ALGORITHM REQ IN ST*/\n", "code": "public void alg req\n", "comment": "algorithm req in st\n"}
{"id": "46631186", "raw_code": "public void start( ){\n  Shell_model.start();\n  Piston_model.start();\n  Work_Piece1_Present.start();\n  Pincer.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start shell model start piston model start work piece1 present start pincer start\n", "comment": "start the fb instances\n"}
{"id": "46631189", "raw_code": "public void alg_Sensor_Activate(){\nif((Sen_X_I.value == Object_X_I.value) & (Sen_Y_I.value == Object_Y_I.value))\nON_OFF_C.value  = true;\nelse\n        ON_OFF_C.value  = false;\n\n}\n", "raw_comment": "  /** ALGORITHM Sensor_Activate IN Java*/\n", "code": "public void alg sensor activate if sen x i value object x i value sen y i value object y i value on off c value true else on off c value false\n", "comment": "algorithm sensor activate in java\n"}
{"id": "46631198", "raw_code": "public void stop( ){\n  Shell_model.stop();\n  Piston_model.stop();\n  Work_Piece1_Present.stop();\n  Pincer.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop shell model stop piston model stop work piece1 present stop pincer stop\n", "comment": "stop the fb instances\n"}
{"id": "46631210", "raw_code": "public void alg_Move_Pallet_Right(){\ninternal_rate.value = 10;\n\nOut_Pallet_X.value = Temp_X.value + internal_rate.value ;\nOut_Pallet_Y.value = Temp_Y.value ;\n\nPist_X_C.value = Out_Pallet_X.value;\nPist_Y_C.value = Out_Pallet_Y.value;\n\nTemp_X.value = Out_Pallet_X.value; \nTemp_Y.value = Out_Pallet_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Move_Pallet_Right IN Java*/\n", "code": "public void alg move pallet right internal rate value 10 out pallet x value temp x value internal rate value out pallet y value temp y value pist x c value out pallet x value pist y c value out pallet y value temp x value out pallet x value temp y value out pallet y value\n", "comment": "algorithm move pallet right in java\n"}
{"id": "46631215", "raw_code": "public void alg_Stop_Temp(){\nOut_Pallet_X.value = Temp_X.value;\nOut_Pallet_Y.value = Temp_Y.value;\nPist_X_C.value = Temp_X.value;\nPist_Y_C.value = Temp_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Stop_Temp IN Java*/\n", "code": "public void alg stop temp out pallet x value temp x value out pallet y value temp y value pist x c value temp x value pist y c value temp y value\n", "comment": "algorithm stop temp in java\n"}
{"id": "46631219", "raw_code": "public void alg_Both_On_State(){\nOut_Pallet_X.value = Temp_X.value;\nOut_Pallet_Y.value = Temp_Y.value;\nPist_X_C.value = Temp_X.value;\nPist_Y_C.value = Temp_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Both_On_State IN Java*/\n", "code": "public void alg both on state out pallet x value temp x value out pallet y value temp y value pist x c value temp x value pist y c value temp y value\n", "comment": "algorithm both on state in java\n"}
{"id": "46631229", "raw_code": "public void alg_Move_Pallet_Down(){\ninternal_rate.value = 10;\n\nOut_Pallet_X.value = Temp_X.value ;\nOut_Pallet_Y.value = Temp_Y.value - internal_rate.value ;\n\nPist_X_C.value = Out_Pallet_X.value;\nPist_Y_C.value = Out_Pallet_Y.value;\n\nTemp_X.value = Out_Pallet_X.value; \nTemp_Y.value = Out_Pallet_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Move_Pallet_Down IN Java*/\n", "code": "public void alg move pallet down internal rate value 10 out pallet x value temp x value out pallet y value temp y value internal rate value pist x c value out pallet x value pist y c value out pallet y value temp x value out pallet x value temp y value out pallet y value\n", "comment": "algorithm move pallet down in java\n"}
{"id": "46631256", "raw_code": "public void start( ){\n  Arm_sensor_1.start();\n  Arm_sensor_2.start();\n  Arm_sensor_3.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start arm sensor 1 start arm sensor 2 start arm sensor 3 start\n", "comment": "start the fb instances\n"}
{"id": "46631258", "raw_code": "public void stop( ){\n  Arm_sensor_1.stop();\n  Arm_sensor_2.stop();\n  Arm_sensor_3.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop arm sensor 1 stop arm sensor 2 stop arm sensor 3 stop\n", "comment": "stop the fb instances\n"}
{"id": "46631298", "raw_code": "public void start( ){\n  Left_pincer.start();\n  Right_pincer.start();\n  Local_Visulisation.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start left pincer start right pincer start local visulisation start\n", "comment": "start the fb instances\n"}
{"id": "46631300", "raw_code": "public void alg_Move_Object_Left(){\nif (Enable.value == true){\n\ninternal_rate.value = 10;\n\nOut_Object_X.value = Temp_X.value - Movement_Rate.value ;\nOut_Object_Y.value = Temp_Y.value ;\n\nObject_X_C.value = Out_Object_X.value;\nObject_Y_C.value = Out_Object_Y.value;\n\nTemp_X.value = Out_Object_X.value; \nTemp_Y.value = Out_Object_Y.value;\n\nOut_Enable.value = Enable.value;\n\n}\nelse{\n\nOut_Enable.value = Enable.value;\n}\n\n}\n", "raw_comment": "  /** ALGORITHM Move_Object_Left IN Java*/\n", "code": "public void alg move object left if enable value true internal rate value 10 out object x value temp x value movement rate value out object y value temp y value object x c value out object x value object y c value out object y value temp x value out object x value temp y value out object y value out enable value enable value else out enable value enable value\n", "comment": "algorithm move object left in java\n"}
{"id": "46631304", "raw_code": "public void stop( ){\n  Left_pincer.stop();\n  Right_pincer.stop();\n  Local_Visulisation.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop left pincer stop right pincer stop local visulisation stop\n", "comment": "stop the fb instances\n"}
{"id": "46631307", "raw_code": "public void alg_Move_Object_Right(){\nif (Enable.value == true){\n\ninternal_rate.value = 10;\n\nOut_Object_X.value = Temp_X.value + Movement_Rate.value ;\nOut_Object_Y.value = Temp_Y.value ;\n\nObject_X_C.value = Out_Object_X.value;\nObject_Y_C.value = Out_Object_Y.value;\n\nTemp_X.value = Out_Object_X.value; \nTemp_Y.value = Out_Object_Y.value;\n\nOut_Enable.value = Enable.value;\n\n}\nelse{\nOut_Enable.value = Enable.value;\n}\n\n}\n", "raw_comment": "  /** ALGORITHM Move_Object_Right IN Java*/\n", "code": "public void alg move object right if enable value true internal rate value 10 out object x value temp x value movement rate value out object y value temp y value object x c value out object x value object y c value out object y value temp x value out object x value temp y value out object y value out enable value enable value else out enable value enable value\n", "comment": "algorithm move object right in java\n"}
{"id": "46631311", "raw_code": "public void alg_Stop_Temp(){\nif (Enable.value == true){\nOut_Object_X.value = Temp_X.value;\nOut_Object_Y.value = Temp_Y.value;\nObject_X_C.value = Temp_X.value;\nObject_Y_C.value = Temp_Y.value;\n\nOut_Enable.value = Enable.value;\n}\n\nelse{\nOut_Enable.value = Enable.value;\n}\n\n}\n", "raw_comment": "  /** ALGORITHM Stop_Temp IN Java*/\n", "code": "public void alg stop temp if enable value true out object x value temp x value out object y value temp y value object x c value temp x value object y c value temp y value out enable value enable value else out enable value enable value\n", "comment": "algorithm stop temp in java\n"}
{"id": "46631317", "raw_code": "public void start( ){\n  Pallet_1.start();\n  Pallet_2.start();\n  Pallet_3.start();\n  Pallet_4.start();\n  Pallet_5.start();\n  Pallet_6.start();\n  Rotating_Table.start();\n  Docker.start();\n  Kicker.start();\n  Drill.start();\n  Drill_Piston.start();\n  Checker.start();\n  Checker_Piston.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start pallet 1 start pallet 2 start pallet 3 start pallet 4 start pallet 5 start pallet 6 start rotating table start docker start kicker start drill start drill piston start checker start checker piston start\n", "comment": "start the fb instances\n"}
{"id": "46631319", "raw_code": "public void alg_Both_On_State(){\nif (Enable.value == true){\n\nOut_Object_X.value = Temp_X.value;\nOut_Object_Y.value = Temp_Y.value;\nObject_X_C.value = Temp_X.value;\nObject_Y_C.value = Temp_Y.value;\n\nOut_Enable.value = Enable.value;\n}\n\nelse{\nOut_Enable.value = Enable.value;\n}\n\n}\n", "raw_comment": "  /** ALGORITHM Both_On_State IN Java*/\n", "code": "public void alg both on state if enable value true out object x value temp x value out object y value temp y value object x c value temp x value object y c value temp y value out enable value enable value else out enable value enable value\n", "comment": "algorithm both on state in java\n"}
{"id": "46631328", "raw_code": "public void stop( ){\n  Pallet_1.stop();\n  Pallet_2.stop();\n  Pallet_3.stop();\n  Pallet_4.stop();\n  Pallet_5.stop();\n  Pallet_6.stop();\n  Rotating_Table.stop();\n  Docker.stop();\n  Kicker.stop();\n  Drill.stop();\n  Drill_Piston.stop();\n  Checker.stop();\n  Checker_Piston.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop pallet 1 stop pallet 2 stop pallet 3 stop pallet 4 stop pallet 5 stop pallet 6 stop rotating table stop docker stop kicker stop drill stop drill piston stop checker stop checker piston stop\n", "comment": "stop the fb instances\n"}
{"id": "46631330", "raw_code": "public void alg_Move_Object_Down(){\nif(Enable.value == true){\n\ninternal_rate.value = 10;\n\nOut_Object_X.value = Temp_X.value ;\nOut_Object_Y.value = Temp_Y.value - Movement_Rate.value ;\n\nObject_X_C.value = Out_Object_X.value;\nObject_Y_C.value = Out_Object_Y.value;\n\nTemp_X.value = Out_Object_X.value; \nTemp_Y.value = Out_Object_Y.value;\n\nOut_Enable.value = Enable.value;\n}\nelse{\nOut_Enable.value = Enable.value;\n}\n\n}\n", "raw_comment": "  /** ALGORITHM Move_Object_Down IN Java*/\n", "code": "public void alg move object down if enable value true internal rate value 10 out object x value temp x value out object y value temp y value movement rate value object x c value out object x value object y c value out object y value temp x value out object x value temp y value out object y value out enable value enable value else out enable value enable value\n", "comment": "algorithm move object down in java\n"}
{"id": "46631451", "raw_code": "public void alg_Initialisation_Shell(){\nOut_Shell_X.value = Init_Shell_X.value;\nOut_Shell_Y.value = Init_Shell_Y.value;\n\nOut_Shell_X_C.value = Init_Shell_X.value;\nOut_Shell_Y_C.value = Init_Shell_Y.value;\n\nTemp_X.value = Init_Shell_X.value;\nTemp_Y.value = Init_Shell_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Initialisation_Shell IN Java*/\n", "code": "public void alg initialisation shell out shell x value init shell x value out shell y value init shell y value out shell x c value init shell x value out shell y c value init shell y value temp x value init shell x value temp y value init shell y value\n", "comment": "algorithm initialisation shell in java\n"}
{"id": "46631454", "raw_code": "public void alg_Move_shell_Left(){\ninternal_rate.value = 10;\n\nOut_Shell_X.value = Temp_X.value - internal_rate.value;\nOut_Shell_Y.value = Temp_Y.value;\nOut_Shell_X_C.value = Out_Shell_X.value;\nOut_Shell_Y_C.value = Out_Shell_Y.value;\n\nTemp_X.value = Out_Shell_X.value; \nTemp_Y.value = Out_Shell_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Move_shell_Left IN Java*/\n", "code": "public void alg move shell left internal rate value 10 out shell x value temp x value internal rate value out shell y value temp y value out shell x c value out shell x value out shell y c value out shell y value temp x value out shell x value temp y value out shell y value\n", "comment": "algorithm move shell left in java\n"}
{"id": "46631456", "raw_code": "public void alg_Move_shell_Right(){\ninternal_rate.value = 10;\n\nOut_Shell_X.value = Temp_X.value + internal_rate.value;\nOut_Shell_Y.value = Temp_Y.value;\nOut_Shell_X_C.value = Out_Shell_X.value;\nOut_Shell_Y_C.value = Out_Shell_Y.value;\n\nTemp_X.value = Out_Shell_X.value; \nTemp_Y.value = Out_Shell_Y.value;\n\n}\n", "raw_comment": "  /** ALGORITHM Move_shell_Right IN Java*/\n", "code": "public void alg move shell right internal rate value 10 out shell x value temp x value internal rate value out shell y value temp y value out shell x c value out shell x value out shell y c value out shell y value temp x value out shell x value temp y value out shell y value\n", "comment": "algorithm move shell right in java\n"}
{"id": "46631458", "raw_code": "public void alg_Stop_Temp(){\nOut_Shell_X.value = Temp_X.value;\nOut_Shell_Y.value = Temp_Y.value;\nOut_Shell_X_C.value = Temp_X.value;\nOut_Shell_Y_C.value = Temp_Y.value;\n}\n", "raw_comment": "  /** ALGORITHM Stop_Temp IN Java*/\n", "code": "public void alg stop temp out shell x value temp x value out shell y value temp y value out shell x c value temp x value out shell y c value temp y value\n", "comment": "algorithm stop temp in java\n"}
{"id": "46631463", "raw_code": "public void alg_Both_On_State(){\nOut_Shell_X.value = Temp_X.value;\nOut_Shell_Y.value = Temp_Y.value;\nOut_Shell_X_C.value = Temp_X.value;\nOut_Shell_Y_C.value = Temp_Y.value;\n}\n", "raw_comment": "  /** ALGORITHM Both_On_State IN Java*/\n", "code": "public void alg both on state out shell x value temp x value out shell y value temp y value out shell x c value temp x value out shell y c value temp y value\n", "comment": "algorithm both on state in java\n"}
{"id": "46631715", "raw_code": "public void start( ){\n  Pallet_1.start();\n  Rotating_Table.start();\n  Checker.start();\n  Drill.start();\n  Collector.start();\n  Kicker.start();\n  Pallet_2.start();\n  Pallet_3.start();\n  Pallet_4.start();\n  Pallet_5.start();\n  Pallet_6.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start pallet 1 start rotating table start checker start drill start collector start kicker start pallet 2 start pallet 3 start pallet 4 start pallet 5 start pallet 6 start\n", "comment": "start the fb instances\n"}
{"id": "46631738", "raw_code": "public void stop( ){\n  Pallet_1.stop();\n  Rotating_Table.stop();\n  Checker.stop();\n  Drill.stop();\n  Collector.stop();\n  Kicker.stop();\n  Pallet_2.stop();\n  Pallet_3.stop();\n  Pallet_4.stop();\n  Pallet_5.stop();\n  Pallet_6.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop pallet 1 stop rotating table stop checker stop drill stop collector stop kicker stop pallet 2 stop pallet 3 stop pallet 4 stop pallet 5 stop pallet 6 stop\n", "comment": "stop the fb instances\n"}
{"id": "46631756", "raw_code": "public void start( ){\n  table_sensor_1.start();\n  table_sensor_2.start();\n  table_sensor_3.start();\n  table_sensor_4.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start table sensor 1 start table sensor 2 start table sensor 3 start table sensor 4 start\n", "comment": "start the fb instances\n"}
{"id": "46631761", "raw_code": "public void stop( ){\n  table_sensor_1.stop();\n  table_sensor_2.stop();\n  table_sensor_3.stop();\n  table_sensor_4.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop table sensor 1 stop table sensor 2 stop table sensor 3 stop table sensor 4 stop\n", "comment": "stop the fb instances\n"}
{"id": "46631839", "raw_code": "public void start( ){\n  Pallet_1.start();\n  Pallet_2.start();\n  Pallet_3.start();\n  Pallet_4.start();\n  Pallet_5.start();\n  Pallet_6.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start pallet 1 start pallet 2 start pallet 3 start pallet 4 start pallet 5 start pallet 6 start\n", "comment": "start the fb instances\n"}
{"id": "46631858", "raw_code": "public void stop( ){\n  Pallet_1.stop();\n  Pallet_2.stop();\n  Pallet_3.stop();\n  Pallet_4.stop();\n  Pallet_5.stop();\n  Pallet_6.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop pallet 1 stop pallet 2 stop pallet 3 stop pallet 4 stop pallet 5 stop pallet 6 stop\n", "comment": "stop the fb instances\n"}
{"id": "46631896", "raw_code": "public void start( ){\n  MRG1.start();\n  MRG2.start();\n  MRG3.start();\n  MRG4.start();\n  MRG5.start();\n  MRG6.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start mrg1 start mrg2 start mrg3 start mrg4 start mrg5 start mrg6 start\n", "comment": "start the fb instances\n"}
{"id": "46631898", "raw_code": "public void stop( ){\n  MRG1.stop();\n  MRG2.stop();\n  MRG3.stop();\n  MRG4.stop();\n  MRG5.stop();\n  MRG6.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop mrg1 stop mrg2 stop mrg3 stop mrg4 stop mrg5 stop mrg6 stop\n", "comment": "stop the fb instances\n"}
{"id": "46631990", "raw_code": "public void start( ){\n  piston.start();\n  shell.start();\n  pincers.start();\n  Pallets.start();\n  Arm_sensors.start();\n  Piston_sensor.start();\n  senor.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start piston start shell start pincers start pallets start arm sensors start piston sensor start senor start\n", "comment": "start the fb instances\n"}
{"id": "46632017", "raw_code": "public void stop( ){\n  piston.stop();\n  shell.stop();\n  pincers.stop();\n  Pallets.stop();\n  Arm_sensors.stop();\n  Piston_sensor.stop();\n  senor.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop piston stop shell stop pincers stop pallets stop arm sensors stop piston sensor stop senor stop\n", "comment": "stop the fb instances\n"}
{"id": "46632052", "raw_code": "117 public void alg_COUNT_UP(){\n118 LED0.value=!LED0.value;\n119 if(!LED0.value){\n120 LED1.value=!LED1.value;\n121 if(!LED1.value){\n122 LED2.value=!LED2.value;\n123 if(!LED2.value){LED3.value=!LED3.value;};\n124 };\n125 };\n126 }\n", "raw_comment": "116   /** ALGORITHM COUNT_UP IN ST*/\n", "code": "117 public void alg count up 118 led0 value led0 value 119 if led0 value 120 led1 value led1 value 121 if led1 value 122 led2 value led2 value 123 if led2 value led3 value led3 value 124 125 126\n", "comment": "116 algorithm count up in st\n"}
{"id": "46632056", "raw_code": "128 public void alg_COUNT_DOWN(){\n129 LED0.value=!LED0.value;\n130 if(LED0.value){\n131 LED1.value=!LED1.value;\n132 if(LED1.value){\n133 LED2.value=!LED2.value;\n134 if(LED2.value){LED3.value=!LED3.value;};\n135 };\n136 };\n137 }\n", "raw_comment": "127   /** ALGORITHM COUNT_DOWN IN ST*/\n", "code": "128 public void alg count down 129 led0 value led0 value 130 if led0 value 131 led1 value led1 value 132 if led1 value 133 led2 value led2 value 134 if led2 value led3 value led3 value 135 136 137\n", "comment": "127 algorithm count down in st\n"}
{"id": "46632063", "raw_code": "139 public void alg_FLASH_ALL(){\n140   LED0.value = !(LED0.value);\n141   LED1.value = !(LED1.value);\n142   LED2.value = !(LED2.value);\n143   LED3.value = !(LED3.value);\n144 }\n", "raw_comment": "138   /** ALGORITHM FLASH_ALL IN LD*/\n", "code": "139 public void alg flash all 140 led0 value led0 value 141 led1 value led1 value 142 led2 value led2 value 143 led3 value led3 value 144\n", "comment": "138 algorithm flash all in ld\n"}
{"id": "46632069", "raw_code": "146 public void alg_CHASE_UP(){\n147   OFLO.value = LED3.value;\n148   LED3.value = LED2.value;\n149   LED2.value = LED1.value;\n150   LED1.value = LED0.value;\n151   LED0.value = OFLO.value;\n152 }\n", "raw_comment": "145   /** ALGORITHM CHASE_UP IN LD*/\n", "code": "146 public void alg chase up 147 oflo value led3 value 148 led3 value led2 value 149 led2 value led1 value 150 led1 value led0 value 151 led0 value oflo value 152\n", "comment": "145 algorithm chase up in ld\n"}
{"id": "46632070", "raw_code": "public void start( ){\n  piston.start();\n  shell.start();\n  pincers.start();\n  Pallets.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start piston start shell start pincers start pallets start\n", "comment": "start the fb instances\n"}
{"id": "46632075", "raw_code": "154 public void alg_CHASE_DOWN(){\n155   OFLO.value = LED0.value;\n156   LED0.value = LED1.value;\n157   LED1.value = LED2.value;\n158   LED2.value = LED3.value;\n159   LED3.value = OFLO.value;\n160 }\n", "raw_comment": "153   /** ALGORITHM CHASE_DOWN IN LD*/\n", "code": "154 public void alg chase down 155 oflo value led0 value 156 led0 value led1 value 157 led1 value led2 value 158 led2 value led3 value 159 led3 value oflo value 160\n", "comment": "153 algorithm chase down in ld\n"}
{"id": "46632096", "raw_code": "public void stop( ){\n  piston.stop();\n  shell.stop();\n  pincers.stop();\n  Pallets.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop piston stop shell stop pincers stop pallets stop\n", "comment": "stop the fb instances\n"}
{"id": "46632121", "raw_code": "public void start( ){\n  SUB.start();\n  PUB_PAN.start();\n  SWITCH.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start sub start pub pan start switch start\n", "comment": "start the fb instances\n"}
{"id": "46632125", "raw_code": "public void stop( ){\n  SUB.stop();\n  PUB_PAN.stop();\n  SWITCH.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop sub stop pub pan stop switch stop\n", "comment": "stop the fb instances\n"}
{"id": "46632127", "raw_code": "public void start( ){\n  SUB.start();\n  PUB_PAN.start();\n  SWITCH.start();\n  SWITCH2.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start sub start pub pan start switch start switch2 start\n", "comment": "start the fb instances\n"}
{"id": "46632130", "raw_code": "public void stop( ){\n  SUB.stop();\n  PUB_PAN.stop();\n  SWITCH.stop();\n  SWITCH2.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop sub stop pub pan stop switch stop switch2 stop\n", "comment": "stop the fb instances\n"}
{"id": "46632167", "raw_code": "public void start( ){\n  PUB_PAN.start();\n  SUB.start();\n  T1.start();\n  T2.start();\n  T3.start();\n  T4.start();\n  MRG.start();\n  MRG1.start();\n  DLY.start();\n  T5.start();\n  T6.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start pub pan start sub start t1 start t2 start t3 start t4 start mrg start mrg1 start dly start t5 start t6 start\n", "comment": "start the fb instances\n"}
{"id": "46632170", "raw_code": "public void stop( ){\n  PUB_PAN.stop();\n  SUB.stop();\n  T1.stop();\n  T2.stop();\n  T3.stop();\n  T4.stop();\n  MRG.stop();\n  MRG1.stop();\n  DLY.stop();\n  T5.stop();\n  T6.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop pub pan stop sub stop t1 stop t2 stop t3 stop t4 stop mrg stop mrg1 stop dly stop t5 stop t6 stop\n", "comment": "stop the fb instances\n"}
{"id": "46632183", "raw_code": "public void start( ){\n  Arm.start();\n  Vacuum.start();\n  STATUS.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start arm start vacuum start status start\n", "comment": "start the fb instances\n"}
{"id": "46632190", "raw_code": "public void stop( ){\n  Arm.stop();\n  Vacuum.stop();\n  STATUS.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop arm stop vacuum stop status stop\n", "comment": "stop the fb instances\n"}
{"id": "46632215", "raw_code": "public void alg_ALG_OFF(){\nIS_ON.value=false;\n}\n", "raw_comment": "  /** ALGORITHM ALG_OFF IN ST*/\n", "code": "public void alg alg off is on value false\n", "comment": "algorithm alg off in st\n"}
{"id": "46632220", "raw_code": "public void start( ){\n  Main_Stand.start();\n  Main_Arm.start();\n  Shell.start();\n  Collector1.start();\n  Collector2.start();\n  Pallet1.start();\n  Pallet2.start();\n  Docker.start();\n  Pallet3.start();\n  Pallet4.start();\n  Pallet5.start();\n  Pallet6.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start main stand start main arm start shell start collector1 start collector2 start pallet1 start pallet2 start docker start pallet3 start pallet4 start pallet5 start pallet6 start\n", "comment": "start the fb instances\n"}
{"id": "46632242", "raw_code": "public void stop( ){\n  Main_Stand.stop();\n  Main_Arm.stop();\n  Shell.stop();\n  Collector1.stop();\n  Collector2.stop();\n  Pallet1.stop();\n  Pallet2.stop();\n  Docker.stop();\n  Pallet3.stop();\n  Pallet4.stop();\n  Pallet5.stop();\n  Pallet6.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop main stand stop main arm stop shell stop collector1 stop collector2 stop pallet1 stop pallet2 stop docker stop pallet3 stop pallet4 stop pallet5 stop pallet6 stop\n", "comment": "stop the fb instances\n"}
{"id": "46632251", "raw_code": "public void start( ){\n  Magazine.start();\n  Workpiece.start();\n  Piston.start();\n  NEG.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start magazine start workpiece start piston start neg start\n", "comment": "start the fb instances\n"}
{"id": "46632256", "raw_code": "public void stop( ){\n  Magazine.stop();\n  Workpiece.stop();\n  Piston.stop();\n  NEG.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop magazine stop workpiece stop piston stop neg stop\n", "comment": "stop the fb instances\n"}
{"id": "46632342", "raw_code": "public void alg_ALLOW_RIGHT(){\nALLOW_RIGHT.value=true;\nSystem.out.println(\"FEED: ***** ALLOW_RIGHT ******\");\n}\n", "raw_comment": "  /** ALGORITHM ALLOW_RIGHT IN ST*/\n", "code": "public void alg allow right allow right value true system out println feed allow right\n", "comment": "algorithm allow right in st\n"}
{"id": "46632346", "raw_code": "public void alg_EXTEND1(){\nEXTEND.value=true;\nSystem.out.println(\"FEED: ***** EXTEND 1 ******\");\n}\n", "raw_comment": "  /** ALGORITHM EXTEND1 IN ST*/\n", "code": "public void alg extend1 extend value true system out println feed extend 1\n", "comment": "algorithm extend1 in st\n"}
{"id": "46632348", "raw_code": "public void alg_EXTEND0(){\nEXTEND.value=false;\nSystem.out.println(\"FEED:***** EXTEND0 ******\");\n}\n", "raw_comment": "  /** ALGORITHM EXTEND0 IN ST*/\n", "code": "public void alg extend0 extend value false system out println feed extend0\n", "comment": "algorithm extend0 in st\n"}
{"id": "46632351", "raw_code": "public void alg_BLOCK_RIGHT(){\nALLOW_RIGHT.value=false;\nSystem.out.println(\"FEED: ***** BLOCK_RIGHT ******\");\n}\n", "raw_comment": "  /** ALGORITHM BLOCK_RIGHT IN ST*/\n", "code": "public void alg block right allow right value false system out println feed block right\n", "comment": "algorithm block right in st\n"}
{"id": "46632363", "raw_code": "public void alg_WAIT_1(){\nSystem.out.println(\"RIGHT_OK=\"+RIGHT_OK.value);\nSystem.out.println(\"notEMPTY=\"+notEMPTY.value);\n}\n", "raw_comment": "  /** ALGORITHM WAIT_1 IN ST*/\n", "code": "public void alg wait 1 system out println right ok right ok value system out println not empty not empty value\n", "comment": "algorithm wait 1 in st\n"}
{"id": "46632403", "raw_code": "public void alg_ALLOW_RIGHT(){\nALLOW_RIGHT.value=true;\nSystem.out.println(\"TR_CTLR: ALLOW RIGHT\");\n}\n", "raw_comment": "  /** ALGORITHM ALLOW_RIGHT IN ST*/\n", "code": "public void alg allow right allow right value true system out println tr ctlr allow right\n", "comment": "algorithm allow right in st\n"}
{"id": "46632407", "raw_code": "public void alg_RETR0(){\nTO_NEXT.value=false;\nSystem.out.println(\"TR_CTLR: RETR 0\");\n}\n", "raw_comment": "  /** ALGORITHM RETR0 IN ST*/\n", "code": "public void alg retr0 to next value false system out println tr ctlr retr 0\n", "comment": "algorithm retr0 in st\n"}
{"id": "46632409", "raw_code": "public void alg_BLOCK_RIGHT(){\nALLOW_RIGHT.value=false;\nSystem.out.println(\"TR_CTLR: BLOCK RIGHT\");\n}\n", "raw_comment": "  /** ALGORITHM BLOCK_RIGHT IN ST*/\n", "code": "public void alg block right allow right value false system out println tr ctlr block right\n", "comment": "algorithm block right in st\n"}
{"id": "46632414", "raw_code": "public void alg_ALLOW_LEFT(){\nALLOW_LEFT.value=true;\nSystem.out.println(\"TR_CTLR: ALLOW LEFT\");\n}\n", "raw_comment": "  /** ALGORITHM ALLOW_LEFT IN ST*/\n", "code": "public void alg allow left allow left value true system out println tr ctlr allow left\n", "comment": "algorithm allow left in st\n"}
{"id": "46632423", "raw_code": "public void alg_BLOCK_LEFT(){\nALLOW_LEFT.value=false;\nSystem.out.println(\"TR_CTLR: BLOCK LEFT\");\n}\n", "raw_comment": "  /** ALGORITHM BLOCK_LEFT IN ST*/\n", "code": "public void alg block left allow left value false system out println tr ctlr block left\n", "comment": "algorithm block left in st\n"}
{"id": "46632429", "raw_code": "public void alg_TO_NEXT0(){\nTO_NEXT.value=false;\nSystem.out.println(\"TR_CTLR: TO NEXT 0\");\n}\n", "raw_comment": "  /** ALGORITHM TO_NEXT0 IN ST*/\n", "code": "public void alg to next0 to next value false system out println tr ctlr to next 0\n", "comment": "algorithm to next0 in st\n"}
{"id": "46632436", "raw_code": "public void alg_TO_NEXT1(){\nTO_NEXT.value=true;\nSystem.out.println(\"TR_CTLR: TO NEXT 1\");\n}\n", "raw_comment": "  /** ALGORITHM TO_NEXT1 IN ST*/\n", "code": "public void alg to next1 to next value true system out println tr ctlr to next 1\n", "comment": "algorithm to next1 in st\n"}
{"id": "46632442", "raw_code": "public void alg_TO_MGZ1(){\nTO_MGZ.value=true;\nSystem.out.println(\"TR_CTLR: TO MGZ 1\");\n}\n", "raw_comment": "  /** ALGORITHM TO_MGZ1 IN ST*/\n", "code": "public void alg to mgz1 to mgz value true system out println tr ctlr to mgz 1\n", "comment": "algorithm to mgz1 in st\n"}
{"id": "46632445", "raw_code": "public void start( ){\n  Main_stand.start();\n  Main_arm.start();\n  Piston_shell.start();\n  Piston.start();\n  Pincer_left.start();\n  Pincer_right.start();\n  Work_block.start();\n  Collector_left.start();\n  Collector_right.start();\n  Work_block_2.start();\n  Docker.start();\n  Work_block_3.start();\n  Work_block_4.start();\n  work_block_5.start();\n  work_block_6.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start main stand start main arm start piston shell start piston start pincer left start pincer right start work block start collector left start collector right start work block 2 start docker start work block 3 start work block 4 start work block 5 start work block 6 start\n", "comment": "start the fb instances\n"}
{"id": "46632450", "raw_code": "public void alg_TO_MGZ0(){\nTO_MGZ.value=false;\nSystem.out.println(\"TR_CTLR: TO_MGZ 0\");\n}\n", "raw_comment": "  /** ALGORITHM TO_MGZ0 IN ST*/\n", "code": "public void alg to mgz0 to mgz value false system out println tr ctlr to mgz 0\n", "comment": "algorithm to mgz0 in st\n"}
{"id": "46632458", "raw_code": "public void stop( ){\n  Main_stand.stop();\n  Main_arm.stop();\n  Piston_shell.stop();\n  Piston.stop();\n  Pincer_left.stop();\n  Pincer_right.stop();\n  Work_block.stop();\n  Collector_left.stop();\n  Collector_right.stop();\n  Work_block_2.stop();\n  Docker.stop();\n  Work_block_3.stop();\n  Work_block_4.stop();\n  work_block_5.stop();\n  work_block_6.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop main stand stop main arm stop piston shell stop piston stop pincer left stop pincer right stop work block stop collector left stop collector right stop work block 2 stop docker stop work block 3 stop work block 4 stop work block 5 stop work block 6 stop\n", "comment": "stop the fb instances\n"}
{"id": "46632467", "raw_code": "public void alg_ACKLED0(){\nACK_LED.value=false;\nSystem.out.println(\"TR_CTLR: ACK_LED 0\");\n}\n", "raw_comment": "  /** ALGORITHM ACKLED0 IN ST*/\n", "code": "public void alg ackled0 ack led value false system out println tr ctlr ack led 0\n", "comment": "algorithm ackled0 in st\n"}
{"id": "46632476", "raw_code": "public void alg_STARTLED1(){\nSTART_LED.value=true;\nSystem.out.println(\"TR_CTLR: STARTLED 1\");\n}\n", "raw_comment": "  /** ALGORITHM STARTLED1 IN ST*/\n", "code": "public void alg startled1 start led value true system out println tr ctlr startled 1\n", "comment": "algorithm startled1 in st\n"}
{"id": "46632481", "raw_code": "public void alg_STARTLED0(){\nSTART_LED.value=false;\nSystem.out.println(\"TR_CTLR: STARTLED 0\");\n}\n", "raw_comment": "  /** ALGORITHM STARTLED0 IN ST*/\n", "code": "public void alg startled0 start led value false system out println tr ctlr startled 0\n", "comment": "algorithm startled0 in st\n"}
{"id": "46632482", "raw_code": "  public void addError(int line, String message, boolean critical){\n    try{\n\t  errors.add(new ParseError(line, message, critical));\n\t} catch (Exception e) { /**/ }\n  }\n", "raw_comment": "  /**\n   * Adds an error to the result.\n   * \n   */\n", "code": "public void add error int line string message boolean critical try errors add new parse error line message critical catch exception e\n", "comment": "adds an error to the result\n"}
{"id": "46632485", "raw_code": "public void alg_RESETLED1(){\nRESET_LED.value=true;\nSystem.out.println(\"TR_CTLR: RESET LED 1\");\n}\n", "raw_comment": "  /** ALGORITHM RESETLED1 IN ST*/\n", "code": "public void alg resetled1 reset led value true system out println tr ctlr reset led 1\n", "comment": "algorithm resetled1 in st\n"}
{"id": "46632489", "raw_code": "public void alg_RESETLED0(){\nRESET_LED.value=false;\nSystem.out.println(\"TR_CTLR: RESET LED 0\");\n}\n", "raw_comment": "  /** ALGORITHM RESETLED0 IN ST*/\n", "code": "public void alg resetled0 reset led value false system out println tr ctlr reset led 0\n", "comment": "algorithm resetled0 in st\n"}
{"id": "46632496", "raw_code": "public void alg_VACUUM_ON(){\nVCM_ON.value=true;\nVCM_OFF.value=false;\nSystem.out.println(\"TR_CTLR: VACUUM ON\");\n}\n", "raw_comment": "  /** ALGORITHM VACUUM_ON IN ST*/\n", "code": "public void alg vacuum on vcm on value true vcm off value false system out println tr ctlr vacuum on\n", "comment": "algorithm vacuum on in st\n"}
{"id": "46632500", "raw_code": "public void alg_VACUUM_OFF(){\nVCM_ON.value=false;\nVCM_OFF.value=true;\nSystem.out.println(\"TR_CTLR: VACUUM OFF\");\n}\n", "raw_comment": "  /** ALGORITHM VACUUM_OFF IN ST*/\n", "code": "public void alg vacuum off vcm on value false vcm off value true system out println tr ctlr vacuum off\n", "comment": "algorithm vacuum off in st\n"}
{"id": "46632531", "raw_code": "  public String getSource(){\n    return source.toString();\n  }\n", "raw_comment": "  /**\n   * Returns the Java source.\n   * \n   */\n", "code": "public string get source return source to string\n", "comment": "returns the java source\n"}
{"id": "46632585", "raw_code": "    private void cleanAttributeStrings(NodeList nodes) {\n//    \tfor(int i = 0; i < nodes.getLength(); i++){\n//    \t\tElement node = (Element)nodes.item(i);\n//    \t\tcleanAttributeStrings(node);\n//    \t\tcleanAttributeStrings(node.getChildNodes());\n//    \t}\n\t}\n", "raw_comment": "    /**\n     * Removes extra '\"' characters at the beginning and end of attribute strings,\n     * as these create errors in the source code.\n     * @param nodes\n     */\n", "code": "private void clean attribute strings node list nodes for int i 0 i nodes get length i element node element nodes item i clean attribute strings node clean attribute strings node get child nodes\n", "comment": "removes extra characters at the beginning and end of attribute strings\n"}
{"id": "46632589", "raw_code": "    public String getText() {\n        //String txt = file.getName();\n        //int n = txt.lastIndexOf('.');\n        //if ((n > 0) && (n < (txt.length() - 1)))\n        //   txt = txt.substring(0, n);\n        return file.getName();\n    }\n", "raw_comment": "    /**\n     * Returns the string to be used to display the tree node.\n     */\n", "code": "public string get text string txt file get name int n txt last index of if n 0 n txt length 1 txt txt substring 0 n return file get name\n", "comment": "returns the string to be used to display the tree node\n"}
{"id": "46632595", "raw_code": "    public Icon getIcon() {\n    \tif ( ico == null )\n    \t{\n\t        if (file.isDirectory())\n\t            ico = IconFactory.getIcon(\"Open16\");\n\t        else\n\t        {\n\t\t        String name = file.getName();\n\t\t        int n = name.lastIndexOf('.');\n\t\t        if ((n < 1) || (n > (name.length() - 2)))\n\t\t            ico = IconFactory.getIcon(\"default\");\n\t\t        \n//\t\t      \tif still null\n\t\t        if ( ico == null )\n\t\t        {\n\t\t        \tString suffix = name.substring(n + 1);\n\t\t\t        int i = 0;\n\t\t\t        for (StringTokenizer t = new StringTokenizer(suffixes); t\n\t\t\t                .hasMoreTokens();) {\n\t\t\t            if (t.nextToken().equals(suffix))\n\t\t\t            {\n\t\t\t            \tico = IconFactory.getIcon(iconNames[i]);\n\t\t\t            \tbreak;\n\t\t\t            }\n\t\t\t            i++;\n\t\t\t        }\n\t\t        }\n\t        }\n\t        // if still null\n\t        if ( ico == null )\n\t        \tico = IconFactory.getIcon(\"default\");\n    \t}\n    \treturn ico;\n    }\n", "raw_comment": "    /**\n     * Returns the icon to be used for display of this element.\n     */\n", "code": "public icon get icon if ico null if file is directory ico icon factory get icon open16 else string name file get name int n name last index of if n 1 n name length 2 ico icon factory get icon default if still null if ico null string suffix name substring n 1 int i 0 for string tokenizer t new string tokenizer suffixes t has more tokens if t next token equals suffix ico icon factory get icon icon names i break i if still null if ico null ico icon factory get icon default return ico\n", "comment": "returns the icon to be used for display of this element\n"}
{"id": "46632610", "raw_code": "  public ParseResult getResult(){\n    return new ParseResult(getSource(), getErrors());\n  }\n", "raw_comment": "  /**\n   * Gets the parser result.\n   * \n   */\n", "code": "public parse result get result return new parse result get source get errors\n", "comment": "gets the parser result\n"}
{"id": "46632624", "raw_code": "\tprivate void closeStartElement() throws IOException {\n\t\tif (this.startElementOpen) {\n\t\t\twriteAttributes();\n\t\t\tif (this.currentElementEmpty)\n\t\t\t\twrite(\" />\");\n\t\t\telse\n\t\t\t\twrite(\">\");\n\t\t\tthis.startElementOpen = false;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Closes a start element.\n\t * \n\t * @throws IOException\n\t */\n", "code": "private void close start element throws ioexception if this start element open write attributes if this current element empty write else write this start element open false\n", "comment": "closes a start element\n"}
{"id": "46632628", "raw_code": "    public Vector getChildren() {\n    \tif(children == null)\n    \t{\n    \t\tchildren = new Vector();\n    \t\tif (!getAllowsChildren())\n    \t\t\treturn children;\n    \t\tFile[] files = file.listFiles(this);\n    \t\tfor (int i = 0; i < files.length; i++)\n    \t\t\tchildren.addElement(new LibraryTreeNode(files[i], this));\n    \t}\n        return children;\n    }\n", "raw_comment": "    /**\n     * Returns a Vector of the receiver's children.\n     */\n", "code": "public vector get children if children null children new vector if get allows children return children file files file list files this for int i 0 i files length i children add element new library tree node files i this return children\n", "comment": "returns a vector of the receivers children\n"}
{"id": "46632681", "raw_code": "\tprivate JMenuItem getExistJMenuItem(JMenuItem targetItem, JMenu sourceJMenu) {\n\t\t// System.out.println(\"Locating \" + targetItem.getText() + \" within \" + sourceJMenu.getText());\n\n\t\tString targetItemLabel = targetItem.getText();\n\n\t\tfor(int i = 0; i < sourceJMenu.getItemCount(); i++) {\n\t\t\tJMenuItem item = sourceJMenu.getItem(i);\n\t\t\tif(targetItemLabel.equalsIgnoreCase(item.getText())) {\n\t\t\t\treturn item;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Check whether the given JMenuItem resides in the given JMenu. Only return the item in sourceJMenu if it\n\t * has the same name as that of targetItem\n\t * \n\t * @param targetItem JMenuItem, can be JMenuItem, JCheckBoxMenuItem, or JRadioButtonMenuItem\n\t * @param sourceJMenu JMenu\n\t * @return JMenuItem or <TT>null</TT>\n\t */\n", "code": "private jmenu item get exist jmenu item jmenu item target item jmenu source jmenu system out println locating target item get text within source jmenu get text string target item label target item get text for int i 0 i source jmenu get item count i jmenu item item source jmenu get item i if target item label equals ignore case item get text return item return null\n", "comment": "check whether the given jmenu item resides in the given jmenu\n"}
{"id": "46632688", "raw_code": "  public void yyerror (String error) {\n    //System.err.println (\"Error: \" + error);\n    addError(getLine(), error, true);\n  }\n", "raw_comment": "  /**\n   * Internal, prints an error message.\n   * \n   */\n", "code": "public void yyerror string error system err println error error add error get line error true\n", "comment": "internal prints an error message\n"}
{"id": "46632753", "raw_code": "\t\tprivate boolean deleteElement(NodeList nl){\n\t\t\tfor(int i = 0; i < nl.getLength(); i++){\n\t\t\t\tElement el = (Element)nl.item(i);\n\t\t\t\tif(deleteElement(nl.item(i).getChildNodes()))\n\t\t\t\t\treturn true;\n\t\t\t\t\n\t\t\t\tif (el.equals(getElement())){\n\t\t\t\t\tel.getParentNode().removeChild(el);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n", "raw_comment": "\t\t/**\n\t\t * Recursive method for deleting the selected element from the document\n\t\t * @param Nodelist of the top-level element\n\t\t * @return boolean which represents whether the element has been deleted or not\n\t\t */\n", "code": "private boolean delete element node list nl for int i 0 i nl get length i element el element nl item i if delete element nl item i get child nodes return true if el equals get element el get parent node remove child el return true return false\n", "comment": "recursive method for deleting the selected element from the document\n"}
{"id": "46632841", "raw_code": "\tpublic void putOpaqueData(String key, Object data){\n\t\tthis.opaqueData.put(key, data);\n\t}\n", "raw_comment": "\t/**\n\t * Store data associated with this library element.\n\t * @param key\n\t * @param data\n\t */\n", "code": "public void put opaque data string key object data this opaque data put key data\n", "comment": "store data associated with this library element\n"}
{"id": "46632850", "raw_code": "\tpublic Object getOpaqueData(String key){\n\t\treturn this.opaqueData.get(key);\n\t}\n", "raw_comment": "\t/**\n\t * Retrieve data associated with this library element.\n\t * @param key\n\t * @return\n\t */\n", "code": "public object get opaque data string key return this opaque data get key\n", "comment": "retrieve data associated with this library element\n"}
{"id": "46632873", "raw_code": "\tprotected Element getTypeDocElement() {\n\t\tif (typeDocElement != null)\n\t\t\treturn typeDocElement;\n\t\tDocument doc = Library.getDocument(getType() + getTypeSuffix());\n\t\tif (doc == null)\n\t\t\treturn null;\n\t\ttypeDocElement = doc.getDocumentElement();\n\t\treturn typeDocElement;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the DocumentElement of the receiver's Type document with lazy\n\t * initialization.\n\t */\n", "code": "protected element get type doc element if type doc element null return type doc element document doc library get document get type get type suffix if doc null return null type doc element doc get document element return type doc element\n", "comment": "returns the document element of the receivers type document with lazy\n"}
{"id": "46632944", "raw_code": "    protected LibraryTreeNode getSelectedNode() {\n        TreePath tp = libraryTree.getSelectionPath();\n        if (tp == null)\n            return null;\n        Object lastcomp = tp.getLastPathComponent();\n        return (lastcomp instanceof LibraryTreeNode) ? (LibraryTreeNode) lastcomp\n                : null;\n    }\n", "raw_comment": "    /**\n     * Returns the selected node from the Library tree, or <TT>null</TT> if\n     * none is selected.\n     */\n", "code": "protected library tree node get selected node tree path tp library tree get selection path if tp null return null object lastcomp tp get last path component return lastcomp instanceof library tree node library tree node lastcomp null\n", "comment": "returns the selected node from the library tree or tt null tt if\n"}
{"id": "46632947", "raw_code": "    public void setElement(Element el) {\n        model.setElement(el);\n        String ttt = model.toString();\n        if (!ttt.equals(\"\"))\n            setToolTipText(ttt);\n        removeAll();\n        initComponents();\n    }\n", "raw_comment": "    /**\n     * Sets the DOM Element represented by this component and updates its\n     * contents.\n     */\n", "code": "public void set element element el model set element el string ttt model to string if ttt equals set tool tip text ttt remove all init components\n", "comment": "sets the dom element represented by this component and updates its\n"}
{"id": "46632976", "raw_code": "    protected void setDeselectedColor(Color newCol) {\n        this.deSelectedColor = newCol;\n    }\n", "raw_comment": "    /**\n     * Sets the background color (<TT>Color.white</TT>) for\n     * deselected elements.\n     */\n", "code": "protected void set deselected color color new col this de selected color new col\n", "comment": "sets the background color tt color\n"}
{"id": "46632983", "raw_code": "    protected void setSelectionColor(Color newCol) {\n        this.selectedColor = newCol;\n    }\n", "raw_comment": "    /**\n     * Sets the background color (<TT>Color(119, 190, 255)</TT>) for\n     * selected elements.\n     */\n", "code": "protected void set selection color color new col this selected color new col\n", "comment": "sets the background color tt color 119 190 255 tt for\n"}
{"id": "46632984", "raw_code": "    public Dimension preferredLayoutSize(Container parent) {\n        Dimension ans = new Dimension();\n        Component[] comps = parent.getComponents();\n        for (int i = 0; i < comps.length; i++) {\n        \tif( !(comps[i] instanceof GraphElement) )\n        \t\tcontinue;\n            GraphElement ge = (GraphElement) comps[i];\n            Rectangle r = ge.getPreferredBounds();\n            if (r != null) {\n                ans.width = Math.max(ans.width, r.x + r.width);\n                ans.height = Math.max(ans.height, r.y + r.height);\n            }\n        }\n        return ans;\n    }\n", "raw_comment": "    /**\n     * Returns preferred layout size based on components' getPreferredBounds().\n     * \n     * @see java.awt.LayoutManager#preferredLayoutSize(java.awt.Container)\n     */\n", "code": "public dimension preferred layout size container parent dimension ans new dimension component comps parent get components for int i 0 i comps length i if comps i instanceof graph element continue graph element ge graph element comps i rectangle r ge get preferred bounds if r null ans width math max ans width r x r width ans height math max ans height r y r height return ans\n", "comment": "returns preferred layout size based on components get preferred bounds\n"}
{"id": "46632991", "raw_code": "    protected Color getDeselectedColor() {\n        return this.deSelectedColor;\n    }\n", "raw_comment": "    /**\n     * Returns the default background color (<TT>Color.white</TT>) for\n     * deselected elements.\n     */\n", "code": "protected color get deselected color return this de selected color\n", "comment": "returns the default background color tt color\n"}
{"id": "46632996", "raw_code": "    protected Color getSelectionColor() {\n        return this.selectedColor;\n    }\n", "raw_comment": "    /**\n     * Returns the default background color (<TT>Color(119, 190, 255)</TT>) for\n     * selected elements.\n     */\n", "code": "protected color get selection color return this selected color\n", "comment": "returns the default background color tt color 119 190 255 tt for\n"}
{"id": "46633002", "raw_code": "    public void setSelected(boolean newState) {\n        if (selected == newState)\n            return;\n        selected = newState;\n        setBackground(selected ? getSelectionColor() : getDeselectedColor());\n        if (selected) {\n            Container p = getParent();\n            if (p instanceof JLayeredPane)\n                ((JLayeredPane) p).moveToFront(this);\n        }\n        //TODO: gsha041 DONT redraw at this level (viewmodel does it)\n        //repaint();\n        \n    }\n", "raw_comment": "    /**\n     * Sets the selection state.\n     */\n", "code": "public void set selected boolean new state if selected new state return selected new state set background selected get selection color get deselected color if selected container p get parent if p instanceof jlayered pane jlayered pane p move to front this todo gsha041 dont redraw at this level viewmodel does it repaint\n", "comment": "sets the selection state\n"}
{"id": "46633033", "raw_code": "\tpublic Color getDeselectedColor() {\n\t\treturn isEventConnection() ? Color.green : Color.blue;\n\t}\n", "raw_comment": "\t/** The color for deselected elements of this type. */\n", "code": "public color get deselected color return is event connection color green color blue\n", "comment": "the color for deselected elements of this type\n"}
{"id": "46633036", "raw_code": "    public void addVisibleParameters(ViewModel view) {\n        if (!hasVisibleParameters())\n            return;\n        for (Node child = getElement().getFirstChild(); child != null; child = child\n                .getNextSibling()) {\n            Element el = (Element) child;\n            if (el.getTagName().equals(\"Parameter\")) {\n                Parameter par = new Parameter(el, this);\n                view.add(par, ViewModel.IO_LAYER);\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Adds the visible parameters of this element (if any) to the given\n     * GraphView.\n     * \n     * @version 20070530/JP now accepts any class extending ViewModel (previously it was only for GraphView)\n     */\n", "code": "public void add visible parameters view model view if has visible parameters return for node child get element get first child child null child child get next sibling element el element child if el get tag name equals parameter parameter par new parameter el this view add par view model io layer\n", "comment": "adds the visible parameters of this element if any to the given\n"}
{"id": "46633062", "raw_code": "\tpublic void addLabel(boolean loc) {\n\t\t((ViewModel) getParent()).setLayer(this, ViewModel.IO_LAYER.intValue());\n\t\tsetOpaque(true);\n\t\tJLabel lbl = new JLabel(IconFactory.getIcon(\"hline15\"));\n\t\tlbl.setText(getElement().getAttribute(loc ? \"Source\" : \"Destination\"));\n\t\tlbl.setHorizontalTextPosition(loc ? JLabel.LEFT : JLabel.RIGHT);\n\t\tlbl.setBorder(GraphElement.emborder);\n\t\tlbl.setBackground(Color.white);\n\t\tlbl.setFont(getFont());\n\t\tadd(lbl, BorderLayout.CENTER);\n\t}\n", "raw_comment": "\t/**\n\t * Add a label at the given location.\n\t * \n\t * @param loc <TT>true</TT> for an input value, <TT>false</TT> for an\n\t *            output value.\n\t */\n", "code": "public void add label boolean loc view model get parent set layer this view model io layer int value set opaque true jlabel lbl new jlabel icon factory get icon hline15 lbl set text get element get attribute loc source destination lbl set horizontal text position loc jlabel left jlabel right lbl set border graph element emborder lbl set background color white lbl set font get font add lbl border layout center\n", "comment": "add a label at the given location\n"}
{"id": "46633305", "raw_code": "    public void alg_COUNT_UP(){\n        LED0.value=!LED0.value;\n        if(!LED0.value){\n            LED1.value=!LED1.value;\n            if(!LED1.value){\n                LED2.value=!LED2.value;\n                if(!LED2.value){LED3.value=!LED3.value;};\n            };\n        };\n        \n        updateData(\"LED3\",String.valueOf(LED3.value));\n        updateData(\"LED2\",String.valueOf(LED2.value));\n        updateData(\"LED1\",String.valueOf(LED1.value));\n        updateData(\"LED0\",String.valueOf(LED0.value));\n    }\n", "raw_comment": "    /** ALGORITHM COUNT_UP IN ST*/\n", "code": "public void alg count up led0 value led0 value if led0 value led1 value led1 value if led1 value led2 value led2 value if led2 value led3 value led3 value update data led3 string value of led3 value update data led2 string value of led2 value update data led1 string value of led1 value update data led0 string value of led0 value\n", "comment": "algorithm count up in st\n"}
{"id": "46633308", "raw_code": "    public void alg_COUNT_DOWN(){\n        LED0.value=!LED0.value;\n        if(LED0.value){\n            LED1.value=!LED1.value;\n            if(LED1.value){\n                LED2.value=!LED2.value;\n                if(LED2.value){LED3.value=!LED3.value;};\n            };\n        };\n        \n        updateData(\"LED3\",String.valueOf(LED3.value));\n        updateData(\"LED2\",String.valueOf(LED2.value));\n        updateData(\"LED1\",String.valueOf(LED1.value));\n        updateData(\"LED0\",String.valueOf(LED0.value));\n    }\n", "raw_comment": "    /** ALGORITHM COUNT_DOWN IN ST*/\n", "code": "public void alg count down led0 value led0 value if led0 value led1 value led1 value if led1 value led2 value led2 value if led2 value led3 value led3 value update data led3 string value of led3 value update data led2 string value of led2 value update data led1 string value of led1 value update data led0 string value of led0 value\n", "comment": "algorithm count down in st\n"}
{"id": "46633311", "raw_code": "\tprivate JFrame getProjectFrame() {\n\t\tif (projectFrame == null) {\n\t\t\tprojectFrame = new JFrame();\n\t\t\tprojectFrame.setSize(new Dimension(380, 145));\n\t\t\tprojectFrame\n\t\t\t\t\t.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);\n\t\t\tprojectFrame.setTitle(\"Project\");\n\t\t\tprojectFrame.setContentPane(getJContentPane());\n\t\t}\n\t\treturn projectFrame;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes projectFrame\n\t * \n\t * @return javax.swing.JFrame\n\t */\n", "code": "private jframe get project frame if project frame null project frame new jframe project frame set size new dimension 380 145 project frame set default close operation window constants dispose on close project frame set title project project frame set content pane get jcontent pane return project frame\n", "comment": "this method initializes project frame\n"}
{"id": "46633312", "raw_code": "    public void alg_FLASH_ALL(){\n        LED0.value = !(LED0.value);\n        LED1.value = !(LED1.value);\n        LED2.value = !(LED2.value);\n        LED3.value = !(LED3.value);\n        \n        updateData(\"LED3\",String.valueOf(LED3.value));\n        updateData(\"LED2\",String.valueOf(LED2.value));\n        updateData(\"LED1\",String.valueOf(LED1.value));\n        updateData(\"LED0\",String.valueOf(LED0.value));\n    }\n", "raw_comment": "    /** ALGORITHM FLASH_ALL IN LD*/\n", "code": "public void alg flash all led0 value led0 value led1 value led1 value led2 value led2 value led3 value led3 value update data led3 string value of led3 value update data led2 string value of led2 value update data led1 string value of led1 value update data led0 string value of led0 value\n", "comment": "algorithm flash all in ld\n"}
{"id": "46633314", "raw_code": "    public void alg_CHASE_UP(){\n        OFLO.value = LED3.value;\n        LED3.value = LED2.value;\n        LED2.value = LED1.value;\n        LED1.value = LED0.value;\n        LED0.value = OFLO.value;\n        \n        updateData(\"LED3\",String.valueOf(LED3.value));\n        updateData(\"LED2\",String.valueOf(LED2.value));\n        updateData(\"LED1\",String.valueOf(LED1.value));\n        updateData(\"LED0\",String.valueOf(LED0.value));\n    }\n", "raw_comment": "    /** ALGORITHM CHASE_UP IN LD*/\n", "code": "public void alg chase up oflo value led3 value led3 value led2 value led2 value led1 value led1 value led0 value led0 value oflo value update data led3 string value of led3 value update data led2 string value of led2 value update data led1 string value of led1 value update data led0 string value of led0 value\n", "comment": "algorithm chase up in ld\n"}
{"id": "46633317", "raw_code": "public void start( ){\n  Rotating_table.start();\n  Pallet_1.start();\n  Pallet_2.start();\n  Pallet_3.start();\n  Pallet_4.start();\n  Pallet_5.start();\n  Pallet_6.start();\n  Kicker.start();\n  checker.start();\n  driller.start();\n  selector_rot_ver.start();\n  P1_table_sensors.start();\n  selector_rot_ver2.start();\n  P2_table_sensors.start();\n  selector_rot_ver3.start();\n  P3_table_sensors.start();\n  selector_rot_ver4.start();\n  P4_table_sensors.start();\n  selector_rot_ver5.start();\n  P5_table_sensors.start();\n  selector_rot_ver6.start();\n  P6_table_sensors.start();\n  OR_gate_sensors.start();\n}\n", "raw_comment": "/** Start the FB instances. */\n", "code": "public void start rotating table start pallet 1 start pallet 2 start pallet 3 start pallet 4 start pallet 5 start pallet 6 start kicker start checker start driller start selector rot ver start p1 table sensors start selector rot ver2 start p2 table sensors start selector rot ver3 start p3 table sensors start selector rot ver4 start p4 table sensors start selector rot ver5 start p5 table sensors start selector rot ver6 start p6 table sensors start or gate sensors start\n", "comment": "start the fb instances\n"}
{"id": "46633319", "raw_code": "    public void alg_CHASE_DOWN(){\n        OFLO.value = LED0.value;\n        LED0.value = LED1.value;\n        LED1.value = LED2.value;\n        LED2.value = LED3.value;\n        LED3.value = OFLO.value;\n        \n        updateData(\"LED3\",String.valueOf(LED3.value));\n        updateData(\"LED2\",String.valueOf(LED2.value));\n        updateData(\"LED1\",String.valueOf(LED1.value));\n        updateData(\"LED0\",String.valueOf(LED0.value));\n    }\n", "raw_comment": "    /** ALGORITHM CHASE_DOWN IN LD*/\n", "code": "public void alg chase down oflo value led0 value led0 value led1 value led1 value led2 value led2 value led3 value led3 value oflo value update data led3 string value of led3 value update data led2 string value of led2 value update data led1 string value of led1 value update data led0 string value of led0 value\n", "comment": "algorithm chase down in ld\n"}
{"id": "46633327", "raw_code": "\tprivate JTextField getImportTextField() {\n\t\tif (importTextField == null) {\n\t\t\timportTextField = new JTextField();\n\t\t\timportTextField.setPreferredSize(new Dimension(200, 20));\n\t\t\timportTextField.setBounds(new Rectangle(8, 24, 196, 20));\n\t\t}\n\t\treturn importTextField;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes importTextField\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "private jtext field get import text field if import text field null import text field new jtext field import text field set preferred size new dimension 200 20 import text field set bounds new rectangle 8 24 196 20 return import text field\n", "comment": "this method initializes import text field\n"}
{"id": "46633333", "raw_code": "\tprivate JTextField getExportTextField() {\n\t\tif (exportTextField == null) {\n\t\t\texportTextField = new JTextField();\n\t\t\texportTextField.setBounds(new Rectangle(8, 62, 196, 20));\n\t\t}\n\t\treturn exportTextField;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes exportTextField\n\t * \n\t * @return javax.swing.JTextField\n\t */\n", "code": "private jtext field get export text field if export text field null export text field new jtext field export text field set bounds new rectangle 8 62 196 20 return export text field\n", "comment": "this method initializes export text field\n"}
{"id": "46633340", "raw_code": "\tprivate JButton getBrowseImportButton() {\n\t\tif (browseImportButton == null) {\n\t\t\tbrowseImportButton = new JButton();\n\t\t\tbrowseImportButton.setBounds(new Rectangle(203, 24, 25, 19));\n\t\t\tbrowseImportButton.setText(\"Browse\");\n\t\t\tbrowseImportButton\n\t\t\t\t\t.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\t\t\tbrowseImport();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t}\n\t\treturn browseImportButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes browseImportButton\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "private jbutton get browse import button if browse import button null browse import button new jbutton browse import button set bounds new rectangle 203 24 25 19 browse import button set text browse browse import button add action listener new java awt event action listener public void action performed java awt event action event e browse import return browse import button\n", "comment": "this method initializes browse import button\n"}
{"id": "46633347", "raw_code": "public void stop( ){\n  Rotating_table.stop();\n  Pallet_1.stop();\n  Pallet_2.stop();\n  Pallet_3.stop();\n  Pallet_4.stop();\n  Pallet_5.stop();\n  Pallet_6.stop();\n  Kicker.stop();\n  checker.stop();\n  driller.stop();\n  selector_rot_ver.stop();\n  P1_table_sensors.stop();\n  selector_rot_ver2.stop();\n  P2_table_sensors.stop();\n  selector_rot_ver3.stop();\n  P3_table_sensors.stop();\n  selector_rot_ver4.stop();\n  P4_table_sensors.stop();\n  selector_rot_ver5.stop();\n  P5_table_sensors.stop();\n  selector_rot_ver6.stop();\n  P6_table_sensors.stop();\n  OR_gate_sensors.stop();\n}\n", "raw_comment": "/** Stop the FB instances. */\n", "code": "public void stop rotating table stop pallet 1 stop pallet 2 stop pallet 3 stop pallet 4 stop pallet 5 stop pallet 6 stop kicker stop checker stop driller stop selector rot ver stop p1 table sensors stop selector rot ver2 stop p2 table sensors stop selector rot ver3 stop p3 table sensors stop selector rot ver4 stop p4 table sensors stop selector rot ver5 stop p5 table sensors stop selector rot ver6 stop p6 table sensors stop or gate sensors stop\n", "comment": "stop the fb instances\n"}
{"id": "46633357", "raw_code": "\tprivate JButton getBrowseExportButton() {\n\t\tif (browseExportButton == null) {\n\t\t\tbrowseExportButton = new JButton();\n\t\t\tbrowseExportButton.setBounds(new Rectangle(202, 62, 25, 19));\n\t\t\tbrowseExportButton.setText(\"Browse\");\n\t\t\tbrowseExportButton\n\t\t\t\t\t.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\t\t\tbrowseExport();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t}\n\t\treturn browseExportButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes browseExportButton\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "private jbutton get browse export button if browse export button null browse export button new jbutton browse export button set bounds new rectangle 202 62 25 19 browse export button set text browse browse export button add action listener new java awt event action listener public void action performed java awt event action event e browse export return browse export button\n", "comment": "this method initializes browse export button\n"}
{"id": "46633412", "raw_code": "\tprivate JButton getImportButton() {\n\t\tif (importButton == null) {\n\t\t\timportButton = new JButton();\n\t\t\timportButton.setBounds(new Rectangle(233, 24, 75, 19));\n\t\t\timportButton.setText(\"Import\");\n\t\t\timportButton.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tif (getImportTextField().getText().equals(\"\")) {\n\t\t\t\t\t\tif (browseImport() == JFileChooser.APPROVE_OPTION) {\n\t\t\t\t\t\t\timportProject();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\timportProject();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn importButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes importButton\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "private jbutton get import button if import button null import button new jbutton import button set bounds new rectangle 233 24 75 19 import button set text import import button add action listener new java awt event action listener public void action performed java awt event action event e if get import text field get text equals if browse import jfile chooser approve option import project else import project return import button\n", "comment": "this method initializes import button\n"}
{"id": "46633468", "raw_code": "\tprivate JButton getExportButton() {\n\t\tif (exportButton == null) {\n\t\t\texportButton = new JButton();\n\t\t\texportButton.setBounds(new Rectangle(232, 62, 75, 19));\n\t\t\texportButton.setText(\"Export\");\n\t\t\texportButton.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tif (getExportTextField().getText().equals(\"\")) {\n\t\t\t\t\t\tif (browseExport() == JFileChooser.APPROVE_OPTION) {\n\t\t\t\t\t\t\tcreateProject();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcreateProject();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn exportButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes exportButton\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "private jbutton get export button if export button null export button new jbutton export button set bounds new rectangle 232 62 75 19 export button set text export export button add action listener new java awt event action listener public void action performed java awt event action event e if get export text field get text equals if browse export jfile chooser approve option create project else create project return export button\n", "comment": "this method initializes export button\n"}
{"id": "46633740", "raw_code": "\tprivate JScrollPane getJScrollPane() {\n\t\tif (jScrollPane == null) {\n\t\t\tjScrollPane = new JScrollPane();\n\t\t\tjScrollPane.setViewportView(getFileTree());\n\t\t}\n\t\treturn jScrollPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jScrollPane\n\t * \n\t * @return javax.swing.JScrollPane\n\t */\n", "code": "private jscroll pane get jscroll pane if j scroll pane null j scroll pane new jscroll pane j scroll pane set viewport view get file tree return j scroll pane\n", "comment": "this method initializes j scroll pane\n"}
{"id": "46633742", "raw_code": "\tprivate JTree getProjectTree() {\n\t\tif (projectTree == null) {\n\t\t\tDefaultMutableTreeNode root = new DefaultMutableTreeNode(\"Project\");\n\t\t\tcreateProjectTree(root);\n\t\t}\n\t\treturn projectTree;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes projectTree\n\t * \n\t * @return javax.swing.JTree\n\t */\n", "code": "private jtree get project tree if project tree null default mutable tree node root new default mutable tree node project create project tree root return project tree\n", "comment": "this method initializes project tree\n"}
{"id": "46633746", "raw_code": "\tprivate JTree getFileTree() {\n\t\tif (fileTree == null) {\n\t\t\tif (document == null)\n\t\t\t\tfileTree = new ProjectTreeModel(new DefaultMutableTreeNode(\n\t\t\t\t\t\t\"Project\"), this);\n\t\t\telse {\n\t\t\t\tString file = Library.getFilePath(document);\n\t\t\t\tfile = file.substring(file.lastIndexOf(File.separatorChar) + 1);\n\t\t\t\tfileTree = new ProjectTreeModel(\n\t\t\t\t\t\tnew DefaultMutableTreeNode(file), this);\n\t\t\t}\n\t\t}\n\t\treturn fileTree;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes fileTree\n\t * \n\t * @return javax.swing.JTree\n\t */\n", "code": "private jtree get file tree if file tree null if document null file tree new project tree model new default mutable tree node project this else string file library get file path document file file substring file last index of file separator char 1 file tree new project tree model new default mutable tree node file this return file tree\n", "comment": "this method initializes file tree\n"}
{"id": "46633752", "raw_code": "\tprivate JScrollPane getJScrollPane() {\n\t\tif (jScrollPane == null) {\n\t\t\tjScrollPane = new JScrollPane();\n\t\t\tjScrollPane.setBounds(new Rectangle(7, 112, 353, 197));\n\t\t\tjScrollPane.setVisible(false);\n\t\t}\n\t\treturn jScrollPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jScrollPane\n\t * \n\t * @return javax.swing.JScrollPane\n\t */\n", "code": "private jscroll pane get jscroll pane if j scroll pane null j scroll pane new jscroll pane j scroll pane set bounds new rectangle 7 112 353 197 j scroll pane set visible false return j scroll pane\n", "comment": "this method initializes j scroll pane\n"}
{"id": "46633753", "raw_code": "\tpublic String getFilePath(Element fbtList, String fileName) {\n\t\tList directories = fbtList.getChildren(\"Directory\");\n\t\tList files = fbtList.getChildren(\"FBTFile\");\n\n\t\tString foundPath = searchFiles(files, fileName);\n\t\t// If not found in the base directory, then search all sub-directories\n\t\tif(foundPath == null) {\n\t\t\tfoundPath = searchDirectories(directories, fileName);\n\t\t}\n\n\t\t// System.out.println(\"Found in: \" + foundPath);\n\t\t// It's possible that the file can't be located in any directories\n\t\t// specified\n\t\treturn foundPath;\n\t}\n", "raw_comment": "\t/**\n\t * Use binary search algorithm to locate the specified file in the given\n\t * paths\n\t * \n\t * @param fbtList\n\t * @param fileName\n\t * @return A String specifies the target file's path\n\t */\n", "code": "public string get file path element fbt list string file name list directories fbt list get children directory list files fbt list get children fbtfile string found path search files files file name if not found in the base directory then search all sub directories if found path null found path search directories directories file name system out println found in found path it s possible that the file can t be located in any directories specified return found path\n", "comment": "use binary search algorithm to locate the specified file in the given\n"}
{"id": "46633756", "raw_code": "\tprivate JButton getBuildButton() {\n\t\tif (buildButton == null) {\n\t\t\tbuildButton = new JButton();\n\t\t\tbuildButton.setText(\"Build\");\n\t\t\tbuildButton.setFont(new Font(\"Dialog\", Font.BOLD, 14));\n\t\t\tbuildButton.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tbuild();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn buildButton;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes buildButton\n\t * \n\t * @return javax.swing.JButton\n\t */\n", "code": "private jbutton get build button if build button null build button new jbutton build button set text build build button set font new font dialog font bold 14 build button add action listener new java awt event action listener public void action performed java awt event action event e build return build button\n", "comment": "this method initializes build button\n"}
{"id": "46633780", "raw_code": "\tprivate void initialize() {\n\t\tthis.setLayout(null);\n\t\tthis.setSize(690, 421);\n\t\tthis.setTitle(\"Project Builder\");\n\t\tthis.setJMenuBar(getPJMenuBar());\n\t\tthis.setContentPane(getJContentPane());\n\t\tthis.addWindowListener(new java.awt.event.WindowAdapter() {\n\t\t\tpublic void windowClosing(java.awt.event.WindowEvent e) {\n\t\t\t\tProjectBuilder2.this.dispose();\n\t\t\t}\n\t\t});\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes this\n\t * \n\t * @return void\n\t */\n", "code": "private void initialize this set layout null this set size 690 421 this set title project builder this set jmenu bar get pjmenu bar this set content pane get jcontent pane this add window listener new java awt event window adapter public void window closing java awt event window event e project builder2 this dispose\n", "comment": "this method initializes this\n"}
{"id": "46633796", "raw_code": "\tprivate JMenuBar getPJMenuBar() {\n\t\tif (menuBar == null) {\n\t\t\tmenuBar = new JMenuBar();\n\t\t\tmenuBar.add(getFileMenu());\n\t\t}\n\t\treturn menuBar;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes menuBar\n\t * \n\t * @return javax.swing.JMenuBar\n\t */\n", "code": "private jmenu bar get pjmenu bar if menu bar null menu bar new jmenu bar menu bar add get file menu return menu bar\n", "comment": "this method initializes menu bar\n"}
{"id": "46633814", "raw_code": "\tprivate JMenuItem getExitMenuItem() {\n\t\tif (exitMenuItem == null) {\n\t\t\texitMenuItem = new JMenuItem(\"Exit\");\n\t\t\texitMenuItem.addActionListener(new java.awt.event.ActionListener() {\n\t\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent e) {\n\t\t\t\t\tProjectBuilder2.this.setVisible(false);\n\t\t\t\t\tProjectBuilder2.this.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn exitMenuItem;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes exitMenuItem\n\t * \n\t * @return javax.swing.JMenuItem\n\t */\n", "code": "private jmenu item get exit menu item if exit menu item null exit menu item new jmenu item exit exit menu item add action listener new java awt event action listener public void action performed java awt event action event e project builder2 this set visible false project builder2 this dispose return exit menu item\n", "comment": "this method initializes exit menu item\n"}
{"id": "46633855", "raw_code": "\tprivate JEditorPane getOutputPane() {\n\t\tif (outputPane == null) {\n\t\t\toutputPane = new JEditorPane();\n\t\t\toutputPane.setEditable(false);\n\t\t}\n\t\treturn outputPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes outputPane\n\t * \n\t * @return javax.swing.JEditorPane\n\t */\n", "code": "private jeditor pane get output pane if output pane null output pane new jeditor pane output pane set editable false return output pane\n", "comment": "this method initializes output pane\n"}
{"id": "46633874", "raw_code": "\tprivate JSplitPane getMainSplitPane() {\n\t\tif (mainSplitPane == null) {\n\t\t\tmainSplitPane = new JSplitPane();\n\t\t\tmainSplitPane.setDividerLocation(250);\n\t\t\tmainSplitPane.setContinuousLayout(true);\n\t\t\tmainSplitPane.setLeftComponent(getLeftPanel());\n\t\t\tmainSplitPane.setRightComponent(new JScrollPane(getOutputPane()));\n\t\t}\n\t\treturn mainSplitPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes mainSplitPane\n\t * \n\t * @return javax.swing.JSplitPane\n\t */\n", "code": "private jsplit pane get main split pane if main split pane null main split pane new jsplit pane main split pane set divider location 250 main split pane set continuous layout true main split pane set left component get left panel main split pane set right component new jscroll pane get output pane return main split pane\n", "comment": "this method initializes main split pane\n"}
{"id": "46633895", "raw_code": "\tprivate JComboBox getXslComboBox() {\n\t\tif (xslComboBox == null) {\n\t\t\txslComboBox = new JComboBox();\n\t\t\tString[] sheets = StyleSheetSource.getAllSheets();\n\t\t\tfor (String sheet : sheets)\n\t\t\t\txslComboBox.addItem(sheet);\n\t\t\txslComboBox.setSelectedItem(\"DOMtoJava.xsl\");\n\t\t}\n\t\treturn xslComboBox;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes xslComboBox\n\t * \n\t * @return javax.swing.JComboBox\n\t */\n", "code": "private jcombo box get xsl combo box if xsl combo box null xsl combo box new jcombo box string sheets style sheet source get all sheets for string sheet sheets xsl combo box add item sheet xsl combo box set selected item domto java xsl return xsl combo box\n", "comment": "this method initializes xsl combo box\n"}
{"id": "35488183", "raw_code": "\tpublic void setAnswer(int i, String value) {\n\t\tDate now = new Date();\n\t\tlong timespan = (now.getTime() - sessionOpened.getTime());\n\t\tif (sessionClosed != null || timespan > assessment.maxTime * 60 * 1000) {\n\t\t\tif (sessionClosed == null) {\n\t\t\t\tclose();\n\t\t\t}\n\t\t\tthrow new RuntimeException(\"Session should be closed\");\n\t\t}\n\t\tif (i < answers.size()) {\n\t\t\tanswers.get(i).setValue(value);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Record another answer or throw an exception, if the time\n\t * has expired. \n\t * @param i\n\t * @param value\n\t */\n", "code": "public void set answer int i string value date now new date long timespan now get time session opened get time if session closed null timespan assessment max time 60 1000 if session closed null close throw new runtime exception session should be closed if i answers size answers get i set value value\n", "comment": "record another answer or throw an exception if the time\n"}
{"id": "35488441", "raw_code": "\tpublic float getOffsetX() {\n\t\tPoint2D.Float offset = enclosing.findOffset(this);\n\t\toffsetX = offset.x;\n\t\treturn offsetX;\n\t}\n", "raw_comment": "\t/**\n\t * Return horizonal offset\n\t */\n", "code": "public float get offset x point2 d float offset enclosing find offset this offset x offset x return offset x\n", "comment": "return horizonal offset\n"}
{"id": "35488443", "raw_code": "\tpublic float getOffsetY() {\n\t\tPoint2D.Float offset = enclosing.findOffset(this);\n\t\toffsetY = offset.y;\n\t\treturn offsetY;\n\t}\n", "raw_comment": "\t/**\n\t * Return vertical offset\n\t */\n", "code": "public float get offset y point2 d float offset enclosing find offset this offset y offset y return offset y\n", "comment": "return vertical offset\n"}
{"id": "35488495", "raw_code": "\tpublic Component getStaticComponent(Resource r) {\n\t\tComponent result = null;\n\t\tif (cache.containsKey(r)) {\n\t\t\tresult = cache.get(r);\n\t\t\tSystem.out.println(\".....Got \" + result.getId() + \" form cache\");\n\t\t} else {\n\t\t\tComponent c = createNewComponent(r, null);\n\t\t\tcache.put(r, c);\n\t\t\tresult = c;\n\t\t\tSystem.out.println(\".....Created \" + result.getId());\n\t\t}\n\t\treturn result;\n\t}\n", "raw_comment": "\t/**\n\t * Get a component from an RDF component description.\n\t * \n\t * <p>\n\t * Multiple calls with the same argument will return the same (==)\n\t * component.\n\t * </p>\n\t * \n\t * @param r\n\t *            the RDF description of the component.\n\t * @return the requested component.\n\t * @throws PortalConfigurationException\n\t *             if factory for the resource cannot be found\n\t */\n", "code": "public component get static component resource r component result null if cache contains key r result cache get r system out println got result get id form cache else component c create new component r null cache put r c result c system out println created result get id return result\n", "comment": "get a component from an rdf component description\n"}
{"id": "12225929", "raw_code": "\tpublic void checkForUpdates() {\n\t\tdisableAll();\n\t\tgetWatcherList().checkForUpDates();\n\t\tif (createLocationsCombo()) {\n\t\t\tenableAll();\n\t\t} else {\n\t\t\tgetRefreshWatcher().setEnabled(true);\n\t\t}\n\t\trefreshCombo((String) getWatchedLocations().getSelectedItem());\n\t\tJOptionPane.showMessageDialog(null, \"update complete\");\n\t}\n", "raw_comment": "\t/** This method checks for any updates */\n", "code": "public void check for updates disable all get watcher list check for up dates if create locations combo enable all else get refresh watcher set enabled true refresh combo string get watched locations get selected item joption pane show message dialog null update complete\n", "comment": "this method checks for any updates\n"}
{"id": "12225933", "raw_code": "\tpublic void removeFliter(){\n\t\tgetTs().setRowFilter(null);\n\t}\n", "raw_comment": "\t/**Thi sremoves the filter from the table sorter*/\n", "code": "public void remove fliter get ts set row filter null\n", "comment": "thi sremoves the filter from the table sorter\n"}
{"id": "12225946", "raw_code": "\tpublic void refreshFolderCombo(String location) {\n\t\tindex.removeAllElements();\n\t\twatchedFolders.removeAllItems();\n\t\tfor (int i = 0; i < watcherList.size(); i++) {\n\t\t\tif (location.equalsIgnoreCase(watcherList.get(i).getDirectoryLocation().substring(0,\n\t\t\t        watcherList.get(i).getDirectoryLocation().lastIndexOf('/')))) {\n\t\t\t\tindex.add(i);\n\t\t\t\twatchedFolders.addItem(watcherList.get(i).getTitleOfAnime());\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * This method repopulates the folders combobox\n\t */\n", "code": "public void refresh folder combo string location index remove all elements watched folders remove all items for int i 0 i watcher list size i if location equals ignore case watcher list get i get directory location substring 0 watcher list get i get directory location last index of index add i watched folders add item watcher list get i get title of anime\n", "comment": "this method repopulates the folders combobox\n"}
{"id": "12225947", "raw_code": "\tpublic void createLocationsCombo() {\n\t\tVector<String> vector = new Vector<String>();\n\t\tfor (int i = 0; i < watcherList.size(); i++) {\n\t\t\tString location = watcherList.get(i).getDirectoryLocation().substring(0,\n\t\t\t        watcherList.get(i).getDirectoryLocation().lastIndexOf('/'));\n\t\t\tif (!vector.contains(location)) {\n\t\t\t\tvector.add(location);\n\t\t\t}\n\t\t}\n\t\twatchedLocations = new JComboBox(vector);\n\t\twatchedLocations.setPreferredSize(new Dimension(240, 20));\n\t\twatchedLocations.addActionListener(new locationChanged());\n\t}\n", "raw_comment": "\t/**\n\t * This method populates the Locations combobox\n\t */\n", "code": "public void create locations combo vector string vector new vector string for int i 0 i watcher list size i string location watcher list get i get directory location substring 0 watcher list get i get directory location last index of if vector contains location vector add location watched locations new jcombo box vector watched locations set preferred size new dimension 240 20 watched locations add action listener new location changed\n", "comment": "this method populates the locations combobox\n"}
{"id": "12225953", "raw_code": "\t\tpublic void paintComponent(Graphics g) {\n\t\t\tGraphics2D g2d = (Graphics2D) g;\n\t\t\tImage imageIcon;\n\t\t\ttry {\n\t\t\t\timageIcon = ImageIO.read(new URL(URL));\n\t\t\t\timageIcon=imageIcon.getScaledInstance(200, 125,Image.SCALE_SMOOTH);\n\t\t\t\tg.drawImage(imageIcon,0,0,null);\n\t\t\t\tg2d.setFont(new Font(\"new Roman\", Font.PLAIN, 30));\n\t\t\t} catch (MalformedURLException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n", "raw_comment": "\t\t/**\n\t\t * this method paint an image onto the backgroud of the panel\n\t\t */\n", "code": "public void paint component graphics g graphics2 d g2d graphics2 d g image image icon try image icon image io read new url url image icon image icon get scaled instance 200 125 image scale smooth g draw image image icon 0 0 null g2d set font new font new roman font plain 30 catch malformed urlexception e e print stack trace catch ioexception e e print stack trace\n", "comment": "this method paint an image onto the backgroud of the panel\n"}
{"id": "12226036", "raw_code": "\tpublic void refreshTable() {\n\t\tfor (int i = getTablemodel().getRowCount() - 1; i >= 0; i--) {\n\t\t\tgetTablemodel().removeRow(i);\n\t\t}\n\t\tfor (int i = 0; i < getDownloadList().size(); i++) {\n\t\t\tVector v = new Vector();\n\t\t\tv.add(getDownloadList().get(i).getDownloadFileName());\n\t\t\tv.add(getDownloadList().get(i).getSize());\n\t\t\tv.add(getDownloadList().get(i).getDownloadPercent());\n\t\t\tgetTablemodel().addRow(v);\n\t\t}\n\t}\n", "raw_comment": "\t/**this mothod refreshes the table from the download list*/\n", "code": "public void refresh table for int i get tablemodel get row count 1 i 0 i get tablemodel remove row i for int i 0 i get download list size i vector v new vector v add get download list get i get download file name v add get download list get i get size v add get download list get i get download percent get tablemodel add row v\n", "comment": "this mothod refreshes the table from the download list\n"}
{"id": "12226081", "raw_code": "\tpublic void refreshCombo(String location) {\n\t\tgetWatchedFolders().removeAllItems();\n\t\tgetNumInList().removeAllElements();\n\t\tgetWatchedFolders().setEnabled(false);\n\t\tif (location != null && location.length() > 0) {\n\t\t\tfor (int i = 0; i < getWatcherList().size(); i++) {\n\t\t\t\tif (getWatcherList().get(i).getDirectoryLocation().contains(location) && getWatcherList().get(i).getUpdate()) {\n\t\t\t\t\tgetWatchedFolders().setEnabled(true);\n\t\t\t\t\tgetWatchedFolders().addItem(getWatcherList().get(i).getTitleOfAnime());\n\t\t\t\t\tgetNumInList().add(i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/** This refreshes the combox box with the latest updated series */\n", "code": "public void refresh combo string location get watched folders remove all items get num in list remove all elements get watched folders set enabled false if location null location length 0 for int i 0 i get watcher list size i if get watcher list get i get directory location contains location get watcher list get i get update get watched folders set enabled true get watched folders add item get watcher list get i get title of anime get num in list add i\n", "comment": "this refreshes the combox box with the latest updated series\n"}
{"id": "12226273", "raw_code": "\tpublic void paintComponent(Graphics g) {\n\t\tsuper.paintComponent(g);\n\t\tImage imageIcon = null;\n\t\ttry {\n\t\t\timageIcon = ImageIO.read(getClass().getResource(\"/images/\"+pic));\n\t\t\timageIcon=imageIcon.getScaledInstance(getWidth(),getHeight(),Image.SCALE_SMOOTH);\n\t\t\tg.drawImage(imageIcon,0,0,null);\n\t\t} catch (MalformedURLException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t catch (NullPointerException e) {\n\t\t\te.printStackTrace();\n\t}\n\t}\n", "raw_comment": "\t/**\n\t * this method paint an image onto the backgroud of the panel\n\t */\n", "code": "public void paint component graphics g super paint component g image image icon null try image icon image io read get class get resource images pic image icon image icon get scaled instance get width get height image scale smooth g draw image image icon 0 0 null catch malformed urlexception e e print stack trace catch ioexception e e print stack trace catch null pointer exception e e print stack trace\n", "comment": "this method paint an image onto the backgroud of the panel\n"}
{"id": "12226299", "raw_code": "\tpublic JProgressBar getDownloadPercent() {\n\t\treturn downloadPercent;\n\t}\n", "raw_comment": "\t/**This gets the download progress of an episode\n\t * @return the download progress of an episode\n\t */\n", "code": "public jprogress bar get download percent return download percent\n", "comment": "this gets the download progress of an episode\n"}
{"id": "12226300", "raw_code": "\tpublic void setSize(double sizetIn) {\n\t\tsize=sizetIn;\n\t}\n", "raw_comment": "\t/**This sets the size of an episode\n\t * @param sizetIn the size of an episode\n\t */\n", "code": "public void set size double sizet in size sizet in\n", "comment": "this sets the size of an episode\n"}
{"id": "12226312", "raw_code": "\tpublic Date getLastUpDate() {\n\t\treturn lastUpDate;\n\t}\n", "raw_comment": "\t/**This is the lastupdated date of a series\n\t * @return lastupdated date of a series\n\t */\n", "code": "public date get last up date return last up date\n", "comment": "this is the lastupdated date of a series\n"}
{"id": "12226313", "raw_code": "\tpublic Date getLastChecked() {\n\t\treturn lastChecked;\n\t}\n", "raw_comment": "\t/**This gets the last checked date\n\t * @return the last checked date\n\t */\n", "code": "public date get last checked return last checked\n", "comment": "this gets the last checked date\n"}
{"id": "12226314", "raw_code": "\tpublic void setUpdate() {\n\t\tif (lastUpDate!= null && lastChecked!= null && lastUpDate.compareTo(lastChecked)>=0)\n\t\t{\n\t\t\tupdate = true;\n\t\t}else{\n\t\t\tupdate = false;\n\t\t}\n\t}\n", "raw_comment": "\t/**sets the update flag for a series*/\n", "code": "public void set update if last up date null last checked null last up date compare to last checked 0 update true else update false\n", "comment": "sets the update flag for a series\n"}
{"id": "12226316", "raw_code": "\tpublic void setLastUpdated(Date lastUpdatedIn) {\n\t\tlastUpDate = lastUpdatedIn;\n\t}\n", "raw_comment": "\t/**This sets the last updated date\n\t * @param lastUpdatedIn the date that a series was last updated\n\t */\n", "code": "public void set last updated date last updated in last up date last updated in\n", "comment": "this sets the last updated date\n"}
{"id": "12226317", "raw_code": "\tpublic void setLastChecked(Date lastCheckedIn) {\n\t\tlastChecked = lastCheckedIn;\n\t}\n", "raw_comment": "\t/**This sets the last checked date\n\t * @param lastUpdatedIn the date that a series was last checked\n\t */\n", "code": "public void set last checked date last checked in last checked last checked in\n", "comment": "this sets the last checked date\n"}
{"id": "12226319", "raw_code": "\tpublic Date getLastUpdated() {\n\t\treturn lastUpDate;\n\t}\n", "raw_comment": "\t/**This gets the last updated date \n\t * @return the last updated date \n\t */\n", "code": "public date get last updated return last up date\n", "comment": "this gets the last updated date\n"}
{"id": "12226320", "raw_code": "\tpublic String getTitleOfAnime() {\n\t\treturn titleOfAnime;\n\t}\n", "raw_comment": "\t/**This returns the tite of the series/episode\n\t * @return the tite of the series/episode\n\t */\n", "code": "public string get title of anime return title of anime\n", "comment": "this returns the tite of the series episode\n"}
{"id": "12226323", "raw_code": "\tpublic String getDirectoryLocation() {\n\t\treturn DirectoryLocation;\n\t}\n", "raw_comment": "\t/**This returns the location of a series/episode\n\t * @return the location of a series/episode\n\t */\n", "code": "public string get directory location return directory location\n", "comment": "this returns the location of a series episode\n"}
{"id": "12226328", "raw_code": "\tpublic void setTitleOfAnime(String titleOfAnime) {\n\t\tthis.titleOfAnime=titleOfAnime;\n\t}\n", "raw_comment": "\t/**This returns the tite of the series/episode\n\t * @return the tite of the series/episode\n\t */\n", "code": "public void set title of anime string title of anime this title of anime title of anime\n", "comment": "this returns the tite of the series episode\n"}
{"id": "12226331", "raw_code": "\tpublic void setDirectoryLocation(String directoryLocation) {\n\t\tthis.directoryLocation=directoryLocation;\n\t}\n", "raw_comment": "\t/**This returns the location of a series/episode\n\t * @return the location of a series/episode\n\t */\n", "code": "public void set directory location string directory location this directory location directory location\n", "comment": "this returns the location of a series episode\n"}
{"id": "12226334", "raw_code": "\tpublic void setUpdate() {\n\t\tif (lastUpDate.compareTo(lastChecked)>=0)\n\t\t{\n\t\t\tupdate = true;\n\t\t}else{\n\t\t\tupdate = false;\n\t\t}\n\t}\n", "raw_comment": "\t/**sets the update flag for a series*/\n", "code": "public void set update if last up date compare to last checked 0 update true else update false\n", "comment": "sets the update flag for a series\n"}
{"id": "47685386", "raw_code": "    public PrefixedProperties getPrefixedProperties() {\n\treturn myProperties;\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed properties.\n     * \n     * @return the prefixed properties\n     */\n", "code": "public prefixed properties get prefixed properties return my properties\n", "comment": "gets the prefixed properties\n"}
{"id": "47685388", "raw_code": "    public void loadFromJson(final Properties props, final InputStream is) throws IOException {\n\ttry {\n\t    ((PrefixedProperties) props).loadFromJSON(is);\n\t} catch (final NoSuchMethodError err) {\n\t    throw new IOException(\"Cannot load properties JSON file - not using PrefixedProperties: \" + err.getMessage());\n\t}\n    }\n", "raw_comment": "    /**\n     * Loads from json.\n     * \n     * @param props\n     *            the props\n     * @param is\n     *            the is\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void load from json final properties props final input stream is throws ioexception try prefixed properties props load from json is catch final no such method error err throw new ioexception cannot load properties json file not using prefixed properties err get message\n", "comment": "loads from json\n"}
{"id": "47685390", "raw_code": "    public void loadFromJson(final Properties props, final Reader rd) throws IOException {\n\ttry {\n\t    ((PrefixedProperties) props).loadFromJSON(rd);\n\t} catch (final NoSuchMethodError err) {\n\t    throw new IOException(\"Cannot load properties JSON file - not using PrefixedProperties: \" + err.getMessage());\n\t}\n    }\n", "raw_comment": "    /**\n     * Load from json.\n     * \n     * @param props\n     *            the props\n     * @param rd\n     *            the rd\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void load from json final properties props final reader rd throws ioexception try prefixed properties props load from json rd catch final no such method error err throw new ioexception cannot load properties json file not using prefixed properties err get message\n", "comment": "load from json\n"}
{"id": "47685391", "raw_code": "    public void setDefaultPrefix(final String defaultPrefix) {\n\tthis.defaultPrefix = defaultPrefix;\n    }\n", "raw_comment": "    /**\n     * Sets the default prefix.\n     * \n     * @param defaultPrefix\n     *            the new default prefix\n     */\n", "code": "public void set default prefix final string default prefix this default prefix default prefix\n", "comment": "sets the default prefix\n"}
{"id": "47685393", "raw_code": "    public void storeToJSON(final Properties props, final OutputStream os) throws IOException {\n\ttry {\n\t    ((PrefixedProperties) props).storeToJSON(os);\n\t} catch (final ClassCastException err) {\n\t    throw new IOException(\"Cannot store properties JSON file - not using PrefixedProperties: \" + err.getMessage());\n\t}\n    }\n", "raw_comment": "    /**\n     * Store to json.\n     * \n     * @param props\n     *            the props\n     * @param os\n     *            the os\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void store to json final properties props final output stream os throws ioexception try prefixed properties props store to json os catch final class cast exception err throw new ioexception cannot store properties json file not using prefixed properties err get message\n", "comment": "store to json\n"}
{"id": "47685394", "raw_code": "    public void storeToJSON(final Properties props, final OutputStream os, final String header) throws IOException {\n\ttry {\n\t    ((PrefixedProperties) props).storeToJSON(os, header);\n\t} catch (final ClassCastException err) {\n\t    throw new IOException(\"Cannot store properties JSON file - not using PrefixedProperties: \" + err.getMessage());\n\t}\n    }\n", "raw_comment": "    /**\n     * Store to json.\n     * \n     * @param props\n     *            the props\n     * @param os\n     *            the os\n     * @param header\n     *            the header\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void store to json final properties props final output stream os final string header throws ioexception try prefixed properties props store to json os header catch final class cast exception err throw new ioexception cannot store properties json file not using prefixed properties err get message\n", "comment": "store to json\n"}
{"id": "47685395", "raw_code": "    public boolean getProcessOtherProperties() {\n\treturn this.processOtherProperties;\n    }\n", "raw_comment": "    /**\n     * Gets the process properties.\n     * \n     * @return the process properties\n     */\n", "code": "public boolean get process other properties return this process other properties\n", "comment": "gets the process properties\n"}
{"id": "47685398", "raw_code": "    public void storeToJSON(final Properties props, final OutputStream os, final String header, final String encoding) throws IOException {\n\ttry {\n\t    ((PrefixedProperties) props).storeToJSON(os, header, encoding);\n\t} catch (final ClassCastException err) {\n\t    throw new IOException(\"Cannot store properties JSON file - not using PrefixedProperties: \" + err.getMessage());\n\t}\n    }\n", "raw_comment": "    /**\n     * Store to json.\n     * \n     * @param props\n     *            the props\n     * @param os\n     *            the os\n     * @param header\n     *            the header\n     * @param encoding\n     *            the encoding\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void store to json final properties props final output stream os final string header final string encoding throws ioexception try prefixed properties props store to json os header encoding catch final class cast exception err throw new ioexception cannot store properties json file not using prefixed properties err get message\n", "comment": "store to json\n"}
{"id": "47685400", "raw_code": "    public void setEnvironmentFactory(final EnvironmentFactory environmentFactory) {\n\tthis.environmentFactory = environmentFactory;\n    }\n", "raw_comment": "    /**\n     * Sets the environment factory.\n     * \n     * @param environmentFactory\n     *            the new environment factory\n     */\n", "code": "public void set environment factory final environment factory environment factory this environment factory environment factory\n", "comment": "sets the environment factory\n"}
{"id": "47685403", "raw_code": "    public PrefixedProperties getProperties() {\n\treturn myProperties;\n    }\n", "raw_comment": "    /**\n     * Gets the properties.\n     * \n     * @return the properties\n     */\n", "code": "public prefixed properties get properties return my properties\n", "comment": "gets the properties\n"}
{"id": "47685417", "raw_code": "    public void setPrefixConfigs(final List<PrefixConfig> configList) {\n\tprefixConfigList = configList;\n    }\n", "raw_comment": "    /**\n     * Sets the prefix configs to build up a {@link PrefixedProperties}-Structure.\n     * \n     * @param configList\n     *            the new prefix configs\n     */\n", "code": "public void set prefix configs final list prefix config config list prefix config list config list\n", "comment": "sets the prefix configs to build up a\n"}
{"id": "47685424", "raw_code": "    public void setPrefixConfigs(final List<PrefixConfig> configs) {\n\tprefixConfigList = configs;\n    }\n", "raw_comment": "    /**\n     * Sets the prefix configs.\n     * \n     * @param configs\n     *            the new prefix configs\n     */\n", "code": "public void set prefix configs final list prefix config configs prefix config list configs\n", "comment": "sets the prefix configs\n"}
{"id": "47685463", "raw_code": "    public void clear() {\n\ttry {\n\t    lock.writeLock().lock();\n\t    prefixes.clear();\n\t} finally {\n\t    lock.writeLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Clears the prefixes, the default prefix and set the delimiter to '.'.\n     */\n", "code": "public void clear try lock write lock lock prefixes clear finally lock write lock unlock\n", "comment": "clears the prefixes the default prefix and set the delimiter to\n"}
{"id": "47685464", "raw_code": "    public String getConfiguredPrefix() {\n\treturn properties.getConfiguredPrefix();\n    }\n", "raw_comment": "    /**\n     * Gets the configured prefix.\n     * \n     * @return the configured prefix\n     */\n", "code": "public string get configured prefix return properties get configured prefix\n", "comment": "gets the configured prefix\n"}
{"id": "47685466", "raw_code": "    public PrefixedProperties getPrefixedProperties() {\n\treturn properties;\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed properties.\n     * \n     * @return the prefixed properties\n     */\n", "code": "public prefixed properties get prefixed properties return properties\n", "comment": "gets the prefixed properties\n"}
{"id": "47685471", "raw_code": "    public void setDefaultPrefix(final String prefix) {\n\tproperties.setDefaultPrefix(prefix);\n    }\n", "raw_comment": "    /**\n     * Sets the default prefix.\n     * \n     * @param prefix\n     *            the new default prefix\n     */\n", "code": "public void set default prefix final string prefix properties set default prefix prefix\n", "comment": "sets the default prefix\n"}
{"id": "47685540", "raw_code": "    protected char getPrefixDelimiter() {\n\treturn PREFIXDELIMITER;\n    }\n", "raw_comment": "    /**\n     * Gets the prefix delimiter.\n     * \n     * @return the prefix delimiter\n     */\n", "code": "protected char get prefix delimiter return prefixdelimiter\n", "comment": "gets the prefix delimiter\n"}
{"id": "47685545", "raw_code": "    protected void setPrefixes(final Collection<String> prefixesToSet) {\n\tif (prefixesToSet == null) {\n\t    throw new IllegalArgumentException(\"The given prefixSet is not allowed to be null.\");\n\t}\n\tfinal Set<String> newPrefixes = new TreeSet<String>();\n\tfor (final String prefixString : prefixesToSet) {\n\t    if (StringUtils.isNotBlank(prefixString)) {\n\t\tnewPrefixes.add(prefixString);\n\t    }\n\t}\n\ttry {\n\t    lock.writeLock().lock();\n\t    prefixes = newPrefixes;\n\t    if (getPrefix() != null && !prefixes.contains(getPrefix())) {\n\t\tdefaultPrefix = null;\n\t\tlocalPrefix.remove();\n\t    }\n\t} finally {\n\t    lock.writeLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Sets the prefixes.\n     * \n     * @param prefixesToSet\n     *            the new prefixes\n     */\n", "code": "protected void set prefixes final collection string prefixes to set if prefixes to set null throw new illegal argument exception the given prefix set is not allowed to be null final set string new prefixes new tree set string for final string prefix string prefixes to set if string utils is not blank prefix string new prefixes add prefix string try lock write lock lock prefixes new prefixes if get prefix null prefixes contains get prefix default prefix null local prefix remove finally lock write lock unlock\n", "comment": "sets the prefixes\n"}
{"id": "47685546", "raw_code": "    protected void setPrefixes(final String... prefixesToSet) {\n\tsetPrefixes(Arrays.asList(prefixesToSet));\n    }\n", "raw_comment": "    /**\n     * Sets the prefixes.\n     * \n     * @param prefixesToSet\n     *            the new prefixes\n     */\n", "code": "protected void set prefixes final string prefixes to set set prefixes arrays as list prefixes to set\n", "comment": "sets the prefixes\n"}
{"id": "47685632", "raw_code": "    public boolean getBoolean(final String key) {\n\treturn Boolean.valueOf(getProperty(key)).booleanValue();\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an boolean-value. If the key was not found it will always return false.\n     * \n     * @param key\n     *            key value\n     * \n     * @return boolean-representation of value\n     */\n", "code": "public boolean get boolean final string key return boolean value of get property key boolean value\n", "comment": "gets the prefixed key and parse it to an boolean value\n"}
{"id": "47685674", "raw_code": "    public boolean getBoolean(final String key, final boolean def) {\n\tfinal String value = getProperty(key);\n\treturn value != null ? Boolean.valueOf(value).booleanValue() : def;\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an boolean-value.\n     * \n     * @param key\n     *            key value\n     * @param def\n     *            default value\n     * \n     * @return boolean-representation of value\n     */\n", "code": "public boolean get boolean final string key final boolean def final string value get property key return value null boolean value of value boolean value def\n", "comment": "gets the prefixed key and parse it to an boolean value\n"}
{"id": "47685721", "raw_code": "    public byte getByte(final String key) {\n\tfinal String value = getProperty(key);\n\tif (value == null) {\n\t    throw new NumberFormatException(\"Couldn't parse property to byte.\");\n\t}\n\treturn Byte.parseByte(value);\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an byte-value.\n     * \n     * @param key\n     *            key value\n     * @return byte-representation of value\n     */\n", "code": "public byte get byte final string key final string value get property key if value null throw new number format exception couldn t parse property to byte return byte parse byte value\n", "comment": "gets the prefixed key and parse it to an byte value\n"}
{"id": "47685770", "raw_code": "    public byte getByte(final String key, final byte def) {\n\ttry {\n\t    return getByte(key);\n\t} catch (final NumberFormatException nfe) {\n\t    return def;\n\t}\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an byte-value.\n     * \n     * @param key\n     *            key value\n     * @param def\n     *            default value\n     * \n     * @return byte-representation of value\n     */\n", "code": "public byte get byte final string key final byte def try return get byte key catch final number format exception nfe return def\n", "comment": "gets the prefixed key and parse it to an byte value\n"}
{"id": "47685805", "raw_code": "    public String getConfiguredPrefix() {\n\ttry {\n\t    lock.readLock().lock();\n\t    return getPrefix(new StringBuilder()).toString();\n\t} finally {\n\t    lock.readLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Gets the prefix.\n     * \n     * @return the prefix\n     */\n", "code": "public string get configured prefix try lock read lock lock return get prefix new string builder to string finally lock read lock unlock\n", "comment": "gets the prefix\n"}
{"id": "47685835", "raw_code": "    public double getDouble(final String key) {\n\tfinal String value = getProperty(key);\n\tif (value == null) {\n\t    throw new NumberFormatException(\"Couldn't parse property to double.\");\n\t}\n\treturn Double.parseDouble(value);\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an double-value.\n     * \n     * @param key\n     *            key value\n     * @return double-representation of value\n     */\n", "code": "public double get double final string key final string value get property key if value null throw new number format exception couldn t parse property to double return double parse double value\n", "comment": "gets the prefixed key and parse it to an double value\n"}
{"id": "47685859", "raw_code": "    public double getDouble(final String key, final double def) {\n\ttry {\n\t    return getDouble(key);\n\t} catch (final NumberFormatException nfe) {\n\t    return def;\n\t}\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an double-value.\n     * \n     * @param key\n     *            key value\n     * @param def\n     *            default value\n     * \n     * @return double-representation of value\n     */\n", "code": "public double get double final string key final double def try return get double key catch final number format exception nfe return def\n", "comment": "gets the prefixed key and parse it to an double value\n"}
{"id": "47685879", "raw_code": "    public float getFloat(final String key) {\n\tfinal String value = getProperty(key);\n\tif (value == null) {\n\t    throw new NumberFormatException(\"Couldn't parse property to float.\");\n\t}\n\treturn Float.parseFloat(value);\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an float-value.\n     * \n     * @param key\n     *            key value\n     * @return float-representation of value\n     */\n", "code": "public float get float final string key final string value get property key if value null throw new number format exception couldn t parse property to float return float parse float value\n", "comment": "gets the prefixed key and parse it to an float value\n"}
{"id": "47685935", "raw_code": "    public float getFloat(final String key, final float def) {\n\ttry {\n\t    return getFloat(key);\n\t} catch (final NumberFormatException nfe) {\n\t    return def;\n\t}\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an float-value.\n     * \n     * @param key\n     *            key value\n     * @param def\n     *            default value\n     * \n     * @return float-representation of value\n     */\n", "code": "public float get float final string key final float def try return get float key catch final number format exception nfe return def\n", "comment": "gets the prefixed key and parse it to an float value\n"}
{"id": "47685959", "raw_code": "    public int getInt(final String key) {\n\tfinal String value = getProperty(key);\n\tif (value == null) {\n\t    throw new NumberFormatException(\"Couldn't parse property to int.\");\n\t}\n\treturn Integer.parseInt(value);\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an int-value.\n     * \n     * @param key\n     *            key value\n     * @return int-representation of value\n     */\n", "code": "public int get int final string key final string value get property key if value null throw new number format exception couldn t parse property to int return integer parse int value\n", "comment": "gets the prefixed key and parse it to an int value\n"}
{"id": "47685993", "raw_code": "    public long getLong(final String key) {\n\tfinal String value = getProperty(key);\n\tif (value == null) {\n\t    throw new NumberFormatException(\"Couldn't parse property to long.\");\n\t}\n\treturn Long.parseLong(value);\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an long-value.\n     * \n     * @param key\n     *            key value\n     * @return long-representation of value\n     */\n", "code": "public long get long final string key final string value get property key if value null throw new number format exception couldn t parse property to long return long parse long value\n", "comment": "gets the prefixed key and parse it to an long value\n"}
{"id": "47686003", "raw_code": "    public long getLong(final String key, final long def) {\n\ttry {\n\t    return getLong(key);\n\t} catch (final NumberFormatException nfe) {\n\t    return def;\n\t}\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an long-value.\n     * \n     * @param key\n     *            key value\n     * @param def\n     *            default value\n     * \n     * @return long-representation of value\n     */\n", "code": "public long get long final string key final long def try return get long key catch final number format exception nfe return def\n", "comment": "gets the prefixed key and parse it to an long value\n"}
{"id": "47686021", "raw_code": "    public PrefixConfig getPrefixConfig() {\n\ttry {\n\t    lock.readLock().lock();\n\t    return prefixes;\n\t} finally {\n\t    lock.readLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Gets the prefix config.\n     * \n     * @return the prefix config\n     */\n", "code": "public prefix config get prefix config try lock read lock lock return prefixes finally lock read lock unlock\n", "comment": "gets the prefix config\n"}
{"id": "47686064", "raw_code": "    public short getShort(final String key) {\n\tfinal String value = getProperty(key);\n\tif (value == null) {\n\t    throw new NumberFormatException(\"Couldn't parse property to short.\");\n\t}\n\treturn Short.parseShort(value);\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an byte-value.\n     * \n     * @param key\n     *            key value\n     * @return byte-representation of value\n     */\n", "code": "public short get short final string key final string value get property key if value null throw new number format exception couldn t parse property to short return short parse short value\n", "comment": "gets the prefixed key and parse it to an byte value\n"}
{"id": "47686086", "raw_code": "    public short getShort(final String key, final short def) {\n\ttry {\n\t    return getShort(key);\n\t} catch (final NumberFormatException nfe) {\n\t    return def;\n\t}\n    }\n", "raw_comment": "    /**\n     * Gets the prefixed key and parse it to an short-value.\n     * \n     * @param key\n     *            key value\n     * @param def\n     *            default value\n     * \n     * @return short-representation of value\n     */\n", "code": "public short get short final string key final short def try return get short key catch final number format exception nfe return def\n", "comment": "gets the prefixed key and parse it to an short value\n"}
{"id": "47686325", "raw_code": "    public void loadFromJSON(final InputStream is) throws IOException {\n\ttry {\n\t    lock.writeLock().lock();\n\t    final JsonFactory f = new JsonFactory();\n\t    final JsonParser jp = f.createJsonParser(is);\n\t    configureJsonParser(jp);\n\t    if (jp.nextToken() == JsonToken.START_OBJECT) {\n\t\ttraverseJSON(jp, null);\n\t    }\n\t} finally {\n\t    lock.writeLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Loads a json file. Reading from the given InputStream. The InputStream itself will not be closed after usage.\n     * \n     * @param is\n     *            the is\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void load from json final input stream is throws ioexception try lock write lock lock final json factory f new json factory final json parser jp f create json parser is configure json parser jp if jp next token json token start object traverse json jp null finally lock write lock unlock\n", "comment": "loads a json file\n"}
{"id": "47686350", "raw_code": "    public void loadFromJSON(final Reader reader) throws IOException {\n\ttry {\n\t    lock.writeLock().lock();\n\t    final JsonFactory f = new JsonFactory();\n\t    final JsonParser jp = f.createJsonParser(reader);\n\t    configureJsonParser(jp);\n\t    if (jp.nextToken() == JsonToken.START_OBJECT) {\n\t\ttraverseJSON(jp, null);\n\t    }\n\t} finally {\n\t    lock.writeLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Load a json file by using the given Reader. The reader will not be closed by the method.\n     * \n     * @param reader\n     *            the reader\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void load from json final reader reader throws ioexception try lock write lock lock final json factory f new json factory final json parser jp f create json parser reader configure json parser jp if jp next token json token start object traverse json jp null finally lock write lock unlock\n", "comment": "load a json file by using the given reader\n"}
{"id": "47686621", "raw_code": "    public void removeProperty(final String key) {\n\tremove(key);\n    }\n", "raw_comment": "    /**\n     * Removes the property. That matches the given key. (It has the same function like {@link java.util.Properties#remove(Object)}\n     * \n     * @param key\n     *            the key\n     */\n", "code": "public void remove property final string key remove key\n", "comment": "removes the property\n"}
{"id": "47686737", "raw_code": "    public void setConfiguredPrefix(final String configuredPrefix) {\n\ttry {\n\t    lock.writeLock().lock();\n\t    final String myPrefix = checkAndConvertPrefix(configuredPrefix);\n\t    final List<String> prefixList = split(myPrefix);\n\t    setPrefixes(prefixList);\n\t} finally {\n\t    lock.writeLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Sets the configuredPrefix. The configuredPrefix is Thread depended and will only affect the current thread.\n     * \n     * @param prefix\n     *            the new prefix\n     */\n", "code": "public void set configured prefix final string configured prefix try lock write lock lock final string my prefix check and convert prefix configured prefix final list string prefix list split my prefix set prefixes prefix list finally lock write lock unlock\n", "comment": "sets the configured prefix\n"}
{"id": "47686787", "raw_code": "    public void setDefaultPrefix(final String prefix) {\n\ttry {\n\t    lock.writeLock().lock();\n\t    final String myPrefix = checkAndConvertPrefix(prefix);\n\t    final List<String> prefixList = split(myPrefix);\n\t    setDefaultPrefixes(prefixList);\n\t} finally {\n\t    lock.writeLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Sets the default prefix.\n     * \n     * @param prefix\n     *            the new default prefix\n     */\n", "code": "public void set default prefix final string prefix try lock write lock lock final string my prefix check and convert prefix prefix final list string prefix list split my prefix set default prefixes prefix list finally lock write lock unlock\n", "comment": "sets the default prefix\n"}
{"id": "47686840", "raw_code": "    public void setPrefixConfig(final PrefixConfig config) {\n\ttry {\n\t    lock.writeLock().lock();\n\t    if (config == null) {\n\t\tprefixes = EmptyPrefix.INSTANCE;\n\t    } else {\n\t\tprefixes = config;\n\t    }\n\t} finally {\n\t    lock.writeLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Sets the prefix config.\n     * \n     * @param config\n     *            the new prefix config\n     */\n", "code": "public void set prefix config final prefix config config try lock write lock lock if config null prefixes empty prefix instance else prefixes config finally lock write lock unlock\n", "comment": "sets the prefix config\n"}
{"id": "47686998", "raw_code": "    public void store(final OutputStream out, final String comments, final String encoding) throws IOException {\n\ttry {\n\t    lock.readLock().lock();\n\t    properties.store(new OutputStreamWriter(out, Charset.forName(encoding)), comments);\n\t} finally {\n\t    lock.readLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Stores a properties-file by using the given comments and encoding.\n     * \n     * @param out\n     *            the out\n     * @param comments\n     *            the comments\n     * @param encoding\n     *            the encoding\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void store final output stream out final string comments final string encoding throws ioexception try lock read lock lock properties store new output stream writer out charset for name encoding comments finally lock read lock unlock\n", "comment": "stores a properties file by using the given comments and encoding\n"}
{"id": "47687031", "raw_code": "    public void storeToJSON(final OutputStream os) throws IOException {\n\ttry {\n\t    lock.readLock().lock();\n\t    final JsonFactory f = new JsonFactory();\n\t    final JsonGenerator generator = f.createJsonGenerator(os, JsonEncoding.UTF8);\n\t    new DefaultPrettyPrinter.Lf2SpacesIndenter();\n\t    generator.configure(Feature.QUOTE_FIELD_NAMES, false);\n\t    generator.useDefaultPrettyPrinter();\n\n\t    generator.writeStartObject();\n\t    writeJson(generator, getTreeMap());\n\t    generator.writeEndObject();\n\t    generator.flush();\n\t} finally {\n\t    lock.readLock().unlock();\n\t}\n    }\n", "raw_comment": "    /**\n     * Store to json.\n     * \n     * @param os\n     *            the os\n     * @throws IOException\n     *             Signals that an I/O exception has occurred.\n     */\n", "code": "public void store to json final output stream os throws ioexception try lock read lock lock final json factory f new json factory final json generator generator f create json generator os json encoding utf8 new default pretty printer lf2 spaces indenter generator configure feature quote field names false generator use default pretty printer generator write start object write json generator get tree map generator write end object generator flush finally lock read lock unlock\n", "comment": "store to json\n"}
{"id": "47687857", "raw_code": "    protected Properties getCompleteProperties() {\n\tif (properties instanceof PrefixedProperties) {\n\t    return ((PrefixedProperties) properties).getCompleteProperties();\n\t} else {\n\t    return properties;\n\t}\n    }\n", "raw_comment": "    /**\n     * Gets the complete properties.\n     * \n     * @return the complete properties\n     */\n", "code": "protected properties get complete properties if properties instanceof prefixed properties return prefixed properties properties get complete properties else return properties\n", "comment": "gets the complete properties\n"}
{"id": "17862354", "raw_code": "\tpublic String toString(){\n\t\treturn \"name:\" + this.name + \" value:\" + this.value;\n\t}\n", "raw_comment": "\t/**\n\t * \ufffd\ufffd\ufffd\u0631\ufffd\u02be AttributeConfig \u05b5\ufffd\ufffd String \ufffd\ufffd\ufffd\ufffd\u05b5\u03aaAttributeConfig\ufffd\ufffdname\ufffd\ufffd\u05b5\ufffd\ufffdvalue\ufffd\ufffd\u05b5\n\t * \n\t * @return AttributeConfig\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05b7\ufffd\ufffd\ufffd\ufffd\ufffd\u02be\ufffd\ufffd\u02bd\n\t */\n", "code": "public string to string return name this name value this value\n", "comment": "attribute config string attribute config name value\n"}
{"id": "17862358", "raw_code": "\tpublic int hashCode(){\n\t\treturn 37 * ((name==null?0:name.hashCode()) + (value==null?0:value.hashCode()));\n\t}\n", "raw_comment": "\t/**\n\t * \ufffd\ufffd\ufffd\ufffd AttributeConfig \ufffd\u0139\ufffd\u03e3\ufffd\ub8ec\ufffd\ufffd\ufffd\ufffd\ufffd37\ufffd\ufffd\ufffd\ufffdname\ufffd\u0139\ufffd\u03e3\ufffd\ufffd\ufffdvalue\ufffd\u0139\ufffd\u03e3\ufffd\ufffd\u013a\ufffd\n\t * \n\t * @return \ufffd\u02f6\ufffd\ufffd\ufffd\u0139\ufffd\u03e3\ufffd\ufffd\u05b5\n\t */\n", "code": "public int hash code return 37 name null 0 name hash code value null 0 value hash code\n", "comment": "attribute config 37 name value\n"}
{"id": "17863027", "raw_code": "\tpublic BeanConfig getBeanConfig(String beanName){\n\t\treturn (BeanConfig)beanList.get(beanName);\n\t}\n", "raw_comment": "\t/**\n\t * \ufffd\ufffd\ufffd\ufffdBean\ufffd\ufffd\ufffd\ufffd\ufffd\u01b4\ufffdBean\ufffd\ufffd\ufffd\u0437\ufffd\ufffd\ufffdBean\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\n\t * \n\t * @param beanName Bean\ufffd\ufffd\ufffd\ufffd\n\t * @return Bean\ufffd\ufffd\ufffd\ufffd\n\t */\n", "code": "public bean config get bean config string bean name return bean config bean list get bean name\n", "comment": "bean bean bean\n"}
{"id": "25089647", "raw_code": "\tpublic Object parse(byte[] in) throws JSONException {\n\t\treturn getPBytes().parse(in);\n\t}\n", "raw_comment": "\t/**\n\t * use to return Primitive Type, or String, Or JsonObject or JsonArray\n\t * generated by a ContainerFactory\n\t */\n", "code": "public object parse byte in throws jsonexception return get pbytes parse in\n", "comment": "use to return primitive type or string or json object or json array\n"}
{"id": "25089649", "raw_code": "\tpublic Object parse(InputStream in) throws JSONException {\n\t\treturn parse(in, MapDefault.DEFAULT);\n\t}\n", "raw_comment": "\t/**\n\t * use to return Primitive Type, or String, Or JsonObject or JsonArray\n\t * generated by a ContainerFactory\n\t */\n", "code": "public object parse input stream in throws jsonexception return parse in map default default\n", "comment": "use to return primitive type or string or json object or json array\n"}
{"id": "25089651", "raw_code": "\tpublic Object parse(InputStream in) throws JSONException {\n\t\treturn getPBinStream().parse(in);\n\t}\n", "raw_comment": "\t/**\n\t * use to return Primitive Type, or String, Or JsonObject or JsonArray\n\t * generated by a ContainerFactory\n\t */\n", "code": "public object parse input stream in throws jsonexception return get pbin stream parse in\n", "comment": "use to return primitive type or string or json object or json array\n"}
{"id": "25089658", "raw_code": "\tpublic Object parse(Reader in) throws JSONException {\n\t\treturn getPStream().parse(in);\n\t}\n", "raw_comment": "\t/**\n\t * use to return Primitive Type, or String, Or JsonObject or JsonArray\n\t * generated by a ContainerFactory\n\t */\n", "code": "public object parse reader in throws jsonexception return get pstream parse in\n", "comment": "use to return primitive type or string or json object or json array\n"}
{"id": "25089675", "raw_code": "\tprotected void readS() {\n\t\tif (++pos >= len)\n\t\t\tthis.c = EOI;\n\t\telse\n\t\t\tthis.c = (char) in[pos];\n\t}\n", "raw_comment": "\t/**\n\t * Same as read() in memory parssing\n\t */\n", "code": "protected void read s if pos len this c eoi else this c char in pos\n", "comment": "same as read in memory parssing\n"}
{"id": "34794880", "raw_code": "\tpublic void addWidget(final Widget widget) {\n\t\tfinal JInternalFrame frame;\n\n\t\tif (!widgets.keySet().contains(widget)) {\n\t\t\tframe = createInternalFrame(widget);\n\t\t\taddToDesktop(frame);\n\t\t} else {\n\t\t\tframe = widgets.get(widget);\n\t\t}\n\t\tSwingUtilities.invokeLater(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tif (frame.isIcon()) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tframe.setIcon(false);\n\t\t\t\t\t} catch (PropertyVetoException e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tframe.setVisible(true);\n\t\t\t\tframe.moveToFront();\n\t\t\t}\n\t\t});\n\t}\n", "raw_comment": "\t/**\n\t * Adds a widget.\n\t * \n\t * @param widget\n\t *            the widget to be added\n\t */\n", "code": "public void add widget final widget widget final jinternal frame frame if widgets key set contains widget frame create internal frame widget add to desktop frame else frame widgets get widget swing utilities invoke later new runnable override public void run if frame is icon try frame set icon false catch property veto exception e ignore frame set visible true frame move to front\n", "comment": "adds a widget\n"}
{"id": "34794907", "raw_code": "\tpublic JComponent get() {\n\t\treturn panel;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the component.\n\t * \n\t * @return the component\n\t */\n", "code": "public jcomponent get return panel\n", "comment": "returns the component\n"}
{"id": "34794909", "raw_code": "\tpublic void setCloseOnStop(boolean closeOnStop) {\n\t\tthis.closeOnStop = closeOnStop;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the option for automatically closing the GUI if the optimization\n\t * stops.\n\t * \n\t * @param closeOnStop\n\t *            the closeOnStop to set\n\t */\n", "code": "public void set close on stop boolean close on stop this close on stop close on stop\n", "comment": "sets the option for automatically closing the gui if the optimization\n"}
{"id": "34794910", "raw_code": "\tpublic CloseEvent getCloseEvent() {\n\t\treturn closeEvent;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the event when the GUI is closed.\n\t * \n\t * @return the closeEvent\n\t */\n", "code": "public close event get close event return close event\n", "comment": "returns the event when the gui is closed\n"}
{"id": "34794912", "raw_code": "\tpublic void setCloseEvent(CloseEvent closeEvent) {\n\t\tthis.closeEvent = closeEvent;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the event when the GUI is closed.\n\t * \n\t * @param closeEvent\n\t *            the closeEvent to set\n\t */\n", "code": "public void set close event close event close event this close event close event\n", "comment": "sets the event when the gui is closed\n"}
{"id": "34794924", "raw_code": "\tpublic void execute(final Runnable task) {\n\t\tthread.updateTask(task);\n\t}\n", "raw_comment": "\t/**\n\t * Executes the task. If tasks arrive to close, some of them are dropped.\n\t * \n\t * @param task\n\t *            the task to be executed\n\t */\n", "code": "public void execute final runnable task thread update task task\n", "comment": "executes the task\n"}
{"id": "34794928", "raw_code": "\tprotected void doPaint() {\n\t\ttask.execute(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tpaint();\n\t\t\t}\n\t\t});\n\t}\n", "raw_comment": "\t/**\n\t * Force a repaint of the plot.\n\t */\n", "code": "protected void do paint task execute new runnable override public void run paint\n", "comment": "force a repaint of the plot\n"}
{"id": "34794936", "raw_code": "\tprotected void paint() {\n\t\tfinal Objective objective = selection.getSelected();\n\n\t\tSwingUtilities.invokeLater(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tplot.clear(false);\n\n\t\t\t\tplot.setXLabel(\"iteration\");\n\n\t\t\t\tif (objective != null) {\n\t\t\t\t\tplot.setYLabel(objective.getName());\n\n\t\t\t\t\tpaintList(data.getMaxPoints(objective), 0);\n\t\t\t\t\tpaintList(data.getMeanPoints(objective), 1);\n\t\t\t\t\tpaintList(data.getMinPoints(objective), 2);\n\t\t\t\t} else {\n\t\t\t\t\tplot.setYLabel(\"\");\n\t\t\t\t}\n\n\t\t\t\tplot.revalidate();\n\t\t\t\tplot.repaint();\n\t\t\t}\n\t\t});\n\t}\n", "raw_comment": "\t/**\n\t * Repaints the plot. Do not call this method directly, call\n\t * {@link #doPaint()} instead.\n\t */\n", "code": "protected void paint final objective objective selection get selected swing utilities invoke later new runnable override public void run plot clear false plot set xlabel iteration if objective null plot set ylabel objective get name paint list data get max points objective 0 paint list data get mean points objective 1 paint list data get min points objective 2 else plot set ylabel plot revalidate plot repaint\n", "comment": "repaints the plot\n"}
{"id": "34795006", "raw_code": "\tprotected void doPaint() {\n\t\ttask.execute(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tfinal Collection<Individual> a = new HashSet<Individual>();\n\t\t\t\tsynchronized (archive) {\n\t\t\t\t\ta.addAll(archive);\n\t\t\t\t}\n\t\t\t\tfinal Collection<Individual> p = new HashSet<Individual>();\n\t\t\t\tsynchronized (population) {\n\t\t\t\t\tp.addAll(population);\n\t\t\t\t}\n\n\t\t\t\tpaint(a, p);\n\t\t\t}\n\t\t});\n\t}\n", "raw_comment": "\t/**\n\t * Repaints the diagram.\n\t */\n", "code": "protected void do paint task execute new runnable override public void run final collection individual a new hash set individual synchronized archive a add all archive final collection individual p new hash set individual synchronized population p add all population paint a p\n", "comment": "repaints the diagram\n"}
{"id": "34795028", "raw_code": "\tpublic Double get() {\n\t\tif (maxIterations == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn (double) getCurrentIteration() / (double) getMaxIterations();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the progress value between {@code 0} and {@code 1}.\n\t * \n\t * @return the progress value\n\t */\n", "code": "public double get if max iterations null return null return double get current iteration double get max iterations\n", "comment": "returns the progress value between\n"}
{"id": "34795030", "raw_code": "\tpublic Integer getMaxIterations() {\n\t\treturn maxIterations == null ? getCurrentIteration() : maxIterations;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of maximal iterations.\n\t * \n\t * @return the number of maximal iteration\n\t */\n", "code": "public integer get max iterations return max iterations null get current iteration max iterations\n", "comment": "returns the number of maximal iterations\n"}
{"id": "34795032", "raw_code": "\tpublic int getCurrentIteration() {\n\t\treturn Math.min(iteration, maxIterations == null ? iteration : maxIterations);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the current iteration.\n\t * \n\t * @return the current iteration\n\t */\n", "code": "public int get current iteration return math min iteration max iterations null iteration max iterations\n", "comment": "returns the current iteration\n"}
{"id": "34795042", "raw_code": "\tprotected void update(Optimizer optimizer) {\n\n\t\tfinal State state;\n\n\t\tif (optimizer != null && !optimizer.isRunning()) {\n\t\t\tstate = State.TERMINATED;\n\t\t} else {\n\t\t\tstate = control.getState();\n\t\t}\n\n\t\tfinal boolean bStart = (state == State.PAUSED);\n\t\tfinal boolean bPause = (state == State.RUNNING);\n\t\tfinal boolean bStop = (state == State.RUNNING || state == State.PAUSED);\n\t\tfinal boolean bTerminate = (state != State.TERMINATED);\n\n\t\tSwingUtilities.invokeLater(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tstart.setEnabled(bStart);\n\t\t\t\tpause.setEnabled(bPause);\n\t\t\t\tstop.setEnabled(bStop);\n\t\t\t\tterminate.setEnabled(bTerminate);\n\t\t\t}\n\t\t});\n\t}\n", "raw_comment": "\t/**\n\t * Updates the view.\n\t */\n", "code": "protected void update optimizer optimizer final state state if optimizer null optimizer is running state state terminated else state control get state final boolean b start state state paused final boolean b pause state state running final boolean b stop state state running state state paused final boolean b terminate state state terminated swing utilities invoke later new runnable override public void run start set enabled b start pause set enabled b pause stop set enabled b stop terminate set enabled b terminate\n", "comment": "updates the view\n"}
{"id": "34795047", "raw_code": "\tprotected void paint() {\n\t\ttask.execute(new Runnable() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tfinal List<Individual> temp = new ArrayList<Individual>();\n\t\t\t\ttemp.addAll(archive);\n\t\t\t\tCollections.sort(temp, new Comp());\n\n\t\t\t\tSwingUtilities.invokeLater(new Runnable() {\n\t\t\t\t\t@Override\n\t\t\t\t\tpublic void run() {\n\t\t\t\t\t\tswtIndividuals = temp;\n\t\t\t\t\t\tsizeLabel.setText(Integer.toString(swtIndividuals.size()));\n\n\t\t\t\t\t\tif (table != null) {\n\t\t\t\t\t\t\tif (table.getColumnCount() != table.getModel().getColumnCount()) {\n\t\t\t\t\t\t\t\ttable.createDefaultColumnsFromModel();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttable.revalidate();\n\t\t\t\t\t\t\ttable.repaint();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n", "raw_comment": "\t/**\n\t * Repaints the table.\n\t */\n", "code": "protected void paint task execute new runnable override public void run final list individual temp new array list individual temp add all archive collections sort temp new comp swing utilities invoke later new runnable override public void run swt individuals temp size label set text integer to string swt individuals size if table null if table get column count table get model get column count table create default columns from model table revalidate table repaint\n", "comment": "repaints the table\n"}
{"id": "34795053", "raw_code": "\tpublic JButton getTerminate() {\n\t\treturn terminate;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the terminate button.\n\t * \n\t * @return the terminate button\n\t */\n", "code": "public jbutton get terminate return terminate\n", "comment": "returns the terminate button\n"}
{"id": "34795060", "raw_code": "\tprotected ConstantBindingBuilder bindConstant(Class<? extends Annotation> annotation) {\n\t\treturn bindConstant().annotatedWith(annotation);\n\t}\n", "raw_comment": "\t/**\n\t * Bind a value.\n\t * \n\t * @param annotation\n\t *            the type of annotation of the value\n\t * @return the constant binding builder that allows a binding\n\t */\n", "code": "protected constant binding builder bind constant class extends annotation annotation return bind constant annotated with annotation\n", "comment": "bind a value\n"}
{"id": "34795062", "raw_code": "\tpublic void init(Injector injector) {\n\t\tthis.parentInjector = injector;\n\t}\n", "raw_comment": "\t/**\n\t * Initialize with a parent {@link Injector}.\n\t * \n\t * @param injector\n\t *            the parent injector\n\t */\n", "code": "public void init injector injector this parent injector injector\n", "comment": "initialize with a parent\n"}
{"id": "34795063", "raw_code": "\tprotected ConstantBindingBuilder bindConstant(Annotation annotation) {\n\t\treturn bindConstant().annotatedWith(annotation);\n\t}\n", "raw_comment": "\t/**\n\t * Bind a value.\n\t * \n\t * @param annotation\n\t *            the annotation of the value\n\t * @return the constant binding builder that allows a binding\n\t */\n", "code": "protected constant binding builder bind constant annotation annotation return bind constant annotated with annotation\n", "comment": "bind a value\n"}
{"id": "34795064", "raw_code": "\tpublic int getIteration() {\n\t\tOptimizer optimizer = getOptimizer();\n\t\tif (optimizer == null) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn optimizer.getIteration();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the current iteration.\n\t * \n\t * @return the current iteration\n\t */\n", "code": "public int get iteration optimizer optimizer get optimizer if optimizer null return 0 return optimizer get iteration\n", "comment": "returns the current iteration\n"}
{"id": "34795076", "raw_code": "\tprivate void stateChanged() {\n\t\tfor (TaskStateListener listener : listeners) {\n\t\t\tlistener.stateChanged(this);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Calls the listeners that listen to the state of this task.\n\t */\n", "code": "private void state changed for task state listener listener listeners listener state changed this\n", "comment": "calls the listeners that listen to the state of this task\n"}
{"id": "34795090", "raw_code": "\tprotected ConstantBindingBuilder bindConstant(String value, Class<?> namespace) {\n\t\tassert (namespace != null);\n\t\tConstant c = new ConstantImpl(value, namespace);\n\t\treturn bindConstant(c);\n\t}\n", "raw_comment": "\t/**\n\t * Bind a constant.\n\t * \n\t * @param value\n\t *            the value from the {@link Constant}\n\t * @param namespace\n\t *            the namespace from the {@link Constant}\n\t * @return the constant binding builder that allows a binding\n\t */\n", "code": "protected constant binding builder bind constant string value class namespace assert namespace null constant c new constant impl value namespace return bind constant c\n", "comment": "bind a constant\n"}
{"id": "34795113", "raw_code": "\t\tprivate void addConfigLoadMenuItems(JPopupMenu menu, final Opt4JTask task) {\n\t\t\tJMenuItem loadConfig = new JMenuItem(\"Restore Configuration\", Icons.getIcon(Icons.FOLDER_ADD));\n\n\t\t\tloadConfig.addActionListener(new ActionListener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void actionPerformed(ActionEvent e) {\n\t\t\t\t\tselectedModules.clear();\n\t\t\t\t\tfor (Module module : task.getModules()) {\n\t\t\t\t\t\tPropertyModule pModule;\n\t\t\t\t\t\tif (module instanceof PropertyModule) {\n\t\t\t\t\t\t\tpModule = (PropertyModule) module;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpModule = new PropertyModule(module);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tselectedModules.add(pModule);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmenu.add(loadConfig);\n\t\t}\n", "raw_comment": "\t\t/**\n\t\t * Adds an item to the given menu which allows to restore the\n\t\t * configuration of a task.\n\t\t * \n\t\t * @param menu\n\t\t *            the menu\n\t\t * @param task\n\t\t *            the task which configuration is restored\n\t\t */\n", "code": "private void add config load menu items jpopup menu menu final opt4 jtask task jmenu item load config new jmenu item restore configuration icons get icon icons folder add load config add action listener new action listener override public void action performed action event e selected modules clear for module module task get modules property module p module if module instanceof property module p module property module module else p module new property module module selected modules add p module menu add load config\n", "comment": "adds an item to the given menu which allows to restore the\n"}
{"id": "34795122", "raw_code": "\tpublic PermutationType getPermutationType() {\n\t\treturn permutationType;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the permutation mode.\n\t * \n\t * @return the permutation mode\n\t */\n", "code": "public permutation type get permutation type return permutation type\n", "comment": "returns the permutation mode\n"}
{"id": "34795124", "raw_code": "\tpublic void setPermutationType(PermutationType permutationMode) {\n\t\tthis.permutationType = permutationMode;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the permutation mode.\n\t * \n\t * @param permutationMode\n\t *            the permutation mode\n\t */\n", "code": "public void set permutation type permutation type permutation mode this permutation type permutation mode\n", "comment": "sets the permutation mode\n"}
{"id": "34795159", "raw_code": "\tpublic DoubleType getDoubleType() {\n\t\treturn doubleType;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the double type.\n\t * \n\t * @return the doubleType\n\t */\n", "code": "public double type get double type return double type\n", "comment": "returns the double type\n"}
{"id": "34795160", "raw_code": "\tpublic void setDoubleType(DoubleType doubleType) {\n\t\tthis.doubleType = doubleType;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the double type.\n\t * \n\t * @param doubleType\n\t *            the doubleType to set\n\t */\n", "code": "public void set double type double type double type this double type double type\n", "comment": "sets the double type\n"}
{"id": "34795163", "raw_code": "\tpublic double getEta() {\n\t\treturn eta;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the eta.\n\t * \n\t * @return the eta\n\t */\n", "code": "public double get eta return eta\n", "comment": "returns the eta\n"}
{"id": "34795166", "raw_code": "\tpublic void setEta(double eta) {\n\t\tthis.eta = eta;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the eta.\n\t * \n\t * @param eta\n\t *            the eta to set\n\t */\n", "code": "public void set eta double eta this eta eta\n", "comment": "sets the eta\n"}
{"id": "34795173", "raw_code": "\tprotected double next(double lo, double hi) {\n\t\tdouble u = random.nextDouble();\n\t\tdouble gamma = (1 + 2 * alpha) * u - alpha;\n\n\t\tdouble o = lo + gamma * (hi - lo);\n\t\treturn o;\n\t}\n", "raw_comment": "\t/**\n\t * Calculates a random value in the interval\n\t * {@code [lo-(hi-lo)*alpha;hi+(hi-lo)*alpha]}.\n\t * \n\t * @param lo\n\t *            the smaller double value\n\t * @param hi\n\t *            the bigger double value\n\t * @return a random value in the interval\n\t */\n", "code": "protected double next double lo double hi double u random next double double gamma 1 2 alpha u alpha double o lo gamma hi lo return o\n", "comment": "calculates a random value in the interval\n"}
{"id": "34795175", "raw_code": "\tpublic double getIntegerRate() {\n\t\treturn integerRate;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the rate of the {@link CrossoverIntegerRate}.\n\t * \n\t * @return the rate\n\t */\n", "code": "public double get integer rate return integer rate\n", "comment": "returns the rate of the\n"}
{"id": "34795177", "raw_code": "\tpublic void setIntegerRate(double integerRate) {\n\t\tthis.integerRate = integerRate;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the rate of the {@link CrossoverIntegerRate}.\n\t * \n\t * @param integerRate\n\t *            the rate\n\t */\n", "code": "public void set integer rate double integer rate this integer rate integer rate\n", "comment": "sets the rate of the\n"}
{"id": "34795179", "raw_code": "\tpublic int getIntegerXPoints() {\n\t\treturn integerXPoints;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of crossover points of the\n\t * {@link CrossoverIntegerXPoint}.\n\t * \n\t * @return the number of crossover points\n\t */\n", "code": "public int get integer xpoints return integer xpoints\n", "comment": "returns the number of crossover points of the\n"}
{"id": "34795181", "raw_code": "\tpublic void setIntegerXPoints(int integerXPoint) {\n\t\tthis.integerXPoints = integerXPoint;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of crossover points of the {@link CrossoverIntegerXPoint}\n\t * .\n\t * \n\t * @param integerXPoint\n\t *            the number of crossover points\n\t */\n", "code": "public void set integer xpoints int integer xpoint this integer xpoints integer xpoint\n", "comment": "sets the number of crossover points of the\n"}
{"id": "34795191", "raw_code": "\tpublic double getBooleanRate() {\n\t\treturn booleanRate;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the rate of the {@link CrossoverBooleanRate}.\n\t * \n\t * @return the rate\n\t */\n", "code": "public double get boolean rate return boolean rate\n", "comment": "returns the rate of the\n"}
{"id": "34795196", "raw_code": "\tpublic void setBooleanRate(double booleanRate) {\n\t\tthis.booleanRate = booleanRate;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the rate of the {@link CrossoverBooleanRate}.\n\t * \n\t * @param booleanRate\n\t *            the rate\n\t */\n", "code": "public void set boolean rate double boolean rate this boolean rate boolean rate\n", "comment": "sets the rate of the\n"}
{"id": "34795201", "raw_code": "\tpublic int getBooleanXPoints() {\n\t\treturn booleanXPoints;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of crossover points of the\n\t * {@link CrossoverBooleanXPoint}.\n\t * \n\t * @return the number of crossover points\n\t */\n", "code": "public int get boolean xpoints return boolean xpoints\n", "comment": "returns the number of crossover points of the\n"}
{"id": "34795206", "raw_code": "\tpublic void setBooleanXPoints(int booleanXPoints) {\n\t\tthis.booleanXPoints = booleanXPoints;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of crossover points of the {@link CrossoverBooleanXPoint}\n\t * .\n\t * \n\t * @param booleanXPoints\n\t *            the number of crossover points\n\t */\n", "code": "public void set boolean xpoints int boolean xpoints this boolean xpoints boolean xpoints\n", "comment": "sets the number of crossover points of the\n"}
{"id": "34795224", "raw_code": "\tpublic double getNu() {\n\t\treturn nu;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the nu value of the {@link CrossoverDoubleSBX}.\n\t * \n\t * @return the nu value\n\t */\n", "code": "public double get nu return nu\n", "comment": "returns the nu value of the\n"}
{"id": "34795228", "raw_code": "\tpublic BooleanType getBooleanType() {\n\t\treturn booleanType;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the Type of {@link Diversity} operator for\n\t * {@link BooleanGenotype}.\n\t * \n\t * @return the type of diversity operator for boolean genotypes\n\t */\n", "code": "public boolean type get boolean type return boolean type\n", "comment": "returns the type of\n"}
{"id": "34795229", "raw_code": "\tpublic void setNu(double nu) {\n\t\tthis.nu = nu;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the nu value of the {@link CrossoverDoubleSBX}.\n\t * \n\t * @param nu\n\t *            the nu value\n\t */\n", "code": "public void set nu double nu this nu nu\n", "comment": "sets the nu value of the\n"}
{"id": "34795230", "raw_code": "\tpublic void setBooleanType(BooleanType booleanType) {\n\t\tthis.booleanType = booleanType;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the Type of {@link Diversity} operator for {@link BooleanGenotype}.\n\t * \n\t * @param booleanType\n\t *            the booleanType to set\n\t */\n", "code": "public void set boolean type boolean type boolean type this boolean type boolean type\n", "comment": "sets the type of\n"}
{"id": "34795241", "raw_code": "\tpublic int getBatchsize() {\n\t\treturn batchsize;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of batched individuals for the evaluation.\n\t * \n\t * @see #setBatchsize\n\t * @return the batchsize\n\t */\n", "code": "public int get batchsize return batchsize\n", "comment": "returns the number of batched individuals for the evaluation\n"}
{"id": "34795242", "raw_code": "\tpublic void setBatchsize(int batchsize) {\n\t\tthis.batchsize = batchsize;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of batched individuals for the evaluation.\n\t * \n\t * @see #getBatchsize\n\t * @param batchsize\n\t *            the batchsize to set\n\t */\n", "code": "public void set batchsize int batchsize this batchsize batchsize\n", "comment": "sets the number of batched individuals for the evaluation\n"}
{"id": "34795246", "raw_code": "\tpublic void setRotation(boolean rotation) {\n\t\tthis.rotation = rotation;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the rotation value for the {@link Crossover} operator for the\n\t * {@link PermutationGenotype}.\n\t * \n\t * @param rotation\n\t *            the rotation value\n\t */\n", "code": "public void set rotation boolean rotation this rotation rotation\n", "comment": "sets the rotation value for the\n"}
{"id": "34795255", "raw_code": "\tpublic void setGenerations(int generations) {\n\t\tthis.generations = generations;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the generations.\n\t * \n\t * @see #getGenerations\n\t * @param generations\n\t *            the generations to set\n\t */\n", "code": "public void set generations int generations this generations generations\n", "comment": "sets the generations\n"}
{"id": "34795261", "raw_code": "\tprotected Triple getTriple(Individual parent, List<Individual> individuals) {\n\t\tindividuals.remove(parent);\n\t\tIndividual ind0 = individuals.remove(random.nextInt(individuals.size()));\n\t\tIndividual ind1 = individuals.remove(random.nextInt(individuals.size()));\n\t\tIndividual ind2 = individuals.remove(random.nextInt(individuals.size()));\n\n\t\tTriple triple = new Triple(ind0, ind1, ind2);\n\n\t\tindividuals.add(parent);\n\t\tindividuals.add(ind0);\n\t\tindividuals.add(ind1);\n\t\tindividuals.add(ind2);\n\n\t\treturn triple;\n\n\t}\n", "raw_comment": "\t/**\n\t * Returns three different {@link Individual}s from the {@code individuals}\n\t * list. Each {@link Individual} is not equal to the parent.\n\t * \n\t * @param parent\n\t *            the parent Individual\n\t * @param individuals\n\t *            the population\n\t * @return the three individuals as a Triple\n\t */\n", "code": "protected triple get triple individual parent list individual individuals individuals remove parent individual ind0 individuals remove random next int individuals size individual ind1 individuals remove random next int individuals size individual ind2 individuals remove random next int individuals size triple triple new triple ind0 ind1 ind2 individuals add parent individuals add ind0 individuals add ind1 individuals add ind2 return triple\n", "comment": "returns three different\n"}
{"id": "34795262", "raw_code": "\tprotected void bindCoolingSchedule(Class<? extends CoolingSchedule> coolingSchedule) {\n\t\tbind(CoolingSchedule.class).to(coolingSchedule).in(SINGLETON);\n\t}\n", "raw_comment": "\t/**\n\t * Binds the given {@link CoolingSchedule}.\n\t * \n\t * @param coolingSchedule\n\t *            the CoolingSchedule to bind\n\t */\n", "code": "protected void bind cooling schedule class extends cooling schedule cooling schedule bind cooling schedule class to cooling schedule in singleton\n", "comment": "binds the given\n"}
{"id": "34795266", "raw_code": "\tprotected double f(Individual individual) {\n\t\tObjectives objectives = individual.getObjectives();\n\n\t\tdouble sum = 0;\n\n\t\tfor (double d : objectives.array()) {\n\t\t\tsum += d;\n\t\t}\n\n\t\treturn sum;\n\t}\n", "raw_comment": "\t/**\n\t * Calculates the sum of the {@link Objectives} of one {@link Individual}.\n\t * \n\t * @param individual\n\t *            the individual\n\t * @return the sum of the objective values\n\t */\n", "code": "protected double f individual individual objectives objectives individual get objectives double sum 0 for double d objectives array sum d return sum\n", "comment": "calculates the sum of the\n"}
{"id": "34795273", "raw_code": "\tpublic void setFinalTemperature(double finalTemperature) {\n\t\tthis.finalTemperature = finalTemperature;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the final temperature.\n\t * \n\t * @see #getFinalTemperature\n\t * @param finalTemperature\n\t *            the final temperature\n\t */\n", "code": "public void set final temperature double final temperature this final temperature final temperature\n", "comment": "sets the final temperature\n"}
{"id": "34795275", "raw_code": "\tpublic void setInitialTemperature(double initialTemperature) {\n\t\tthis.initialTemperature = initialTemperature;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the initial temperature.\n\t * \n\t * @see #getInitialTemperature\n\t * @param initialTemperature\n\t *            the initial temperature\n\t */\n", "code": "public void set initial temperature double initial temperature this initial temperature initial temperature\n", "comment": "sets the initial temperature\n"}
{"id": "34795281", "raw_code": "\tpublic double getPerturbation() {\n\t\treturn perturbation;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the perturbation.\n\t * \n\t * @see #setPerturbation\n\t * @return the perturbation\n\t */\n", "code": "public double get perturbation return perturbation\n", "comment": "returns the perturbation\n"}
{"id": "34795282", "raw_code": "\tpublic void setPerturbation(double perturbation) {\n\t\tthis.perturbation = perturbation;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the perturbation.\n\t * \n\t * @see #getPerturbation\n\t * @param perturbation\n\t *            the perturbation to set\n\t */\n", "code": "public void set perturbation double perturbation this perturbation perturbation\n", "comment": "sets the perturbation\n"}
{"id": "34795286", "raw_code": "\tprotected double delta(double perturbation) {\n\t\tfinal double diff = 1.0 - 0.0;\n\t\tdouble r = random.nextDouble();\n\n\t\tdouble actIter = iteration.value();\n\t\tdouble maxIter = iteration.max();\n\t\tdouble ratio = actIter / maxIter;\n\t\tratio = Math.min(ratio, 1.0);\n\n\t\tdouble y = Math.pow(1.0 - ratio, perturbation);\n\t\treturn diff * (1.0 - Math.pow(r, y));\n\t}\n", "raw_comment": "\t/**\n\t * Calculates the delta value for the non-uniform mutation.\n\t * \n\t * @param perturbation\n\t *            the perturbation value\n\t * @return the delta value\n\t */\n", "code": "protected double delta double perturbation final double diff 1 0 0 0 double r random next double double act iter iteration value double max iter iteration max double ratio act iter max iter ratio math min ratio 1 0 double y math pow 1 0 ratio perturbation return diff 1 0 math pow r y\n", "comment": "calculates the delta value for the non uniform mutation\n"}
{"id": "34795289", "raw_code": "\tpublic int getParticles() {\n\t\treturn particles;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of particles.\n\t * \n\t * @see #setParticles\n\t * @return the particles\n\t */\n", "code": "public int get particles return particles\n", "comment": "returns the number of particles\n"}
{"id": "34795292", "raw_code": "\tpublic void setParticles(int particles) {\n\t\tthis.particles = particles;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of particles.\n\t * \n\t * @see #getParticles\n\t * @param particles\n\t *            the particles to set\n\t */\n", "code": "public void set particles int particles this particles particles\n", "comment": "sets the number of particles\n"}
{"id": "34795297", "raw_code": "\tpublic void randomize() {\n\t\tW.setValue(random.nextDouble() * 0.4 + 0.1);\n\t\tC1.setValue(random.nextDouble() * 0.5 + 1.5);\n\t\tC2.setValue(random.nextDouble() * 0.5 + 1.5);\n\t\tr1.setValue(random.nextDouble());\n\t\tr2.setValue(random.nextDouble());\n\t}\n", "raw_comment": "\t/**\n\t * Randomizes the constants of the term.\n\t */\n", "code": "public void randomize w set value random next double 0 4 0 1 c1 set value random next double 0 5 1 5 c2 set value random next double 0 5 1 5 r1 set value random next double r2 set value random next double\n", "comment": "randomizes the constants of the term\n"}
{"id": "34795302", "raw_code": "\tpublic Genotype getVelocity() {\n\t\treturn velocity;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the velocity.\n\t * \n\t * @see #setVelocity\n\t * @return the velocity\n\t */\n", "code": "public genotype get velocity return velocity\n", "comment": "returns the velocity\n"}
{"id": "34795303", "raw_code": "\tpublic void setVelocity(Genotype velocity) {\n\t\tthis.velocity = velocity;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the velocity.\n\t * \n\t * @see #getVelocity\n\t * @param velocity\n\t *            the velocity to set\n\t */\n", "code": "public void set velocity genotype velocity this velocity velocity\n", "comment": "sets the velocity\n"}
{"id": "34795304", "raw_code": "\tpublic Genotype getBest() {\n\t\treturn best;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the best position.\n\t * \n\t * @see #setBest\n\t * @return the best\n\t */\n", "code": "public genotype get best return best\n", "comment": "returns the best position\n"}
{"id": "34795306", "raw_code": "\tpublic Objectives getBestObjectives() {\n\t\treturn objectivesBest;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the best objectives.\n\t * \n\t * @see #setBest\n\t * @return the best objectives\n\t */\n", "code": "public objectives get best objectives return objectives best\n", "comment": "returns the best objectives\n"}
{"id": "34795307", "raw_code": "\tpublic void setBest(Genotype best, Objectives objectives) {\n\t\tthis.best = best;\n\t\tthis.objectivesBest = objectives;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the best position.\n\t * \n\t * @see #getBest\n\t * @param best\n\t *            the best to set\n\t * @param objectives\n\t *            the corresponding best objectives\n\t */\n", "code": "public void set best genotype best objectives objectives this best best this objectives best objectives\n", "comment": "sets the best position\n"}
{"id": "34795310", "raw_code": "\tprotected void updateLeaders(Archive leaders, Population population) {\n\t\tleaders.update(population);\n\t}\n", "raw_comment": "\t/**\n\t * Update the global leaders {@link Archive}.\n\t * \n\t * @param leaders\n\t *            the archive\n\t * @param population\n\t *            the population\n\t */\n", "code": "protected void update leaders archive leaders population population leaders update population\n", "comment": "update the global leaders\n"}
{"id": "34795311", "raw_code": "\tprotected void updatePersonalBest(Map<Particle, Particle> next) {\n\t\tfor (Entry<Particle, Particle> entry : next.entrySet()) {\n\n\t\t\tParticle old = entry.getKey();\n\t\t\tParticle current = entry.getValue();\n\n\t\t\tif (dominates(old, current)) {\n\t\t\t\tcurrent.setBest(old.getBest(), old.getBestObjectives());\n\t\t\t} else {\n\t\t\t\tcurrent.setBest(current.getGenotype(), current.getObjectives());\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Update the personal best of each {@link Particle}.\n\t * \n\t * @param next\n\t *            the old and new positions\n\t */\n", "code": "protected void update personal best map particle particle next for entry particle particle entry next entry set particle old entry get key particle current entry get value if dominates old current current set best old get best old get best objectives else current set best current get genotype current get objectives\n", "comment": "update the personal best of each\n"}
{"id": "34795315", "raw_code": "\tpublic int getTournament() {\n\t\treturn tournament;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the tournament value.\n\t * \n\t * @see #setTournament\n\t * @return the tournament value\n\t */\n", "code": "public int get tournament return tournament\n", "comment": "returns the tournament value\n"}
{"id": "34795317", "raw_code": "\tpublic void setTournament(int tournament) {\n\t\tthis.tournament = tournament;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the tournament value.\n\t * \n\t * @see #getTournament\n\t * @param tournament\n\t *            the tournament to set\n\t */\n", "code": "public void set tournament int tournament this tournament tournament\n", "comment": "sets the tournament value\n"}
{"id": "34795324", "raw_code": "\tprotected double calculateHypervolume(List<double[]> front, int nObjectives) {\n\t\tdouble volume = 0.0;\n\t\tdouble distance = 0.0;\n\n\t\twhile (!front.isEmpty()) {\n\t\t\tList<double[]> nondominatedPoints = filterNondominatedSet(front, nObjectives - 1);\n\t\t\tdouble tempVolume;\n\t\t\tif (nObjectives < 3) {\n\t\t\t\tassert nondominatedPoints.size() > 0;\n\t\t\t\ttempVolume = nondominatedPoints.get(0)[0];\n\t\t\t} else {\n\t\t\t\ttempVolume = calculateHypervolume(nondominatedPoints, nObjectives - 1);\n\t\t\t}\n\t\t\tdouble tempDistance = surfaceUnchangedTo(front, nObjectives - 1);\n\t\t\tvolume += tempVolume * (tempDistance - distance);\n\t\t\tdistance = tempDistance;\n\t\t\tfront = reduceNondominatedSet(front, nObjectives - 1, distance);\n\t\t}\n\n\t\treturn volume;\n\t}\n", "raw_comment": "\t/**\n\t * Implements the hypervolume calculations as proposed by Zitzler, E., and\n\t * Thiele, L. (1998). All points have positive values in all dimensions and\n\t * the hypervolume is calculated from 0.\n\t * \n\t * @param front\n\t *            the front of non-dominated solutions\n\t * @param nObjectives\n\t *            the number of objectives\n\t * @return the hypervolume\n\t */\n", "code": "protected double calculate hypervolume list double front int n objectives double volume 0 0 double distance 0 0 while front is empty list double nondominated points filter nondominated set front n objectives 1 double temp volume if n objectives 3 assert nondominated points size 0 temp volume nondominated points get 0 0 else temp volume calculate hypervolume nondominated points n objectives 1 double temp distance surface unchanged to front n objectives 1 volume temp volume temp distance distance distance temp distance front reduce nondominated set front n objectives 1 distance return volume\n", "comment": "implements the hypervolume calculations as proposed by zitzler e\n"}
{"id": "34795326", "raw_code": "\tpublic CouplerType getType() {\n\t\treturn type;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the type of {@link Coupler} operator to use.\n\t * \n\t * @see #setType\n\t * @return the the type of coupler operator to use\n\t */\n", "code": "public coupler type get type return type\n", "comment": "returns the type of\n"}
{"id": "34795327", "raw_code": "\tpublic void setType(CouplerType type) {\n\t\tthis.type = type;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the the type of {@link Coupler} operator to use.\n\t * \n\t * @see #getType\n\t * @param type\n\t *            the type to set\n\t */\n", "code": "public void set type coupler type type this type type\n", "comment": "sets the the type of\n"}
{"id": "34795330", "raw_code": "\tprotected void bindSelector(Class<? extends Selector> selector) {\n\t\tbind(Selector.class).to(selector).in(SINGLETON);\n\t}\n", "raw_comment": "\t/**\n\t * Binds the given {@link Selector}.\n\t * \n\t * @param selector\n\t *            the selector to bind\n\t */\n", "code": "protected void bind selector class extends selector selector bind selector class to selector in singleton\n", "comment": "binds the given\n"}
{"id": "34795332", "raw_code": "\tpublic Objectives normalize(Objectives objectives) {\n\t\tObjectives normalized = new Objectives();\n\n\t\tfor (Entry<Objective, Value<?>> entry : objectives) {\n\t\t\tObjective objective = entry.getKey();\n\t\t\tdouble oldvalue = toMinProblem(entry.getKey(), entry.getValue());\n\n\t\t\tdouble newvalue = 1;\n\n\t\t\tif (oldvalue != Double.MAX_VALUE) {\n\t\t\t\tDouble min = minValues.get(objective);\n\t\t\t\tDouble max = maxValues.get(objective);\n\t\t\t\tassert min != null;\n\t\t\t\tassert max != null;\n\t\t\t\tnewvalue = (oldvalue - min) / (max - min);\n\t\t\t}\n\t\t\tnormalized.add(objective, newvalue);\n\t\t}\n\n\t\treturn normalized;\n\t}\n", "raw_comment": "\t/**\n\t * Returns normalized objectives. Each objective is in the range between 0\n\t * and 1 and has to be minimized. Here, 0 is the smallest value seen so far\n\t * for this objective for all evaluated {@link Individual}s and 1 the\n\t * biggest value, respectively. If an objective is infeasible, it is set to\n\t * 1.\n\t * \n\t * @param objectives\n\t *            the objectives to normalize\n\t * @return the normalized objectives\n\t */\n", "code": "public objectives normalize objectives objectives objectives normalized new objectives for entry objective value entry objectives objective objective entry get key double oldvalue to min problem entry get key entry get value double newvalue 1 if oldvalue double max value double min min values get objective double max max values get objective assert min null assert max null newvalue oldvalue min max min normalized add objective newvalue return normalized\n", "comment": "returns normalized objectives\n"}
{"id": "34795342", "raw_code": "\tprotected void calculateFitness(Collection<Individual> population) {\n\t\tfitness.clear();\n\t\tfor (Individual individual : population) {\n\t\t\tdouble f = 0;\n\t\t\tfor (double v : individual.getObjectives().array()) {\n\t\t\t\tf += v;\n\t\t\t}\n\t\t\tfitness.put(individual, f);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Calculates the fitness of the {@link Individual}s: the sum of all double\n\t * values (these always have to be minimized) of the objectives.\n\t * \n\t * @param population\n\t */\n", "code": "protected void calculate fitness collection individual population fitness clear for individual individual population double f 0 for double v individual get objectives array f v fitness put individual f\n", "comment": "calculates the fitness of the\n"}
{"id": "34795349", "raw_code": "\tpublic A getSecond() {\n\t\treturn second;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the second element.\n\t * \n\t * @return the second element\n\t */\n", "code": "public a get second return second\n", "comment": "returns the second element\n"}
{"id": "34795355", "raw_code": "\tpublic int getLambda() {\n\t\treturn lambda;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of children {@code lambda}.\n\t * \n\t * @see #setLambda\n\t * @return the number of children\n\t */\n", "code": "public int get lambda return lambda\n", "comment": "returns the number of children\n"}
{"id": "34795356", "raw_code": "\tpublic void setLambda(int lambda) {\n\t\tthis.lambda = lambda;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of children {@code lambda}.\n\t * \n\t * @see #getLambda\n\t * @param lambda\n\t *            the number of children\n\t */\n", "code": "public void set lambda int lambda this lambda lambda\n", "comment": "sets the number of children\n"}
{"id": "34795361", "raw_code": "\tpublic void setMu(int mu) {\n\t\tthis.mu = mu;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of parents {@code mu}.\n\t * \n\t * @see #getMu\n\t * @param mu\n\t *            the number of parents\n\t */\n", "code": "public void set mu int mu this mu mu\n", "comment": "sets the number of parents\n"}
{"id": "34795362", "raw_code": "\tpublic CrossoverRateType getCrossoverRateType() {\n\t\treturn crossoverRateType;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the type of crossover rate that is used.\n\t * \n\t * @see #setCrossoverRateType\n\t * @return the crossoverRateType\n\t */\n", "code": "public crossover rate type get crossover rate type return crossover rate type\n", "comment": "returns the type of crossover rate that is used\n"}
{"id": "34795363", "raw_code": "\tpublic void setCrossoverRateType(CrossoverRateType crossoverRateType) {\n\t\tthis.crossoverRateType = crossoverRateType;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the type of crossover rate to use.\n\t * \n\t * @see #getCrossoverRateType\n\t * @param crossoverRateType\n\t *            the crossoverRateType to set\n\t */\n", "code": "public void set crossover rate type crossover rate type crossover rate type this crossover rate type crossover rate type\n", "comment": "sets the type of crossover rate to use\n"}
{"id": "34795367", "raw_code": "\tpublic void setCrossoverRate(double crossoverRate) {\n\t\tthis.crossoverRate = crossoverRate;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the crossover rate.\n\t * \n\t * @see #getCrossoverRate\n\t * @param crossoverRate\n\t *            the crossoverRate to set\n\t */\n", "code": "public void set crossover rate double crossover rate this crossover rate crossover rate\n", "comment": "sets the crossover rate\n"}
{"id": "34795395", "raw_code": "\tprotected void invokeOut(String message) {\n\t\tfor (ModuleAutoFinderListener listener : listeners) {\n\t\t\tlistener.out(message);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Invoke an out message for the {@link ModuleAutoFinderListener}.\n\t * \n\t * @param message\n\t *            the message\n\t */\n", "code": "protected void invoke out string message for module auto finder listener listener listeners listener out message\n", "comment": "invoke an out message for the\n"}
{"id": "34795396", "raw_code": "\tprotected void invokeErr(String message) {\n\t\tfor (ModuleAutoFinderListener listener : listeners) {\n\t\t\tlistener.out(message);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Invoke an err message for the {@link ModuleAutoFinderListener}.\n\t * \n\t * @param message\n\t *            the message\n\t */\n", "code": "protected void invoke err string message for module auto finder listener listener listeners listener out message\n", "comment": "invoke an err message for the\n"}
{"id": "34795405", "raw_code": "\tpublic String getAttribute(String attribute) {\n\n\t\ttry {\n\t\t\tElement element = (Element) node;\n\t\t\treturn element.getAttribute(attribute);\n\t\t} catch (ClassCastException e) {\n\t\t}\n\n\t\treturn null;\n\n\t}\n", "raw_comment": "\t/**\n\t * Returns the value of an attribute.\n\t * \n\t * @see #setAttribute\n\t * @param attribute\n\t *            the name of the attribute\n\t * @return the value of the attribute\n\t */\n", "code": "public string get attribute string attribute try element element element node return element get attribute attribute catch class cast exception e return null\n", "comment": "returns the value of an attribute\n"}
{"id": "34795408", "raw_code": "\tpublic JNode getChild() {\n\t\treturn new JNode(node.getFirstChild());\n\t}\n", "raw_comment": "\t/**\n\t * Returns the first child.\n\t * \n\t * @return the first child\n\t */\n", "code": "public jnode get child return new jnode node get first child\n", "comment": "returns the first child\n"}
{"id": "34795409", "raw_code": "\tpublic JNode getChild(String name) {\n\t\tList<JNode> list = getChildren();\n\n\t\tfor (JNode node : list) {\n\t\t\tif (node.getName().equalsIgnoreCase(name)) {\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the first child with a specified name.\n\t * \n\t * @param name\n\t *            the name of the child\n\t * @return the first child with the specified name\n\t */\n", "code": "public jnode get child string name list jnode list get children for jnode node list if node get name equals ignore case name return node return null\n", "comment": "returns the first child with a specified name\n"}
{"id": "34795410", "raw_code": "\tprotected void update(Collection<Individual> population) {\n\t\tSet<Individual> popSet = new LinkedHashSet<Individual>(population);\n\n\t\tif (!popSet.equals(map.keySet())) {\n\n\t\t\tSet<Individual> adds = new LinkedHashSet<Individual>(popSet);\n\t\t\tadds.removeAll(map.keySet());\n\n\t\t\tSet<Individual> removes = new LinkedHashSet<Individual>(map.keySet());\n\t\t\tremoves.removeAll(popSet);\n\n\t\t\tfor (Individual individual : removes) {\n\t\t\t\tremove(individual);\n\t\t\t}\n\n\t\t\tfor (Individual individual : adds) {\n\t\t\t\tadd(individual);\n\t\t\t}\n\t\t}\n\n\t\tassert (population.size() == map.size());\n\n\t\tif (fitnessDirty) {\n\t\t\tcalculateFitness();\n\t\t\tfitnessDirty = false;\n\t\t}\n\n\t}\n", "raw_comment": "\t/**\n\t * Update with current population.\n\t * \n\t * @param population\n\t *            the current population\n\t */\n", "code": "protected void update collection individual population set individual pop set new linked hash set individual population if pop set equals map key set set individual adds new linked hash set individual pop set adds remove all map key set set individual removes new linked hash set individual map key set removes remove all pop set for individual individual removes remove individual for individual individual adds add individual assert population size map size if fitness dirty calculate fitness fitness dirty false\n", "comment": "update with current population\n"}
{"id": "34795411", "raw_code": "\tpublic String getText() {\n\t\treturn node.getTextContent();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the strings content.\n\t * \n\t * @see #setText\n\t * @return the strings content\n\t */\n", "code": "public string get text return node get text content\n", "comment": "returns the strings content\n"}
{"id": "34795412", "raw_code": "\tpublic Node getConfiguration(Document document) {\n\t\tJNode node = new JNode(document, \"module\");\n\t\tnode.setAttribute(\"class\", module.getClass().getName());\n\n\t\tfor (Property property : properties) {\n\t\t\ttry {\n\t\t\t\tJNode p = node.appendChild(\"property\");\n\n\t\t\t\tString name = property.getName();\n\t\t\t\tObject value = property.getValue();\n\n\t\t\t\tp.setAttribute(\"name\", name);\n\t\t\t\tif (value != null) {\n\t\t\t\t\tif (value instanceof Class<?>) {\n\t\t\t\t\t\tp.setText(((Class<?>) value).getCanonicalName());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp.setText(value.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} catch (IllegalArgumentException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\n\t\t}\n\t\treturn node.getNode();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the configuration of the {@link PropertyModule} as XML\n\t * {@link Node}.\n\t * \n\t * @see #setConfiguration\n\t * @param document\n\t *            the XML document\n\t * @return the configuration as XML node\n\t */\n", "code": "public node get configuration document document jnode node new jnode document module node set attribute class module get class get name for property property properties try jnode p node append child property string name property get name object value property get value p set attribute name name if value null if value instanceof class p set text class value get canonical name else p set text value to string catch illegal argument exception e e print stack trace return node get node\n", "comment": "returns the configuration of the\n"}
{"id": "34795415", "raw_code": "\tpublic void setText(String text) {\n\t\tnode.setTextContent(text);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the strings content.\n\t * \n\t * @see #getText\n\t * @param text\n\t *            the strings content to set\n\t */\n", "code": "public void set text string text node set text content text\n", "comment": "sets the strings content\n"}
{"id": "34795416", "raw_code": "\tpublic void setAttribute(String attribute, String value) {\n\t\t((Element) node).setAttribute(attribute, value);\n\t}\n", "raw_comment": "\t/**\n\t * Sets an attribute to a value.\n\t * \n\t * @see #getAttribute\n\t * @param attribute\n\t *            the name of the attribute\n\t * @param value\n\t *            the value\n\t */\n", "code": "public void set attribute string attribute string value element node set attribute attribute value\n", "comment": "sets an attribute to a value\n"}
{"id": "34795417", "raw_code": "\tprotected double distance(IndividualSet w0, IndividualSet w1) {\n\t\treturn distance[w0.getId()][w1.getId()];\n\t}\n", "raw_comment": "\t/**\n\t * Return the distance of two {@link IndividualSet}s.\n\t * \n\t * @param w0\n\t *            first set\n\t * @param w1\n\t *            second set\n\t * @return the distance\n\t */\n", "code": "protected double distance individual set w0 individual set w1 return distance w0 get id w1 get id\n", "comment": "return the distance of two\n"}
{"id": "34795418", "raw_code": "\tpublic JNode appendChild(String name) {\n\t\tDocument document = node.getOwnerDocument();\n\t\tNode n = document.createElement(name);\n\t\treturn appendChild(n);\n\t}\n", "raw_comment": "\t/**\n\t * Append a new {@link JNode} with a given name.\n\t * \n\t * @param name\n\t *            the specified name\n\t * @return the appended JNode\n\t */\n", "code": "public jnode append child string name document document node get owner document node n document create element name return append child n\n", "comment": "append a new\n"}
{"id": "34795420", "raw_code": "\tpublic JNode appendChild(Node node) {\n\t\treturn appendChild(new JNode(node));\n\t}\n", "raw_comment": "\t/**\n\t * Append an XML {@link Node}.\n\t * \n\t * @param node\n\t *            the XML node\n\t * @return the appended JNode\n\t */\n", "code": "public jnode append child node node return append child new jnode node\n", "comment": "append an xml\n"}
{"id": "34795422", "raw_code": "\tpublic Document getDocument() {\n\t\treturn node.getOwnerDocument();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the owner {@link Document}.\n\t * \n\t * @return the owner XML document\n\t */\n", "code": "public document get document return node get owner document\n", "comment": "returns the owner\n"}
{"id": "34795423", "raw_code": "\tprotected void add(Individual individual) {\n\t\tint id0 = freeIDs.removeFirst();\n\t\tIndividualSet w0 = new IndividualSet(individual, id0);\n\n\t\tIndividualSet eq = null;\n\n\t\tfor (IndividualSet w1 : individualSets) {\n\t\t\tint id1 = w1.getId();\n\t\t\tdouble dist = calculateDistance(w0, w1);\n\t\t\tif (dist == 0.0) {\n\t\t\t\teq = w1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdistance[id0][id1] = dist;\n\t\t\tdistance[id1][id0] = dist;\n\t\t}\n\t\tif (eq != null) {\n\t\t\tfreeIDs.add(id0);\n\t\t\tw0 = eq;\n\t\t\tw0.add(individual);\n\t\t} else {\n\t\t\tdistance[id0][id0] = 0.0;\n\t\t\tindividualSets.add(w0);\n\t\t}\n\n\t\tmap.put(individual, w0);\n\t\tfitnessDirty = true;\n\t}\n", "raw_comment": "\t/**\n\t * Add a new {@link Individual}.\n\t * \n\t * @param individual\n\t *            the individual to add\n\t */\n", "code": "protected void add individual individual int id0 free ids remove first individual set w0 new individual set individual id0 individual set eq null for individual set w1 individual sets int id1 w1 get id double dist calculate distance w0 w1 if dist 0 0 eq w1 break distance id0 id1 dist distance id1 id0 dist if eq null free ids add id0 w0 eq w0 add individual else distance id0 id0 0 0 individual sets add w0 map put individual w0 fitness dirty true\n", "comment": "add a new\n"}
{"id": "34795424", "raw_code": "\tprivate void writeObject(ObjectOutputStream out) throws IOException {\n\t\tout.writeObject(module.getClass().toString());\n\t}\n", "raw_comment": "\t/**\n\t * Writes the object information to an output the stream\n\t * \n\t * @param out\n\t *            the output stream\n\t * @throws IOException\n\t */\n", "code": "private void write object object output stream out throws ioexception out write object module get class to string\n", "comment": "writes the object information to an output the stream\n"}
{"id": "34795427", "raw_code": "\tpublic boolean save(String filename, Collection<? extends Module> modules) {\n\t\tFile file = new File(filename);\n\t\treturn save(file, modules);\n\t}\n", "raw_comment": "\t/**\n\t * Save the module configurations to a file (as filename).\n\t * \n\t * @param filename\n\t *            the name of the file\n\t * @param modules\n\t *            the modules\n\t * @return {@code true} if successful\n\t */\n", "code": "public boolean save string filename collection extends module modules file file new file filename return save file modules\n", "comment": "save the module configurations to a file as filename\n"}
{"id": "34795428", "raw_code": "\tpublic boolean save(File file, Collection<? extends Module> modules) {\n\t\tif (!file.exists()) {\n\t\t\ttry {\n\t\t\t\tfile.createNewFile();\n\t\t\t} catch (IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\ttry {\n\t\t\treturn write(new FileOutputStream(file), modules);\n\t\t} catch (FileNotFoundException e) {\n\t\t\te.printStackTrace();\n\t\t\treturn false;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Save the module configurations to a {@link File}.\n\t * \n\t * @param file\n\t *            the file\n\t * @param modules\n\t *            the modules\n\t * @return {@code true} if successful\n\t */\n", "code": "public boolean save file file collection extends module modules if file exists try file create new file catch ioexception e e print stack trace try return write new file output stream file modules catch file not found exception e e print stack trace return false\n", "comment": "save the module configurations to a\n"}
{"id": "34795431", "raw_code": "\tpublic boolean write(OutputStream out, Collection<? extends Module> modules) {\n\t\ttry {\n\t\t\tDocument document = getEmptyDocument();\n\n\t\t\tNode configuration = document.createElement(\"configuration\");\n\t\t\tdocument.appendChild(configuration);\n\t\t\tfor (Module module : modules) {\n\t\t\t\tconfiguration.appendChild(getNode(module, document));\n\t\t\t}\n\t\t\tStreamResult result = new StreamResult(new OutputStreamWriter(out, \"utf-8\"));\n\t\t\tDOMSource source = new DOMSource(document);\n\t\t\tgetStandardTransformer().transform(source, result);\n\n\t\t\treturn true;\n\n\t\t} catch (ParserConfigurationException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (TransformerConfigurationException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (TransformerException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Save the modules configuration to an {@link OutputStream}.\n\t * \n\t * @param out\n\t *            the output stream\n\t * @param modules\n\t *            the modules\n\t * @return {@code true} if successful\n\t */\n", "code": "public boolean write output stream out collection extends module modules try document document get empty document node configuration document create element configuration document append child configuration for module module modules configuration append child get node module document stream result result new stream result new output stream writer out utf 8 domsource source new domsource document get standard transformer transform source result return true catch parser configuration exception e e print stack trace catch transformer configuration exception e e print stack trace catch transformer exception e e print stack trace catch unsupported encoding exception e e print stack trace return false\n", "comment": "save the modules configuration to an\n"}
{"id": "34795433", "raw_code": "\tpublic boolean write(OutputStream out, Module module) {\n\t\ttry {\n\t\t\tDocument document = getEmptyDocument();\n\t\t\tdocument.appendChild(getNode(module, document));\n\t\t\tStreamResult result = new StreamResult(new OutputStreamWriter(out, \"utf-8\"));\n\t\t\tDOMSource source = new DOMSource(document);\n\t\t\tgetStandardTransformer().transform(source, result);\n\t\t\treturn true;\n\t\t} catch (ParserConfigurationException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (TransformerConfigurationException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (TransformerException e) {\n\t\t\te.printStackTrace();\n\t\t} catch (UnsupportedEncodingException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn false;\n\t}\n", "raw_comment": "\t/**\n\t * Save the module configuration to an {@link OutputStream}.\n\t * \n\t * @param out\n\t *            the output stream}\n\t * @param module\n\t *            the module\n\t * @return {@code true} if successful\n\t */\n", "code": "public boolean write output stream out module module try document document get empty document document append child get node module document stream result result new stream result new output stream writer out utf 8 domsource source new domsource document get standard transformer transform source result return true catch parser configuration exception e e print stack trace catch transformer configuration exception e e print stack trace catch transformer exception e e print stack trace catch unsupported encoding exception e e print stack trace return false\n", "comment": "save the module configuration to an\n"}
{"id": "34795434", "raw_code": "\tpublic String toXMLString(Module module) {\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\twrite(out, module);\n\t\treturn out.toString();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the xml representation of the {@link Module}.\n\t * \n\t * @param module\n\t *            the module\n\t * @return the xml representation\n\t */\n", "code": "public string to xmlstring module module byte array output stream out new byte array output stream write out module return out to string\n", "comment": "returns the xml representation of the\n"}
{"id": "34795435", "raw_code": "\tpublic String toXMLString(Collection<? extends Module> modules) {\n\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\n\t\twrite(out, modules);\n\t\treturn out.toString();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the xml representation of the {@link Module}s.\n\t * \n\t * @param modules\n\t *            the modules\n\t * @return the xml representation\n\t */\n", "code": "public string to xmlstring collection extends module modules byte array output stream out new byte array output stream write out modules return out to string\n", "comment": "returns the xml representation of the\n"}
{"id": "34795438", "raw_code": "\tprotected double calculateDistance(IndividualSet w0, IndividualSet w1) {\n\t\treturn w0.getObjectives().distance(w1.getObjectives());\n\t}\n", "raw_comment": "\t/**\n\t * Calculate the distance between two {@link IndividualSet}s.\n\t * \n\t * @param w0\n\t *            the first set\n\t * @param w1\n\t *            the second set\n\t * @return the distance\n\t */\n", "code": "protected double calculate distance individual set w0 individual set w1 return w0 get objectives distance w1 get objectives\n", "comment": "calculate the distance between two\n"}
{"id": "34795442", "raw_code": "\tpublic void add(Class<? extends Module> module) {\n\t\tset.add(module);\n\t}\n", "raw_comment": "\t/**\n\t * Adds a module.\n\t * \n\t * @param module\n\t *            the module to be added\n\t */\n", "code": "public void add class extends module module set add module\n", "comment": "adds a module\n"}
{"id": "34795443", "raw_code": "\tpublic void remove(Class<? extends Module> module) {\n\t\tset.remove(module);\n\t}\n", "raw_comment": "\t/**\n\t * Removes a module.\n\t * \n\t * @param module\n\t *            the module to be removed\n\t */\n", "code": "public void remove class extends module module set remove module\n", "comment": "removes a module\n"}
{"id": "34795445", "raw_code": "\tprotected void calculateFitness() {\n\t\tfor (IndividualSet individual : individualSets) {\n\t\t\tint s = 0;\n\t\t\tfor (IndividualSet other : individualSets) {\n\t\t\t\tif (individual != other && individual.dominates(other)) {\n\t\t\t\t\ts += other.size();\n\t\t\t\t}\n\t\t\t}\n\t\t\tindividual.setStrength(s);\n\t\t}\n\n\t\tfor (IndividualSet individual : individualSets) {\n\t\t\tint f = 0;\n\t\t\tfor (IndividualSet other : individualSets) {\n\t\t\t\tif (individual != other && other.dominates(individual)) {\n\t\t\t\t\tf += other.getStrength() * other.size();\n\t\t\t\t}\n\t\t\t}\n\t\t\tindividual.setFitness(f);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Calculate the fitness.\n\t */\n", "code": "protected void calculate fitness for individual set individual individual sets int s 0 for individual set other individual sets if individual other individual dominates other s other size individual set strength s for individual set individual individual sets int f 0 for individual set other individual sets if individual other other dominates individual f other get strength other size individual set fitness f\n", "comment": "calculate the fitness\n"}
{"id": "34795446", "raw_code": "\tpublic void execute(Collection<Module> modules) {\n\n\t\tfinal Task task = taskProvider.get();\n\t\ttask.addStateListener(this);\n\t\ttask.init(modules);\n\n\t\taddTask(task);\n\n\t\tThread thread = new Thread() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tFuture<Void> future = executor.submit(task);\n\t\t\t\ttry {\n\t\t\t\t\tfuture.get();\n\t\t\t\t} catch (InterruptedException e) {\n\t\t\t\t} catch (ExecutionException e) {\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthread.start();\n\t}\n", "raw_comment": "\t/**\n\t * Executes the specified modules: A {@link Task} is created and submitted.\n\t * \n\t * @param modules\n\t *            the collection of modules for a {@link Task}\n\t */\n", "code": "public void execute collection module modules final task task task provider get task add state listener this task init modules add task task thread thread new thread override public void run future void future executor submit task try future get catch interrupted exception e catch execution exception e thread start\n", "comment": "executes the specified modules a\n"}
{"id": "34795455", "raw_code": "\tprivate int countIndividuals(Collection<IndividualSet> collection) {\n\t\tint c = 0;\n\t\tfor (IndividualSet w : collection) {\n\t\t\tc += w.size();\n\t\t}\n\t\treturn c;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the total number of {@link Individual}s in a collection of\n\t * {@link IndividualSet}s.\n\t * \n\t * @param collection\n\t *            the collection of IndividualSets\n\t * @return the total number of Individuals\n\t */\n", "code": "private int count individuals collection individual set collection int c 0 for individual set w collection c w size return c\n", "comment": "returns the total number of\n"}
{"id": "34795462", "raw_code": "\tpublic Object getValue() {\n\t\ttry {\n\t\t\treturn getter.invoke(module);\n\t\t} catch (IllegalAccessException e) {\n\t\t} catch (IllegalArgumentException e) {\n\t\t} catch (InvocationTargetException e) {\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the value of the property.\n\t * \n\t * @see #setValue\n\t * @return the value of the property\n\t */\n", "code": "public object get value try return getter invoke module catch illegal access exception e catch illegal argument exception e catch invocation target exception e return null\n", "comment": "returns the value of the property\n"}
{"id": "34795465", "raw_code": "\tpublic void setValue(Object value) throws InvocationTargetException {\n\t\tsetValueObject(value);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the value of the property.\n\t * \n\t * @see #getValue\n\t * @param value\n\t *            the value to set\n\t * @throws InvocationTargetException\n\t *             thrown if the value cannot be assigned\n\t */\n", "code": "public void set value object value throws invocation target exception set value object value\n", "comment": "sets the value of the property\n"}
{"id": "34795479", "raw_code": "\tprivate Type getEnclosingType(Type gtype) {\n\t\tif (gtype instanceof ParameterizedType) {\n\t\t\tParameterizedType ptype = (ParameterizedType) gtype;\n\t\t\tType rtype = ptype.getRawType();\n\t\t\tif (rtype.equals(Class.class)) {\n\t\t\t\tType actual = ptype.getActualTypeArguments()[0];\n\t\t\t\treturn actual;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the enclosing actual type of a class.\n\t * \n\t * @param gtype\n\t *            the type of the class\n\t * @return the enclosing actual type\n\t */\n", "code": "private type get enclosing type type gtype if gtype instanceof parameterized type parameterized type ptype parameterized type gtype type rtype ptype get raw type if rtype equals class class type actual ptype get actual type arguments 0 return actual return null\n", "comment": "returns the enclosing actual type of a class\n"}
{"id": "34795481", "raw_code": "\tprivate boolean isAssignable(Type type, Class<?> clazz) {\n\t\tif (type instanceof WildcardType) {\n\t\t\tWildcardType wildcard = (WildcardType) type;\n\t\t\tfor (Type lower : wildcard.getLowerBounds()) {\n\t\t\t\tif (lower instanceof Class<?>) {\n\t\t\t\t\tClass<?> lowerClass = (Class<?>) lower;\n\t\t\t\t\tif (!clazz.isAssignableFrom(lowerClass)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (Type upper : wildcard.getUpperBounds()) {\n\t\t\t\tif (upper instanceof Class<?>) {\n\t\t\t\t\tClass<?> upperClass = (Class<?>) upper;\n\t\t\t\t\tif (!upperClass.isAssignableFrom(clazz)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n", "raw_comment": "\t/**\n\t * Verifies if a class is assignable to a type.\n\t * \n\t * @param type\n\t *            the type\n\t * @param clazz\n\t *            the class\n\t * @return {@code true} if assignable\n\t */\n", "code": "private boolean is assignable type type class clazz if type instanceof wildcard type wildcard type wildcard wildcard type type for type lower wildcard get lower bounds if lower instanceof class class lower class class lower if clazz is assignable from lower class return false for type upper wildcard get upper bounds if upper instanceof class class upper class class upper if upper class is assignable from clazz return false return true\n", "comment": "verifies if a class is assignable to a type\n"}
{"id": "34795484", "raw_code": "\tprotected void setValueObject(Object value) throws InvocationTargetException {\n\t\ttry {\n\t\t\tsetter.invoke(module, value);\n\t\t} catch (Exception e) {\n\t\t\tthrow new InvocationTargetException(e);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Sets the value of the property.\n\t * \n\t * @param value\n\t *            the value to set\n\t * @throws InvocationTargetException\n\t *             thrown if the value cannot be assigned\n\t */\n", "code": "protected void set value object object value throws invocation target exception try setter invoke module value catch exception e throw new invocation target exception e\n", "comment": "sets the value of the property\n"}
{"id": "34795516", "raw_code": "\tpublic PropertyModule getModule() {\n\t\treturn module;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the instance of the {@link PropertyModule}.\n\t * \n\t * @return the instance of the property module\n\t */\n", "code": "public property module get module return module\n", "comment": "returns the instance of the\n"}
{"id": "34795528", "raw_code": "\tprotected void setFile(File file) {\n\t\tthis.file = file;\n\t\tfor (FileOperationsListener listener : listeners) {\n\t\t\tlistener.setCurrentFile(file);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Sets the current file\n\t * \n\t * @see #getFile\n\t * @param file\n\t *            the current file\n\t */\n", "code": "protected void set file file file this file file for file operations listener listener listeners listener set current file file\n", "comment": "sets the current file\n"}
{"id": "34795532", "raw_code": "\tpublic void load() {\n\t\tJFileChooser fc = fileChooser.get();\n\t\tfc.setFileFilter(null);\n\t\tfc.setVisible(true);\n\t\tfc.setCurrentDirectory(getFile());\n\n\t\tint returnVal = fc.showDialog(null, \"Load\");\n\n\t\tif (returnVal == JFileChooser.APPROVE_OPTION) {\n\t\t\tload(fc.getSelectedFile());\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Opens the file chooser for loading the current configuration file.\n\t */\n", "code": "public void load jfile chooser fc file chooser get fc set file filter null fc set visible true fc set current directory get file int return val fc show dialog null load if return val jfile chooser approve option load fc get selected file\n", "comment": "opens the file chooser for loading the current configuration file\n"}
{"id": "34795533", "raw_code": "\tpublic void saveAs() {\n\t\tJFileChooser fc = fileChooser.get();\n\t\tfc.setFileFilter(null);\n\t\tfc.setVisible(true);\n\t\tfc.setCurrentDirectory(getFile());\n\n\t\tint returnVal = fc.showDialog(null, \"Save\");\n\n\t\tif (returnVal == JFileChooser.APPROVE_OPTION) {\n\t\t\tsave(fc.getSelectedFile());\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Opens the file chooser for saving the current configuration file.\n\t */\n", "code": "public void save as jfile chooser fc file chooser get fc set file filter null fc set visible true fc set current directory get file int return val fc show dialog null save if return val jfile chooser approve option save fc get selected file\n", "comment": "opens the file chooser for saving the current configuration file\n"}
{"id": "34795534", "raw_code": "\tpublic void load(File file) {\n\t\tsetFile(file);\n\n\t\tselectedModules.clear();\n\n\t\tModuleLoader loader = new ModuleLoader(moduleRegister);\n\n\t\tCollection<? extends Module> modules = loader.load(file);\n\t\tfor (Module module : modules) {\n\t\t\tPropertyModule m = new PropertyModule(module);\n\t\t\tselectedModules.add(m);\n\t\t}\n\t\tSystem.out.println(\"Loaded configuration from \" + file);\n\t}\n", "raw_comment": "\t/**\n\t * Loads the selected modules from the specified file.\n\t * \n\t * @param file\n\t *            the configuration file\n\t */\n", "code": "public void load file file set file file selected modules clear module loader loader new module loader module register collection extends module modules loader load file for module module modules property module m new property module module selected modules add m system out println loaded configuration from file\n", "comment": "loads the selected modules from the specified file\n"}
{"id": "34795535", "raw_code": "\tpublic void save() {\n\t\tsave(file);\n\t}\n", "raw_comment": "\t/**\n\t * Saves the current selected modules to the current file.\n\t */\n", "code": "public void save save file\n", "comment": "saves the current selected modules to the current file\n"}
{"id": "34795538", "raw_code": "\tpublic void save(File file) {\n\t\tsetFile(file);\n\t\tModuleSaver saver = new ModuleSaver();\n\n\t\tCollection<PropertyModule> modules = selectedModules;\n\n\t\tSystem.out.println(modules);\n\n\t\tsaver.save(file, modules);\n\t\tSystem.out.println(\"Saved configuration to \" + file);\n\t}\n", "raw_comment": "\t/**\n\t * Saves the current selected modules to the specified file.\n\t * \n\t * @param file\n\t *            the configuration file\n\t */\n", "code": "public void save file file set file file module saver saver new module saver collection property module modules selected modules system out println modules saver save file modules system out println saved configuration to file\n", "comment": "saves the current selected modules to the specified file\n"}
{"id": "34795542", "raw_code": "\tprotected void removeModule(PropertyModule module) {\n\t\tint index = tabs.getIndex(module);\n\t\tif (index != -1) {\n\t\t\tmap.remove(module);\n\t\t\ttabs.remove(index);\n\t\t}\n\t\tupdateTabNames();\n\t}\n", "raw_comment": "\t/**\n\t * Removes a module from the panel.\n\t * \n\t * @param module\n\t *            the module to remove\n\t */\n", "code": "protected void remove module property module module int index tabs get index module if index 1 map remove module tabs remove index update tab names\n", "comment": "removes a module from the panel\n"}
{"id": "34795576", "raw_code": "\tprotected int getDivider(Container parent) {\n\n\t\tInsets insets = parent.getInsets();\n\t\tint half = (parent.getWidth() - insets.left - insets.right) / 2;\n\n\t\tint divider = 0;\n\n\t\tfor (int k = 0; k < parent.getComponentCount(); k += 2) {\n\t\t\tComponent comp = parent.getComponent(k);\n\t\t\tDimension d = comp.getPreferredSize();\n\t\t\tdivider = Math.max(divider, d.width);\n\t\t}\n\n\t\tdivider += hGap;\n\n\t\treturn Math.max(divider, half);\n\n\t}\n", "raw_comment": "\t/**\n\t * Returns the divider for the labels.\n\t * \n\t * @param parent\n\t *            the parent container\n\t * @return the divider\n\t */\n", "code": "protected int get divider container parent insets insets parent get insets int half parent get width insets left insets right 2 int divider 0 for int k 0 k parent get component count k 2 component comp parent get component k dimension d comp get preferred size divider math max divider d width divider h gap return math max divider half\n", "comment": "returns the divider for the labels\n"}
{"id": "34795581", "raw_code": "\tpublic String getName(Class<?> clazz) {\n\t\tName name = clazz.getAnnotation(Name.class);\n\t\tCategory category = clazz.getAnnotation(Category.class);\n\t\tif (name != null && !\"\".equals(name.value())) {\n\t\t\treturn name.value();\n\t\t} else if (category != null && !\"\".equals(category.value())) {\n\t\t\treturn category.value();\n\t\t} else {\n\t\t\tString n = clazz.getName();\n\t\t\tint c;\n\t\t\twhile ((c = n.indexOf('.')) != -1) {\n\t\t\t\tn = n.substring(c + 1);\n\t\t\t}\n\n\t\t\t// Trim suffix \"Module\".\n\t\t\tif (n.endsWith(\"Module\")) {\n\t\t\t\tn = n.substring(0, n.length() - \"Module\".length());\n\t\t\t}\n\t\t\treturn n;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Returns the name of a {@link Class}.\n\t * \n\t * @param clazz\n\t *            the class\n\t * @return the name\n\t */\n", "code": "public string get name class clazz name name clazz get annotation name class category category clazz get annotation category class if name null equals name value return name value else if category null equals category value return category value else string n clazz get name int c while c n index of 1 n n substring c 1 trim suffix module if n ends with module n n substring 0 n length module length return n\n", "comment": "returns the name of a\n"}
{"id": "34795582", "raw_code": "\tpublic String getInfo(Class<?> c) {\n\t\tInfo info = c.getAnnotation(Info.class);\n\t\tString text = null;\n\t\tif (info != null && !\"\".equals(info.value())) {\n\t\t\ttext = info.value();\n\t\t}\n\t\treturn text;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the info of a {@link Class}.\n\t * \n\t * @param c\n\t *            the class\n\t * @return the info\n\t */\n", "code": "public string get info class c info info c get annotation info class string text null if info null equals info value text info value return text\n", "comment": "returns the info of a\n"}
{"id": "34795585", "raw_code": "\tpublic String getTooltip(Class<?> c) {\n\n\t\tString name = getName(c);\n\t\tString info = getInfo(c);\n\n\t\tString text = \"<html><b>\" + name + \"</b>\";\n\t\tif (info != null) {\n\t\t\ttext += xmlBreak + info;\n\t\t}\n\t\ttext += \"</html>\";\n\n\t\treturn text;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the tooltip of a {@link Class}.\n\t * \n\t * @param c\n\t *            the class\n\t * @return the tooltip\n\t */\n", "code": "public string get tooltip class c string name get name c string info get info c string text html b name b if info null text xml break info text html return text\n", "comment": "returns the tooltip of a\n"}
{"id": "34795587", "raw_code": "\tpublic ImageIcon getIcon(Class<?> clazz) {\n\t\tIcon icon = clazz.getAnnotation(Icon.class);\n\n\t\tif (icon == null) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn Icons.getIcon(icon.value());\n\t}\n", "raw_comment": "\t/**\n\t * Returns the icon of a {@link Class}.\n\t * \n\t * @param clazz\n\t *            the class\n\t * @return the icon\n\t */\n", "code": "public image icon get icon class clazz icon icon clazz get annotation icon class if icon null return null return icons get icon icon value\n", "comment": "returns the icon of a\n"}
{"id": "34795589", "raw_code": "\tpublic String getName(PropertyModule module) {\n\t\tClass<?> c = module.getModule().getClass();\n\n\t\treturn getName(c);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the name of a {@link PropertyModule}.\n\t * \n\t * @param module\n\t *            the module\n\t * @return the name\n\t */\n", "code": "public string get name property module module class c module get module get class return get name c\n", "comment": "returns the name of a\n"}
{"id": "34795591", "raw_code": "\tpublic String getTooltip(PropertyModule module) {\n\t\tClass<?> c = module.getModule().getClass();\n\n\t\treturn getTooltip(c);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the tooltip of a {@link PropertyModule}.\n\t * \n\t * @param module\n\t *            the module\n\t * @return the tooltip\n\t */\n", "code": "public string get tooltip property module module class c module get module get class return get tooltip c\n", "comment": "returns the tooltip of a\n"}
{"id": "34795595", "raw_code": "\tpublic ImageIcon asFolder(ImageIcon icon) {\n\t\tImageIcon i = Icons.getIcon(Icons.FOLDER);\n\t\tif (icon != null) {\n\t\t\tImageIcon background = icon;\n\t\t\tImageIcon foreground = Icons.getIcon(Icons.SFOLDER);\n\t\t\ti = Icons.merge(background, foreground);\n\t\t}\n\t\treturn i;\n\t}\n", "raw_comment": "\t/**\n\t * Converts the given {@link ImageIcon} into a folder icon.\n\t * \n\t * @param icon\n\t *            the icon\n\t * @return the converted folder icon\n\t */\n", "code": "public image icon as folder image icon icon image icon i icons get icon icons folder if icon null image icon background icon image icon foreground icons get icon icons sfolder i icons merge background foreground return i\n", "comment": "converts the given\n"}
{"id": "34795597", "raw_code": "\tpublic String getName(Property property) {\n\t\tString name;\n\t\tName n = property.getAnnotation(Name.class);\n\t\tif (n == null) {\n\t\t\tname = property.getName();\n\t\t} else {\n\t\t\tname = n.value();\n\t\t}\n\t\treturn name;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the formatted name of the property.\n\t * \n\t * @param property\n\t *            the property\n\t * @return the formatted name\n\t */\n", "code": "public string get name property property string name name n property get annotation name class if n null name property get name else name n value return name\n", "comment": "returns the formatted name of the property\n"}
{"id": "34795598", "raw_code": "\tprotected JTable getTable() {\n\t\treturn new Table();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the instance of the table.\n\t * \n\t * @return the table\n\t */\n", "code": "protected jtable get table return new table\n", "comment": "returns the instance of the table\n"}
{"id": "34795600", "raw_code": "\tprotected AbstractTableModel getModel() {\n\t\treturn new Model();\n\t}\n", "raw_comment": "\t/**\n\t * Returns the instance of the model.\n\t * \n\t * @return the model\n\t */\n", "code": "protected abstract table model get model return new model\n", "comment": "returns the instance of the model\n"}
{"id": "34795601", "raw_code": "\tpublic String formatTooltip(String text) {\n\t\treturn \"<html>\" + text.replaceAll(\"\\n\", xmlBreak) + \"</html>\";\n\t}\n", "raw_comment": "\t/**\n\t * Formats a text for tooltip (inserts break-lines).\n\t * \n\t * @param text\n\t *            the input text\n\t * @return the formatted tooltip text\n\t */\n", "code": "public string format tooltip string text return html text replace all n xml break html\n", "comment": "formats a text for tooltip inserts break lines\n"}
{"id": "34795604", "raw_code": "\tpublic Module getModule(final Class<? extends Task> taskClass) {\n\t\tModule module = new Module() {\n\t\t\t@Override\n\t\t\tpublic void configure(Binder b) {\n\t\t\t\tb.bind(Task.class).to(taskClass);\n\t\t\t}\n\t\t};\n\t\treturn module;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the module for the {@link Configurator}.\n\t * \n\t * @param taskClass\n\t *            the task class\n\t * @return the module\n\t */\n", "code": "public module get module final class extends task task class module module new module override public void configure binder b b bind task class to task class return module\n", "comment": "returns the module for the\n"}
{"id": "34795605", "raw_code": "\tprivate boolean removeEmptyCategories(DefaultMutableTreeNode current) {\n\t\tif (!current.children().hasMoreElements()) {\n\t\t\treturn false;\n\t\t}\n\n\t\tTreeNode node = current.getFirstChild();\n\t\tboolean removed = false;\n\t\twhile (node != null) {\n\t\t\tDefaultMutableTreeNode n = (DefaultMutableTreeNode) node;\n\t\t\tnode = current.getChildAfter(n);\n\n\t\t\tif (n.isLeaf()) {\n\t\t\t\tif (n instanceof CategoryTreeNode && n.getChildCount() == 0) {\n\t\t\t\t\tDefaultMutableTreeNode parent = (DefaultMutableTreeNode) n.getParent();\n\t\t\t\t\tparent.remove(n);\n\t\t\t\t\tremoved = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tremoved = removed || removeEmptyCategories(n);\n\t\t\t}\n\t\t}\n\t\treturn removed;\n\t}\n", "raw_comment": "\t/**\n\t * Removes empty categories. This method can create some new empty\n\t * categories!\n\t * \n\t * @param current\n\t *            the current node\n\t * @return true if an empty category was removed\n\t */\n", "code": "private boolean remove empty categories default mutable tree node current if current children has more elements return false tree node node current get first child boolean removed false while node null default mutable tree node n default mutable tree node node node current get child after n if n is leaf if n instanceof category tree node n get child count 0 default mutable tree node parent default mutable tree node n get parent parent remove n removed true else removed removed remove empty categories n return removed\n", "comment": "removes empty categories\n"}
{"id": "34795620", "raw_code": "\tprotected void setState(State state) {\n\t\tthis.state = state;\n\t\tfor (TaskStateListener listener : listeners) {\n\t\t\tlistener.stateChanged(this);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Sets the state of the {@link Task}.\n\t * \n\t * @param state\n\t *            the state of the task to be set\n\t */\n", "code": "protected void set state state state this state state for task state listener listener listeners listener state changed this\n", "comment": "sets the state of the\n"}
{"id": "34795622", "raw_code": "\tpublic double getVarDecay() {\n\t\treturn varDecay;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the scaling factor for the offset value.\n\t * \n\t * @see #setVarDecay\n\t * @return the scaling factor for the offset value\n\t */\n", "code": "public double get var decay return var decay\n", "comment": "returns the scaling factor for the offset value\n"}
{"id": "34795623", "raw_code": "\tpublic void setVarDecay(double varDecay) {\n\t\tthis.varDecay = varDecay;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the scaling factor for the offset value.\n\t * \n\t * @see #getVarDecay\n\t * @param varDecay\n\t *            the scaling factor for the offset value to set\n\t */\n", "code": "public void set var decay double var decay this var decay var decay\n", "comment": "sets the scaling factor for the offset value\n"}
{"id": "34795625", "raw_code": "\tpublic double getVarInc() {\n\t\treturn varInc;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the initial offset value.\n\t * \n\t * @see #setVarInc\n\t * @return the initial offset value\n\t */\n", "code": "public double get var inc return var inc\n", "comment": "returns the initial offset value\n"}
{"id": "34795626", "raw_code": "\tpublic void setVarInc(double varInc) {\n\t\tthis.varInc = varInc;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the initial offset value.\n\t * \n\t * @see #getVarInc\n\t * @param varInc\n\t *            the initial offset value to set\n\t */\n", "code": "public void set var inc double var inc this var inc var inc\n", "comment": "sets the initial offset value\n"}
{"id": "34795637", "raw_code": "\tprotected void add(PropertyModule pm) {\n\t\tModule module = pm.getModule();\n\t\tif (module.getClass().getAnnotation(Multi.class) != null) {\n\t\t\ttry {\n\t\t\t\tModule m2 = module.getClass().newInstance();\n\t\t\t\tPropertyModule pm2 = new PropertyModule(m2);\n\t\t\t\tselectedModules.add(pm2);\n\t\t\t} catch (InstantiationException e1) {\n\t\t\t\te1.printStackTrace();\n\t\t\t} catch (IllegalAccessException e1) {\n\t\t\t\te1.printStackTrace();\n\t\t\t}\n\t\t} else {\n\t\t\tselectedModules.add(pm);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Adds a new {@link PropertyModule}.\n\t * \n\t * @param pm\n\t *            the property module to be added\n\t */\n", "code": "protected void add property module pm module module pm get module if module get class get annotation multi class null try module m2 module get class new instance property module pm2 new property module m2 selected modules add pm2 catch instantiation exception e1 e1 print stack trace catch illegal access exception e1 e1 print stack trace else selected modules add pm\n", "comment": "adds a new\n"}
{"id": "34795642", "raw_code": "\tprotected Genotype createSATGenotype() {\n\t\tif (!isInit) {\n\t\t\tinit();\n\t\t}\n\n\t\tMap<Object, Double> priorities = new HashMap<Object, Double>();\n\t\tMap<Object, Boolean> phases = new HashMap<Object, Boolean>();\n\n\t\trandomize(variables, lowerBounds, upperBounds, priorities, phases);\n\n\t\treturn manager.createSATGenotype(variables, lowerBounds, upperBounds, priorities, phases);\n\t}\n", "raw_comment": "\t/**\n\t * Returns a random SAT genotype of the constrained problem.\n\t * \n\t * @return a random SAT genotype\n\t */\n", "code": "protected genotype create satgenotype if is init init map object double priorities new hash map object double map object boolean phases new hash map object boolean randomize variables lower bounds upper bounds priorities phases return manager create satgenotype variables lower bounds upper bounds priorities phases\n", "comment": "returns a random sat genotype of the constrained problem\n"}
{"id": "34795655", "raw_code": "\tprotected void bindSolver(Class<? extends Solver> solver) {\n\t\tbind(Solver.class).to(solver).in(SINGLETON);\n\t}\n", "raw_comment": "\t/**\n\t * Binds the specific solver as singleton.\n\t * \n\t * @param solver\n\t *            the solver class to be bound\n\t */\n", "code": "protected void bind solver class extends solver solver bind solver class to solver in singleton\n", "comment": "binds the specific solver as singleton\n"}
{"id": "34795656", "raw_code": "\tprotected void bindSolver(Class<? extends Solver> solver, int instances) {\n\t\tif (instances == 1) {\n\t\t\tbindSolver(solver);\n\t\t} else {\n\t\t\tbindSolver(PooledSolver.class);\n\t\t\tbind(Solver.class).annotatedWith(constant(\"solver\", PooledSolver.class)).to(solver);\n\t\t\tbindConstant(\"instances\", PooledSolver.class).to(instances);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Binds the specific solver as singleton.\n\t * \n\t * @param solver\n\t *            the solver class to be bound\n\t * @param instances\n\t *            the number of instances for pooling\n\t */\n", "code": "protected void bind solver class extends solver solver int instances if instances 1 bind solver solver else bind solver pooled solver class bind solver class annotated with constant solver pooled solver class to solver bind constant instances pooled solver class to instances\n", "comment": "binds the specific solver as singleton\n"}
{"id": "34795658", "raw_code": "\tpublic void setRhs(int rhs) {\n\t\tthis.rhs = rhs;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the right hand side value.\n\t * \n\t * @see #getRhs\n\t * @param rhs\n\t *            the right hand side value to set\n\t */\n", "code": "public void set rhs int rhs this rhs rhs\n", "comment": "sets the right hand side value\n"}
{"id": "34795662", "raw_code": "\tpublic boolean isSatisfied(Model model) {\n\t\tint count = getCount(model);\n\t\treturn operator.isTrue(count, rhs);\n\n\t}\n", "raw_comment": "\t/**\n\t * Checks, if this constraint is satisfied for a given model.\n\t * \n\t * @param model\n\t *            the model\n\t * @return true, iff this constraint is satisfied\n\t */\n", "code": "public boolean is satisfied model model int count get count model return operator is true count rhs\n", "comment": "checks if this constraint is satisfied for a given model\n"}
{"id": "34795663", "raw_code": "\tpublic int getViolationCount(Model model) {\n\t\tint count = getCount(model);\n\n\t\tswitch (operator) {\n\t\tcase LE:\n\t\t\treturn (count <= rhs) ? 0 : (count - rhs);\n\t\tcase EQ:\n\t\t\treturn Math.abs(count - rhs);\n\t\tdefault: // GE\n\t\t\treturn (count >= rhs) ? 0 : (rhs - count);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Specifies if the {@link Constraint} is satisfied for a given\n\t * {@link Model}.\n\t * \n\t * @param model\n\t *            the model\n\t * @return {@code true} if this constraint is satisfied for the model\n\t */\n", "code": "public int get violation count model model int count get count model switch operator case le return count rhs 0 count rhs case eq return math abs count rhs default ge return count rhs 0 rhs count\n", "comment": "specifies if the\n"}
{"id": "34795666", "raw_code": "\tpublic BooleanGenotype getBooleanVector() {\n\t\treturn get(0);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the boolean vector.\n\t * \n\t * @see #setBooleanVector\n\t * @return the booleany vector\n\t */\n", "code": "public boolean genotype get boolean vector return get 0\n", "comment": "returns the boolean vector\n"}
{"id": "34795668", "raw_code": "\tpublic void setBooleanVector(BooleanGenotype booleanVector) {\n\t\tput(0, booleanVector);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the boolean vector.\n\t * \n\t * @see #getBooleanVector\n\t * @param booleanVector\n\t *            the binary vector to set\n\t */\n", "code": "public void set boolean vector boolean genotype boolean vector put 0 boolean vector\n", "comment": "sets the boolean vector\n"}
{"id": "34795669", "raw_code": "\tpublic DoubleGenotype getDoubleVector() {\n\t\treturn get(1);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the double vector.\n\t * \n\t * @see #setDoubleVector\n\t * @return the double vector\n\t */\n", "code": "public double genotype get double vector return get 1\n", "comment": "returns the double vector\n"}
{"id": "34795670", "raw_code": "\tpublic void setDoubleVector(DoubleGenotype doubleVector) {\n\t\tput(1, doubleVector);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the double vector.\n\t * \n\t * @see #getDoubleVector\n\t * @param doubleVector\n\t *            the double vector to set\n\t */\n", "code": "public void set double vector double genotype double vector put 1 double vector\n", "comment": "sets the double vector\n"}
{"id": "34795675", "raw_code": "\tpublic Object variable() {\n\t\treturn variable;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the variable of this {@link Literal}.\n\t * \n\t * @return the variable of this literal\n\t */\n", "code": "public object variable return variable\n", "comment": "returns the variable of this\n"}
{"id": "34795676", "raw_code": "\tpublic boolean phase() {\n\t\treturn phase;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the phase of this {@link Literal}.\n\t * \n\t * @return {@code true} if the literal is not negated, {@code false} if the\n\t *         literal is negated\n\t */\n", "code": "public boolean phase return phase\n", "comment": "returns the phase of this\n"}
{"id": "34795677", "raw_code": "\tpublic Literal negate() {\n\t\treturn new Literal(variable, !phase);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the negated {@link Literal}.\n\t * \n\t * @return the negated literal\n\t */\n", "code": "public literal negate return new literal variable phase\n", "comment": "returns the negated\n"}
{"id": "34795689", "raw_code": "\tpublic int getCoefficient() {\n\t\treturn coeff;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the coefficient.\n\t * \n\t * @return the coefficient\n\t */\n", "code": "public int get coefficient return coeff\n", "comment": "returns the coefficient\n"}
{"id": "34795690", "raw_code": "\tpublic Boolean get(Object var) {\n\t\treturn map.get(var);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the value of the variable, or null if this variable is not\n\t * defined.\n\t * \n\t * @param var\n\t *            the variable\n\t * @return {@code true} if the variable in this model is true or\n\t *         {@code null} if it is not defined\n\t */\n", "code": "public boolean get object var return map get var\n", "comment": "returns the value of the variable or null if this variable is not\n"}
{"id": "34795691", "raw_code": "\tpublic Literal getLiteral() {\n\t\treturn lit;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the literal.\n\t * \n\t * @return the literal\n\t */\n", "code": "public literal get literal return lit\n", "comment": "returns the literal\n"}
{"id": "34795692", "raw_code": "\tpublic void set(Object var, boolean phase) {\n\t\tmap.put(var, phase);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the variable to a phase.\n\t * \n\t * @param var\n\t *            the variable\n\t * @param phase\n\t *            the phase\n\t */\n", "code": "public void set object var boolean phase map put var phase\n", "comment": "sets the variable to a phase\n"}
{"id": "34795693", "raw_code": "\tpublic Term copy() {\n\t\treturn new Term(coeff, lit);\n\t}\n", "raw_comment": "\t/**\n\t * Constructs a copy to this term.\n\t * \n\t * @return a copy of this term\n\t */\n", "code": "public term copy return new term coeff lit\n", "comment": "constructs a copy to this term\n"}
{"id": "34795701", "raw_code": "\tpublic void setInstances(int instances) {\n\t\tif (instances <= 0) {\n\t\t\tthrow new IllegalArgumentException(\"The number of instances must be positive: \" + instances);\n\t\t}\n\t\tthis.instances = instances;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of instances.\n\t * \n\t * @see #getInstances\n\t * @param instances\n\t *            the number of instances\n\t */\n", "code": "public void set instances int instances if instances 0 throw new illegal argument exception the number of instances must be positive instances this instances instances\n", "comment": "sets the number of instances\n"}
{"id": "34795703", "raw_code": "\tpublic Learning getLearning() {\n\t\treturn learning;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the learning strategy.\n\t * \n\t * @see #setLearning\n\t * @return the learning strategy\n\t */\n", "code": "public learning get learning return learning\n", "comment": "returns the learning strategy\n"}
{"id": "34795704", "raw_code": "\tpublic void setLearning(Learning learning) {\n\t\tthis.learning = learning;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the learning strategy.\n\t * \n\t * @see #getLearning\n\t * @param learning\n\t *            the learning strategy to set\n\t */\n", "code": "public void set learning learning learning this learning learning\n", "comment": "sets the learning strategy\n"}
{"id": "34795706", "raw_code": "\tpublic Restarts getRestarts() {\n\t\treturn restarts;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the restart strategy.\n\t * \n\t * @see #setRestarts\n\t * @return the restart strategy\n\t */\n", "code": "public restarts get restarts return restarts\n", "comment": "returns the restart strategy\n"}
{"id": "34795709", "raw_code": "\tpublic void setRestarts(Restarts restarts) {\n\t\tthis.restarts = restarts;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the restart strategy.\n\t * \n\t * @see #getRestarts\n\t * @param restarts\n\t *            the restart strategy to set\n\t */\n", "code": "public void set restarts restarts restarts this restarts restarts\n", "comment": "sets the restart strategy\n"}
{"id": "34795711", "raw_code": "\tpublic int getLearnSize() {\n\t\treturn learnSize;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the number of learned clauses that are kept.\n\t * \n\t * @see #setLearnSize\n\t * @return the number of learned clauses that are kept\n\t */\n", "code": "public int get learn size return learn size\n", "comment": "returns the number of learned clauses that are kept\n"}
{"id": "34795713", "raw_code": "\tprotected void updateActivity(final int var, final double value) {\n\t\tif ((activity[var] += value) > VAR_RESCALE_BOUND) {\n\t\t\tvarRescaleActivity();\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Increments the activity of a variable {@code var} by the specified\n\t * {@code value}.\n\t * \n\t * @param var\n\t *            the variable\n\t * @param value\n\t *            the value to increment the variable\n\t */\n", "code": "protected void update activity final int var final double value if activity var value var rescale bound var rescale activity\n", "comment": "increments the activity of a variable\n"}
{"id": "34795714", "raw_code": "\tpublic void setLearnSize(int learnSize) {\n\t\tthis.learnSize = learnSize;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of learned clauses that are kept.\n\t * \n\t * @see #getLearnSize\n\t * @param learnSize\n\t *            the number of learned clauses\n\t */\n", "code": "public void set learn size int learn size this learn size learn size\n", "comment": "sets the number of learned clauses that are kept\n"}
{"id": "34795717", "raw_code": "\tprotected void setNVars(int n) {\n\t\tsolver.newVar(n);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the instance to n vars.\n\t * \n\t * @param n\n\t *            the number of vars.\n\t */\n", "code": "protected void set nvars int n solver new var n\n", "comment": "sets the instance to n vars\n"}
{"id": "34795718", "raw_code": "\tpublic void setVarInc(double value) {\n\t\tvarInc = value;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the value {@code varInc} to increase the activity of the variables.\n\t * \n\t * @param value\n\t *            the value to increase the activity of the variables\n\t */\n", "code": "public void set var inc double value var inc value\n", "comment": "sets the value\n"}
{"id": "34795720", "raw_code": "\tpublic void setActivity(Object variable, double value) {\n\t\tactivity.put(variable, value);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the activity of the specified variable.\n\t * \n\t * @see #getActivity\n\t * @param variable\n\t *            the specific variable\n\t * @param value\n\t *            the activity value\n\t */\n", "code": "public void set activity object variable double value activity put variable value\n", "comment": "sets the activity of the specified variable\n"}
{"id": "34795721", "raw_code": "\tprotected void varRescaleActivity() {\n\t\tfor (int i = 1; i < activity.length; i++) {\n\t\t\tactivity[i] *= VAR_RESCALE_FACTOR;\n\t\t}\n\t\tvarInc *= VAR_RESCALE_FACTOR;\n\t}\n", "raw_comment": "\t/**\n\t * Rescales the activities of the variables.\n\t */\n", "code": "protected void var rescale activity for int i 1 i activity length i activity i var rescale factor var inc var rescale factor\n", "comment": "rescales the activities of the variables\n"}
{"id": "34795723", "raw_code": "\tpublic void setPhase(Object variable, boolean value) {\n\t\tphase.put(variable, value);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the prioritized phase of the specified variable.\n\t * \n\t * @see #getPhase\n\t * @param variable\n\t *            the specific variable\n\t * @param value\n\t *            the prioritized phase\n\t */\n", "code": "public void set phase object variable boolean value phase put variable value\n", "comment": "sets the prioritized phase of the specified variable\n"}
{"id": "34795724", "raw_code": "\tpublic void setVarActivity(int var, double value) {\n\t\tupdateActivity(var, value);\n\t\tif (heap.inHeap(var)) {\n\t\t\theap.increase(var);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Sets the activity of a variable {@code var} to the specified\n\t * {@code value}.\n\t * \n\t * @param var\n\t *            the variable\n\t * @param value\n\t *            the activity to set\n\t */\n", "code": "public void set var activity int var double value update activity var value if heap in heap var heap increase var\n", "comment": "sets the activity of a variable\n"}
{"id": "34795725", "raw_code": "\tpublic double getActivity(Object variable) {\n\t\treturn activity.get(variable);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the activity of a variable.\n\t * \n\t * @see #setActivity\n\t * @param variable\n\t *            the variable\n\t * @return the activity\n\t */\n", "code": "public double get activity object variable return activity get variable\n", "comment": "returns the activity of a variable\n"}
{"id": "34795726", "raw_code": "\tpublic boolean getPhase(Object variable) {\n\t\treturn phase.get(variable);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the prioritized phase of a variable.\n\t * \n\t * @see #setPhase\n\t * @param variable\n\t *            the variable\n\t * @return the prioritized phase\n\t */\n", "code": "public boolean get phase object variable return phase get variable\n", "comment": "returns the prioritized phase of a variable\n"}
{"id": "34795733", "raw_code": "\tprotected double h(List<Double> f, double g) {\n\t\tdouble h = 0;\n\t\tfor (double e : f) {\n\t\t\th -= ((e / (1 + g)) * (1 + sin(3 * PI * e)));\n\t\t}\n\t\th += f.size() + 1;\n\t\treturn h;\n\t}\n", "raw_comment": "\t/**\n\t * The h function\n\t * \n\t * @param f\n\t *            the f results\n\t * @param g\n\t *            the g result\n\t * @return h(f,g)\n\t */\n", "code": "protected double h list double f double g double h 0 for double e f h e 1 g 1 sin 3 pi e h f size 1 return h\n", "comment": "the h function\n"}
{"id": "34795739", "raw_code": "\tpublic void setBits(int bits) {\n\t\tthis.bits = bits;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the number of bits per double value.\n\t * \n\t * @param bits\n\t *            the bits to set\n\t */\n", "code": "public void set bits int bits this bits bits\n", "comment": "sets the number of bits per double value\n"}
{"id": "34795743", "raw_code": "\tpublic void setFunction(Function function) {\n\t\tthis.function = function;\n\n\t\tswitch (function) {\n\t\tdefault: // DTLZ1\n\t\t\tn = 7;\n\t\t\tm = 3;\n\t\t\tk = 5;\n\t\t\tbreak;\n\t\tcase DTLZ2:\n\t\tcase DTLZ3:\n\t\tcase DTLZ4:\n\t\tcase DTLZ5:\n\t\tcase DTLZ6:\n\t\t\tn = 12;\n\t\t\tm = 3;\n\t\t\tk = 10;\n\t\t\tbreak;\n\t\tcase DTLZ7:\n\t\t\tn = 22;\n\t\t\tm = 3;\n\t\t\tk = 20;\n\t\t\tbreak;\n\t\t}\n\n\t}\n", "raw_comment": "\t/**\n\t * Sets the ZDT function.\n\t * \n\t * @param function\n\t *            the ZDT function\n\t */\n", "code": "public void set function function function this function function switch function default dtlz1 n 7 m 3 k 5 break case dtlz2 case dtlz3 case dtlz4 case dtlz5 case dtlz6 n 12 m 3 k 10 break case dtlz7 n 22 m 3 k 20 break\n", "comment": "sets the zdt function\n"}
{"id": "34795749", "raw_code": "\tpublic void setM(int m) {\n\t\tthis.m = m;\n\t\tthis.k = n - m + 1;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the m value.\n\t * \n\t * @param m\n\t *            the m to set\n\t */\n", "code": "public void set m int m this m m this k n m 1\n", "comment": "sets the m value\n"}
{"id": "34795752", "raw_code": "\tprivate double toDouble(List<Boolean> list, int begin, int end) {\n\t\t// this is very efficient since only integers and bit operations are\n\t\t// used\n\t\tint b = 1;\n\t\tint sum = 0;\n\t\tfor (int i = end - 1; i >= begin; i--) {\n\t\t\tif (list.get(i)) {\n\t\t\t\tsum |= b;\n\t\t\t}\n\t\t\tb <<= 1;\n\t\t}\n\n\t\treturn (double) sum / b;\n\t}\n", "raw_comment": "\t/**\n\t * Converts a sublist of boolean values to an integer in [0;1).\n\t * \n\t * @param list\n\t *            the list of booleans\n\t * @param begin\n\t *            the begin of the sublist\n\t * @param end\n\t *            the end of the sublist\n\t * @return the double value\n\t */\n", "code": "private double to double list boolean list int begin int end this is very efficient since only integers and bit operations are used int b 1 int sum 0 for int i end 1 i begin i if list get i sum b b 1 return double sum b\n", "comment": "converts a sublist of boolean values to an integer in 0 1\n"}
{"id": "34795753", "raw_code": "\tpublic void setK(int k) {\n\t\tthis.k = k;\n\t\tthis.n = m + k - 1;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the k value.\n\t * \n\t * @param k\n\t *            the k to set\n\t */\n", "code": "public void set k int k this k k this n m k 1\n", "comment": "sets the k value\n"}
{"id": "34795768", "raw_code": "\tpublic void setL(int l) {\n\t\tassert (l > 0);\n\n\t\tif (function == Function.WFG2 || function == Function.WFG3) {\n\t\t\tthis.l = (int) Math.ceil((double) l / 2) * 2;\n\t\t} else {\n\t\t\tthis.l = l;\n\t\t}\n\n\t}\n", "raw_comment": "\t/**\n\t * Sets the l value.\n\t * \n\t * @param l\n\t *            the l value\n\t */\n", "code": "public void set l int l assert l 0 if function function wfg2 function function wfg3 this l int math ceil double l 2 2 else this l l\n", "comment": "sets the l value\n"}
{"id": "34795772", "raw_code": "\tpublic void setCapacity(double capacity) {\n\t\tthis.capacity = capacity;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the capacity of this knapsack.\n\t * \n\t * @param capacity\n\t *            the capacity\n\t */\n", "code": "public void set capacity double capacity this capacity capacity\n", "comment": "sets the capacity of this knapsack\n"}
{"id": "34795773", "raw_code": "\tpublic void setM(int m) {\n\t\tassert (m >= 2);\n\n\t\tthis.m = m;\n\t\tif (m == 2) {\n\t\t\tsetL(4);\n\t\t} else {\n\t\t\tsetL(2 * (m - 1));\n\t\t}\n\t\tsetK(k);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the m value.\n\t * \n\t * @param m\n\t *            the m to set\n\t */\n", "code": "public void set m int m assert m 2 this m m if m 2 set l 4 else set l 2 m 1 set k k\n", "comment": "sets the m value\n"}
{"id": "34795776", "raw_code": "\tpublic void setProfit(Item item, int value) {\n\t\tprofit.put(item, value);\n\t}\n", "raw_comment": "\t/**\n\t * Set the profit of an item.\n\t * \n\t * @param item\n\t *            the item\n\t * @param value\n\t *            the profit\n\t */\n", "code": "public void set profit item item int value profit put item value\n", "comment": "set the profit of an item\n"}
{"id": "34795779", "raw_code": "\tpublic int getProfit(Item item) {\n\t\treturn profit.get(item);\n\t}\n", "raw_comment": "\t/**\n\t * Get the profit of an item.\n\t * \n\t * @param item\n\t *            the item\n\t * @return the profit\n\t */\n", "code": "public int get profit item item return profit get item\n", "comment": "get the profit of an item\n"}
{"id": "34795780", "raw_code": "\tpublic void setWeight(Item item, int value) {\n\t\tweight.put(item, value);\n\t}\n", "raw_comment": "\t/**\n\t * Set the weight of an item.\n\t * \n\t * @param item\n\t *            the item\n\t * @param value\n\t *            the weight\n\t */\n", "code": "public void set weight item item int value weight put item value\n", "comment": "set the weight of an item\n"}
{"id": "34795782", "raw_code": "\tpublic int getWeight(Item item) {\n\t\treturn weight.get(item);\n\t}\n", "raw_comment": "\t/**\n\t * Get the weight of an item.\n\t * \n\t * @param item\n\t *            the item\n\t * @return the weight\n\t */\n", "code": "public int get weight item item return weight get item\n", "comment": "get the weight of an item\n"}
{"id": "34795783", "raw_code": "\tpublic void setK(int k) {\n\t\tassert (k > 0);\n\n\t\tif ((k % (m - 1)) == 0) {\n\t\t\tthis.k = k;\n\t\t} else {\n\t\t\tdouble div = (double) k / (m - 1);\n\t\t\tthis.k = (m - 1) * (int) Math.ceil(div);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Sets the k value.\n\t * \n\t * @param k\n\t *            the k to set\n\t */\n", "code": "public void set k int k assert k 0 if k m 1 0 this k k else double div double k m 1 this k m 1 int math ceil div\n", "comment": "sets the k value\n"}
{"id": "34795790", "raw_code": "\tprotected double getOverload(Knapsack knapsack, Collection<Item> items) {\n\t\tdouble weight = 0;\n\t\tfor (Item i : items) {\n\t\t\tweight += knapsack.getWeight(i);\n\t\t}\n\t\treturn max(0, weight - knapsack.getCapacity());\n\t}\n", "raw_comment": "\t/**\n\t * Computes how much the given item exceed the defined capacity of the\n\t * knapsack.\n\t * \n\t * @param knapsack\n\t *            the knapsack\n\t * @param items\n\t *            the items\n\t * @return the overload\n\t */\n", "code": "protected double get overload knapsack knapsack collection item items double weight 0 for item i items weight knapsack get weight i return max 0 weight knapsack get capacity\n", "comment": "computes how much the given item exceed the defined capacity of the\n"}
{"id": "34795792", "raw_code": "\tprotected int getProfit(Knapsack knapsack, Collection<Item> items) {\n\t\tint profit = 0;\n\t\tfor (Item i : items) {\n\t\t\tprofit += knapsack.getProfit(i);\n\t\t}\n\t\treturn profit;\n\t}\n", "raw_comment": "\t/**\n\t * Computes the profit for the given items for this knapsack.\n\t * \n\t * @param knapsack\n\t *            the knapsack\n\t * @param items\n\t *            the items\n\t * @return the profit\n\t */\n", "code": "protected int get profit knapsack knapsack collection item items int profit 0 for item i items profit knapsack get profit i return profit\n", "comment": "computes the profit for the given items for this knapsack\n"}
{"id": "34795793", "raw_code": "\tprotected int getInt(String line) {\n\t\tMatcher matcher = Pattern.compile(POSINT).matcher(line);\n\t\tmatcher.find();\n\t\treturn new Integer(matcher.group());\n\t}\n", "raw_comment": "\t/**\n\t * Get the integer value in the line.\n\t * \n\t * @param line\n\t *            the line\n\t * @return the integer value\n\t */\n", "code": "protected int get int string line matcher matcher pattern compile posint matcher line matcher find return new integer matcher group\n", "comment": "get the integer value in the line\n"}
{"id": "34795796", "raw_code": "\tprotected double getDouble(String line) {\n\t\tMatcher matcher = Pattern.compile(POSDOUBLE).matcher(line);\n\t\tmatcher.find();\n\t\treturn new Double(matcher.group());\n\t}\n", "raw_comment": "\t/**\n\t * Get the double value in the line.\n\t * \n\t * @param line\n\t *            the line\n\t * @return the double value\n\t */\n", "code": "protected double get double string line matcher matcher pattern compile posdouble matcher line matcher find return new double matcher group\n", "comment": "get the double value in the line\n"}
{"id": "34795805", "raw_code": "\tpublic int costs(int d, int i, int j) {\n\t\treturn board[d][i][j];\n\t}\n", "raw_comment": "\t/**\n\t * Returns the costs for one field of a specified dimension.\n\t * \n\t * @param d\n\t *            the dimension\n\t * @param i\n\t *            the row\n\t * @param j\n\t *            the column\n\t * @return the costs of this field in the dimension\n\t */\n", "code": "public int costs int d int i int j return board d i j\n", "comment": "returns the costs for one field of a specified dimension\n"}
{"id": "34795807", "raw_code": "\tpublic int dim() {\n\t\treturn dim;\n\t}\n", "raw_comment": "\t/**\n\t * The number of objective functions.\n\t * \n\t * @return the number of objective functions\n\t */\n", "code": "public int dim return dim\n", "comment": "the number of objective functions\n"}
{"id": "34795809", "raw_code": "\tpublic void setQueen(int i, int j, boolean value) {\n\t\tboard[i][j] = value;\n\t}\n", "raw_comment": "\t/**\n\t * Adds or removes queen from a field.\n\t * \n\t * @param i\n\t *            the row\n\t * @param j\n\t *            the column\n\t * @param value\n\t *            {@code true} if a queen is on the field, else {@code false}\n\t */\n", "code": "public void set queen int i int j boolean value board i j value\n", "comment": "adds or removes queen from a field\n"}
{"id": "34795817", "raw_code": "\tpublic Dec getDecoder() {\n\t\treturn decoder;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the decoder strategy.\n\t * \n\t * @return the decoder strategy\n\t */\n", "code": "public dec get decoder return decoder\n", "comment": "returns the decoder strategy\n"}
{"id": "34795820", "raw_code": "\tpublic void setDecoder(Dec decoder) {\n\t\tthis.decoder = decoder;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the decoder strategy.\n\t * \n\t * @param decoder\n\t *            the decoder strategy\n\t */\n", "code": "public void set decoder dec decoder this decoder decoder\n", "comment": "sets the decoder strategy\n"}
{"id": "34795832", "raw_code": "\tpublic void setSeed(int seed) {\n\t\tthis.seed = seed;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the seed of the problem generator.\n\t * \n\t * @param seed\n\t *            the seed of the problem generator\n\t */\n", "code": "public void set seed int seed this seed seed\n", "comment": "sets the seed of the problem generator\n"}
{"id": "34795833", "raw_code": "\tprivate int sum(QueensBoard board, int d) {\n\t\tint sum = 0;\n\n\t\tfor (int i = 0; i < problem.size(); i++) {\n\t\t\tfor (int j = 0; j < problem.size(); j++) {\n\t\t\t\tif (board.isQueen(i, j)) {\n\t\t\t\t\tsum += problem.costs(d, i, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn sum;\n\t}\n", "raw_comment": "\t/**\n\t * Sums the costs of a {@link QueensBoard} in a specific dimension {@code d}\n\t * .\n\t * \n\t * @param board\n\t *            the board\n\t * @param d\n\t *            the dimension\n\t * @return the sum of the costs\n\t */\n", "code": "private int sum queens board board int d int sum 0 for int i 0 i problem size i for int j 0 j problem size j if board is queen i j sum problem costs d i j return sum\n", "comment": "sums the costs of a\n"}
{"id": "34795842", "raw_code": "\tprotected int u(List<Boolean> x, int begin, int end) {\n\t\tint u = 0;\n\t\tfor (int i = begin; i < end; i++) {\n\t\t\tif (x.get(i)) {\n\t\t\t\tu++;\n\t\t\t}\n\t\t}\n\t\treturn u;\n\t}\n", "raw_comment": "\t/**\n\t * Counts the number of {@code true}s in the array.\n\t * \n\t * @param x\n\t *            list of booleans\n\t * @param begin\n\t *            start of the array\n\t * @param end\n\t *            end of the array\n\t * @return the number of {@code true}s in the array\n\t */\n", "code": "protected int u list boolean x int begin int end int u 0 for int i begin i end i if x get i u return u\n", "comment": "counts the number of\n"}
{"id": "34795854", "raw_code": "\tprotected double toDouble(List<Boolean> list, int offset, int bits) {\n\t\tdouble value = 0;\n\t\tfor (int i = 0; i < bits; i++) {\n\t\t\tif (list.get(i + offset)) {\n\t\t\t\tvalue += Math.pow(0.5, i + 1);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t}\n", "raw_comment": "\t/**\n\t * Converts a binary representation of a double to a double value.\n\t * \n\t * @param list\n\t *            the complete list of doubles\n\t * @param offset\n\t *            the offset to the first bit\n\t * @param bits\n\t *            the number of bits for one double\n\t * @return the double value\n\t */\n", "code": "protected double to double list boolean list int offset int bits double value 0 for int i 0 i bits i if list get i offset value math pow 0 5 i 1 return value\n", "comment": "converts a binary representation of a double to a double value\n"}
{"id": "34795855", "raw_code": "\tpublic void setEncoding(Encoding encoding) {\n\t\tthis.encoding = encoding;\n\t\tvalidate();\n\t}\n", "raw_comment": "\t/**\n\t * Set the encoding (double or binary).\n\t * \n\t * @param encoding\n\t *            the encoding\n\t */\n", "code": "public void set encoding encoding encoding this encoding encoding validate\n", "comment": "set the encoding double or binary\n"}
{"id": "34795857", "raw_code": "\tpublic void setFunction(Function function) {\n\t\tthis.function = function;\n\t\tvalidate();\n\n\t\tswitch (function) {\n\t\tcase ZDT1:\n\t\t\tn = 30;\n\t\t\tbreak;\n\t\tcase ZDT2:\n\t\t\tn = 30;\n\t\t\tbreak;\n\t\tcase ZDT3:\n\t\t\tn = 30;\n\t\t\tbreak;\n\t\tcase ZDT4:\n\t\t\tn = 10;\n\t\t\tbreak;\n\t\tcase ZDT5:\n\t\t\tn = 11;\n\t\t\tbreak;\n\t\tcase ZDT6:\n\t\t\tn = 10;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tn = 30;\n\t\t}\n\n\t}\n", "raw_comment": "\t/**\n\t * Sets the ZDT function.\n\t * \n\t * @param function\n\t *            the ZDT function\n\t */\n", "code": "public void set function function function this function function validate switch function case zdt1 n 30 break case zdt2 n 30 break case zdt3 n 30 break case zdt4 n 10 break case zdt5 n 11 break case zdt6 n 10 break default n 30\n", "comment": "sets the zdt function\n"}
{"id": "34795860", "raw_code": "\tprotected void validate() {\n\t\tif (function == Function.ZDT5 && encoding == Encoding.DOUBLE) {\n\t\t\tencoding = Encoding.BINARY;\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Validates all settings. In particular, ZDT5 can be encoded binary only.\n\t */\n", "code": "protected void validate if function function zdt5 encoding encoding double encoding encoding binary\n", "comment": "validates all settings\n"}
{"id": "34795871", "raw_code": "\tpublic void init(Random random) {\n\t\tCollections.shuffle(this, random);\n\t}\n", "raw_comment": "\t/**\n\t * Randomizes this genotype by a random permutation.\n\t * \n\t * @param random\n\t *            the random number generator\n\t */\n", "code": "public void init random random collections shuffle this random\n", "comment": "randomizes this genotype by a random permutation\n"}
{"id": "34795873", "raw_code": "\tpublic void init(Random random) {\n\t\tsuper.init(random, keys.size());\n\t}\n", "raw_comment": "\t/**\n\t * Initialize this genotype with random values based on the size of the\n\t * {@code keys}.\n\t * \n\t * @param random\n\t *            the random number generator\n\t */\n", "code": "public void init random random super init random keys size\n", "comment": "initialize this genotype with random values based on the size of the\n"}
{"id": "34795874", "raw_code": "\tpublic V getValue(int index) {\n\t\treturn values.get(get(index));\n\t}\n", "raw_comment": "\t/**\n\t * Returns the element value of the index.\n\t * \n\t * @param index\n\t *            the index\n\t * @return the element\n\t */\n", "code": "public v get value int index return values get get index\n", "comment": "returns the element value of the index\n"}
{"id": "34795880", "raw_code": "\tpublic void init(Random random) {\n\t\tsuper.init(random, list.size());\n\t}\n", "raw_comment": "\t/**\n\t * Initialize this genotype with random values based on the number of keys.\n\t * \n\t * @param random\n\t *            the random number generator\n\t */\n", "code": "public void init random random super init random list size\n", "comment": "initialize this genotype with random values based on the number of keys\n"}
{"id": "34795893", "raw_code": "\tpublic int getLowerBound(int index) {\n\t\treturn bounds.getLowerBound(index);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the lower bound for the {@code i}-th element.\n\t * \n\t * @param index\n\t *            the {@code i}-th element\n\t * @return the lower bound of the {@code i}-th element\n\t */\n", "code": "public int get lower bound int index return bounds get lower bound index\n", "comment": "returns the lower bound for the\n"}
{"id": "34795895", "raw_code": "\tpublic int getUpperBound(int index) {\n\t\treturn bounds.getUpperBound(index);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the upper bound for the {@code i}-th element.\n\t * \n\t * @param index\n\t *            the {@code i}-th element\n\t * @return the upper bound of the {@code i}-th element\n\t */\n", "code": "public int get upper bound int index return bounds get upper bound index\n", "comment": "returns the upper bound for the\n"}
{"id": "34795898", "raw_code": "\tpublic void init(Random random, int n) {\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint lo = getLowerBound(i);\n\t\t\tint hi = getUpperBound(i);\n\t\t\tint value = lo + random.nextInt(hi - lo + 1);\n\t\t\tif (i >= size()) {\n\t\t\t\tadd(value);\n\t\t\t} else {\n\t\t\t\tset(i, value);\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Initialize this genotype with {@code n} random values.\n\t * \n\t * @param random\n\t *            the random number generator\n\t * @param n\n\t *            the number of elements in the resulting genotype\n\t */\n", "code": "public void init random random int n for int i 0 i n i int lo get lower bound i int hi get upper bound i int value lo random next int hi lo 1 if i size add value else set i value\n", "comment": "initialize this genotype with\n"}
{"id": "34795913", "raw_code": "\tpublic double getLowerBound(int index) {\n\t\treturn bounds.getLowerBound(index);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the lower bound for the {@code i}-th element.\n\t * \n\t * @param index\n\t *            the {@code i}-th element\n\t * @return the lower bound of the {@code i}-th element\n\t */\n", "code": "public double get lower bound int index return bounds get lower bound index\n", "comment": "returns the lower bound for the\n"}
{"id": "34795916", "raw_code": "\tpublic double getUpperBound(int index) {\n\t\treturn bounds.getUpperBound(index);\n\t}\n", "raw_comment": "\t/**\n\t * Returns the upper bound for the {@code i}-th element.\n\t * \n\t * @param index\n\t *            the {@code i}-th element\n\t * @return the upper bound of the {@code i}-th element\n\t */\n", "code": "public double get upper bound int index return bounds get upper bound index\n", "comment": "returns the upper bound for the\n"}
{"id": "34795917", "raw_code": "\tpublic void init(Random random, int n) {\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tdouble lo = getLowerBound(i);\n\t\t\tdouble hi = getUpperBound(i);\n\t\t\tdouble value = lo + random.nextDouble() * (hi - lo);\n\t\t\tif (i >= size()) {\n\t\t\t\tadd(value);\n\t\t\t} else {\n\t\t\t\tset(i, value);\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Initialize this genotype with {@code n} random values.\n\t * \n\t * @param random\n\t *            the random number generator\n\t * @param n\n\t *            the number of elements in the resulting genotype\n\t */\n", "code": "public void init random random int n for int i 0 i n i double lo get lower bound i double hi get upper bound i double value lo random next double hi lo if i size add value else set i value\n", "comment": "initialize this genotype with\n"}
{"id": "34795923", "raw_code": "\tpublic void init(Random random, int n) {\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (i >= size()) {\n\t\t\t\tadd(random.nextBoolean());\n\t\t\t} else {\n\t\t\t\tset(i, random.nextBoolean());\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Initialize this genotype with {@code n} random values.\n\t * \n\t * @param random\n\t *            the random number generator\n\t * @param n\n\t *            the number of elements in the resulting genotype\n\t */\n", "code": "public void init random random int n for int i 0 i n i if i size add random next boolean else set i random next boolean\n", "comment": "initialize this genotype with\n"}
{"id": "34795932", "raw_code": "\tpublic boolean isFeasible() {\n\t\treturn feasible;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the feasibility.\n\t * \n\t * @return the feasibility\n\t */\n", "code": "public boolean is feasible return feasible\n", "comment": "returns the feasibility\n"}
{"id": "34795940", "raw_code": "\tpublic Objective get(Value<?> value) {\n\t\tObjective objective = null;\n\t\tfor (Entry<Objective, Value<?>> entry : this) {\n\t\t\tValue<?> v = entry.getValue();\n\t\t\tif (value.equals(v)) {\n\t\t\t\tObjective o = entry.getKey();\n\t\t\t\tobjective = o;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn objective;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the objective that is assigned to the given value. Returns\n\t * {@code null} if the value does not exist.\n\t * \n\t * @param value\n\t *            the given value\n\t * @return the objective\n\t */\n", "code": "public objective get value value objective objective null for entry objective value entry this value v entry get value if value equals v objective o entry get key objective o break return objective\n", "comment": "returns the objective that is assigned to the given value\n"}
{"id": "34795945", "raw_code": "\tprotected void bindOptimizer(Class<? extends Optimizer> optimizer) {\n\t\tbind(Optimizer.class).to(optimizer).in(SINGLETON);\n\t}\n", "raw_comment": "\t/**\n\t * Binds the given {@link Optimizer}.\n\t * \n\t * @param optimizer\n\t *            the Optimizer to bind\n\t */\n", "code": "protected void bind optimizer class extends optimizer optimizer bind optimizer class to optimizer in singleton\n", "comment": "binds the given\n"}
{"id": "34795946", "raw_code": "\tpublic void add(Objective objective, Value<?> value) {\n\t\tif (value == null) {\n\t\t\tmap.put(objective, new DoubleValue(null));\n\t\t} else {\n\t\t\tmap.put(objective, value);\n\t\t}\n\t\tarray = null;\n\t}\n", "raw_comment": "\t/**\n\t * Adds the objective with the specified value.\n\t * \n\t * @param objective\n\t *            the objective\n\t * @param value\n\t *            the value\n\t */\n", "code": "public void add objective objective value value if value null map put objective new double value null else map put objective value array null\n", "comment": "adds the objective with the specified value\n"}
{"id": "34795949", "raw_code": "\tprotected void nextIteration() throws TerminationException, StopException {\n\t\tcompleter.complete(population);\n\t\tarchive.update(population);\n\t\titeration.next();\n\t\tfor (OptimizerIterationListener listener : iterationListeners) {\n\t\t\tlistener.iterationComplete(this, iteration.value());\n\t\t}\n\t\tcontrol.checkpointStop();\n\t}\n", "raw_comment": "\t/**\n\t * Call this method if a new iteration started.\n\t * \n\t * @throws StopException\n\t *             if the optimization is stopped\n\t * @throws TerminationException\n\t *             if the optimization is terminated\n\t */\n", "code": "protected void next iteration throws termination exception stop exception completer complete population archive update population iteration next for optimizer iteration listener listener iteration listeners listener iteration complete this iteration value control checkpoint stop\n", "comment": "call this method if a new iteration started\n"}
{"id": "34795950", "raw_code": "\tpublic boolean update(Individual individual) {\n\t\tSet<Individual> set = new HashSet<Individual>();\n\t\tset.add(individual);\n\t\treturn update(set);\n\t}\n", "raw_comment": "\t/**\n\t * Updates the archive with a single individual.\n\t * \n\t * @param individual\n\t *            the individual that is used to update the archive\n\t * @return returns {@code true} if the content of the archive changed\n\t */\n", "code": "public boolean update individual individual set individual set new hash set individual set add individual return update set\n", "comment": "updates the archive with a single individual\n"}
{"id": "34795951", "raw_code": "\tpublic void add(Objective objective, double value) {\n\t\tadd(objective, new DoubleValue(value));\n\t}\n", "raw_comment": "\t/**\n\t * Adds the objective with the specified double value.\n\t * \n\t * @param objective\n\t *            the objective\n\t * @param value\n\t *            the value\n\t */\n", "code": "public void add objective objective double value add objective new double value value\n", "comment": "adds the objective with the specified double value\n"}
{"id": "34795956", "raw_code": "\tpublic void add(Objective objective, int value) {\n\t\tadd(objective, new IntegerValue(value));\n\t}\n", "raw_comment": "\t/**\n\t * Adds the objective with the specified integer value.\n\t * \n\t * @param objective\n\t *            the objective\n\t * @param value\n\t *            the value\n\t */\n", "code": "public void add objective objective int value add objective new integer value value\n", "comment": "adds the objective with the specified integer value\n"}
{"id": "34795960", "raw_code": "\tpublic void execute() {\n\t\toptimizer.startOptimization();\n\t\ttry {\n\t\t\toptimizer.optimize();\n\t\t} catch (StopException e) {\n\t\t\tSystem.out.println(\"Optimization stopped.\");\n\t\t} catch (TerminationException e) {\n\t\t\tSystem.err.println(\"Optimization terminated.\");\n\t\t} finally {\n\t\t\toptimizer.stopOptimization();\n\t\t}\n\n\t}\n", "raw_comment": "\t/**\n\t * Starts the optimization process.\n\t */\n", "code": "public void execute optimizer start optimization try optimizer optimize catch stop exception e system out println optimization stopped catch termination exception e system err println optimization terminated finally optimizer stop optimization\n", "comment": "starts the optimization process\n"}
{"id": "34795965", "raw_code": "\tpublic void addAll(Objectives objectives) {\n\t\tmap.putAll(objectives.map);\n\t\tarray = null;\n\t}\n", "raw_comment": "\t/**\n\t * Adds all objective with the specified value specified in\n\t * {@link Objectives}.\n\t * \n\t * @param objectives\n\t *            the objectives\n\t */\n", "code": "public void add all objectives objectives map put all objectives map array null\n", "comment": "adds all objective with the specified value specified in\n"}
{"id": "34795972", "raw_code": "\tpublic void next() {\n\t\tvalue++;\n\t}\n", "raw_comment": "\t/**\n\t * Increases the iteration value by 1.\n\t */\n", "code": "public void next value\n", "comment": "increases the iteration value by 1\n"}
{"id": "34795973", "raw_code": "\tpublic int max() {\n\t\treturn maxIterations;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the maximal number of iterations.\n\t * \n\t * @return the maximal number of iterations\n\t */\n", "code": "public int max return max iterations\n", "comment": "returns the maximal number of iterations\n"}
{"id": "34795984", "raw_code": "\tpublic double distance(Objectives other) {\n\t\tdouble[] va = this.array();\n\t\tdouble[] vb = other.array();\n\n\t\tdouble s = 0;\n\t\tfor (int i = 0; i < va.length; i++) {\n\t\t\ts += (va[i] - vb[i]) * (va[i] - vb[i]);\n\t\t}\n\n\t\treturn Math.sqrt(s);\n\t}\n", "raw_comment": "\t/**\n\t * Calculates the euclidean distance of two {@link Objectives}. This\n\t * calculation is based on the {@link #array()} values.\n\t * \n\t * @param other\n\t *            the second objectives\n\t * @return the euclidean distance\n\t */\n", "code": "public double distance objectives other double va this array double vb other array double s 0 for int i 0 i va length i s va i vb i va i vb i return math sqrt s\n", "comment": "calculates the euclidean distance of two\n"}
{"id": "34795989", "raw_code": "\tpublic O get() {\n\t\treturn object;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the wrapped object.\n\t * \n\t * @return the wrapped object\n\t */\n", "code": "public o get return object\n", "comment": "returns the wrapped object\n"}
{"id": "34796011", "raw_code": "\tpublic Objectives getObjectives() {\n\t\treturn objectives;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the objectives.\n\t * \n\t * @see #setObjectives\n\t * @return the objectives\n\t */\n", "code": "public objectives get objectives return objectives\n", "comment": "returns the objectives\n"}
{"id": "34796015", "raw_code": "\tpublic Genotype getGenotype() {\n\t\treturn genotype;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the genotype.\n\t * \n\t * @see #setGenotype\n\t * @return the genotype\n\t */\n", "code": "public genotype get genotype return genotype\n", "comment": "returns the genotype\n"}
{"id": "34796018", "raw_code": "\tpublic void setGenotype(Genotype genotype) {\n\t\tthis.genotype = genotype;\n\t\tsetState(State.GENOTYPED);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the genotype.\n\t * \n\t * @see #getGenotype\n\t * @param genotype\n\t *            the genotype to be set\n\t */\n", "code": "public void set genotype genotype genotype this genotype genotype set state state genotyped\n", "comment": "sets the genotype\n"}
{"id": "34796022", "raw_code": "\tpublic void setPhenotype(Phenotype phenotype) {\n\t\tthis.phenotype = phenotype;\n\t\tsetState(State.PHENOTYPED);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the phenotype.\n\t * \n\t * @see #getPhenotype\n\t * @param phenotype\n\t *            the phenotype to be set\n\t */\n", "code": "public void set phenotype phenotype phenotype this phenotype phenotype set state state phenotyped\n", "comment": "sets the phenotype\n"}
{"id": "34796024", "raw_code": "\tpublic void setObjectives(Objectives objectives) {\n\t\tthis.objectives = objectives;\n\t\tsetState(State.EVALUATED);\n\t}\n", "raw_comment": "\t/**\n\t * Sets the objectives.\n\t * \n\t * @see #getObjectives\n\t * @param objectives\n\t *            the objectives to be set\n\t */\n", "code": "public void set objectives objectives objectives this objectives objectives set state state evaluated\n", "comment": "sets the objectives\n"}
{"id": "34796026", "raw_code": "\tpublic boolean isDecoded() {\n\t\treturn state.isDecoded();\n\t}\n", "raw_comment": "\t/**\n\t * Indicates whether this {@link Individual} is already decoded.\n\t * \n\t * @return {@code true} if this individual is decoded\n\t */\n", "code": "public boolean is decoded return state is decoded\n", "comment": "indicates whether this\n"}
{"id": "34796028", "raw_code": "\tpublic boolean isEvaluated() {\n\t\treturn state.isEvaluated();\n\t}\n", "raw_comment": "\t/**\n\t * Indicates whether this {@link Individual} is already evaluated.\n\t * \n\t * @return {@code true} if this inividual is evaluated\n\t */\n", "code": "public boolean is evaluated return state is evaluated\n", "comment": "indicates whether this\n"}
{"id": "34796030", "raw_code": "\tpublic void setState(State state) {\n\t\tif (this.state != state) {\n\t\t\tthis.state = state;\n\n\t\t\tfor (IndividualStateListener listener : individualStateListeners) {\n\t\t\t\tlistener.inidividualStateChanged(this);\n\t\t\t}\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Sets the state of the {@link Individual}.\n\t * \n\t * @see #getState\n\t * @param state\n\t *            the new status\n\t */\n", "code": "public void set state state state if this state state this state state for individual state listener listener individual state listeners listener inidividual state changed this\n", "comment": "sets the state of the\n"}
{"id": "34796036", "raw_code": "\tprotected void setIndividualStatusListeners(Set<IndividualStateListener> individualStateListeners) {\n\t\tthis.individualStateListeners = individualStateListeners;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the list of {@link IndividualStateListener}s that are called if the\n\t * {@link State} of this individual changes.\n\t * \n\t * @param individualStateListeners\n\t *            the listener for a changing status.\n\t */\n", "code": "protected void set individual status listeners set individual state listener individual state listeners this individual state listeners individual state listeners\n", "comment": "sets the list of\n"}
{"id": "34796040", "raw_code": "\tpublic void setCapacity(int capacity) {\n\t\tif (capacity < 0) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid capacity: \" + capacity);\n\t\t}\n\t\tthis.capacity = capacity;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the capacity of this {@link BoundedArchive}.\n\t * \n\t * @see #getCapacity\n\t * @param capacity\n\t *            new capacity of this bounded archive\n\t */\n", "code": "public void set capacity int capacity if capacity 0 throw new illegal argument exception invalid capacity capacity this capacity capacity\n", "comment": "sets the capacity of this\n"}
{"id": "34796051", "raw_code": "\tpublic void setDivisions(int divisions) {\n\t\tthis.divisions = divisions;\n\t}\n", "raw_comment": "\t/**\n\t * Set the number of divisions for the {@link AdaptiveGridArchive}.\n\t * \n\t * @see #getDivisions\n\t * @param divisions\n\t *            the number of divisions\n\t */\n", "code": "public void set divisions int divisions this divisions divisions\n", "comment": "set the number of divisions for the\n"}
{"id": "34796057", "raw_code": "\tprotected Cell getCell(Individual individual) {\n\t\tfinal double[] obj = individual.getObjectives().array();\n\n\t\tint scale = 1;\n\t\tlong identifier = 0;\n\t\tfor (int i = 0; i < obj.length; i++) {\n\t\t\tdouble half = (1.0 / (2.0 * div)) * (ub[i] - lb[i]);\n\t\t\tdouble lbi = lb[i] - half;\n\t\t\tdouble ubi = ub[i] + half;\n\n\t\t\tdouble step = (ubi - lbi) / div;\n\t\t\tint position = (int) Math.floor((obj[i] - lbi) / step);\n\n\t\t\tidentifier += position * scale;\n\t\t\tscale *= div;\n\t\t}\n\n\t\tCell cell = cells.get(identifier);\n\t\tif (cell != null) {\n\t\t\treturn cell;\n\t\t} else {\n\t\t\treturn new Cell(identifier);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Returns the appropriate {@link Cell} for the given {@link Individual}.\n\t * \n\t * @param individual\n\t *            the individual\n\t * @return the cell\n\t */\n", "code": "protected cell get cell individual individual final double obj individual get objectives array int scale 1 long identifier 0 for int i 0 i obj length i double half 1 0 2 0 div ub i lb i double lbi lb i half double ubi ub i half double step ubi lbi div int position int math floor obj i lbi step identifier position scale scale div cell cell cells get identifier if cell null return cell else return new cell identifier\n", "comment": "returns the appropriate\n"}
{"id": "34796059", "raw_code": "\tprotected Cell getMostCrowdedCell() {\n\t\tCell mc = null;\n\t\tint size = 0;\n\n\t\tSet<Individual> extrema = new LinkedHashSet<Individual>(this.extrema);\n\n\t\tfor (Cell cell : cells.values()) {\n\t\t\tint s = 0;\n\t\t\tassert (!cell.isEmpty());\n\t\t\tfor (Individual individual : cell) {\n\t\t\t\tif (!extrema.contains(individual)) {\n\t\t\t\t\ts++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (s > size) {\n\t\t\t\tsize = s;\n\t\t\t\tmc = cell;\n\t\t\t}\n\t\t}\n\n\t\treturn mc;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the most crowded {@link Cell}.\n\t * \n\t * @return the most crowded cell\n\t */\n", "code": "protected cell get most crowded cell cell mc null int size 0 set individual extrema new linked hash set individual this extrema for cell cell cells values int s 0 assert cell is empty for individual individual cell if extrema contains individual s if s size size s mc cell return mc\n", "comment": "returns the most crowded\n"}
{"id": "34796067", "raw_code": "\tprotected boolean determineBounds(Collection<Individual> individuals) {\n\t\tboolean boundsChanged = false;\n\n\t\tfor (Individual individual : individuals) {\n\t\t\tfinal double[] obj = individual.getObjectives().array();\n\n\t\t\tfor (int i = 0; i < dim; i++) {\n\t\t\t\tdouble value = obj[i];\n\n\t\t\t\tif (value < lb[i]) {\n\t\t\t\t\tboundsChanged = true;\n\t\t\t\t\textrema.set(2 * i, individual);\n\t\t\t\t\tlb[i] = obj[i];\n\t\t\t\t} else if (value > ub[i]) {\n\t\t\t\t\tboundsChanged = true;\n\t\t\t\t\textrema.set(2 * i + 1, individual);\n\t\t\t\t\tub[i] = obj[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn boundsChanged;\n\t}\n", "raw_comment": "\t/**\n\t * Determines the new bounds for the individuals and returns {@code true} if\n\t * the bounds have changed.\n\t * \n\t * @param individuals\n\t *            the individuals\n\t * @return {@code true} if the bounds have changed\n\t */\n", "code": "protected boolean determine bounds collection individual individuals boolean bounds changed false for individual individual individuals final double obj individual get objectives array for int i 0 i dim i double value obj i if value lb i bounds changed true extrema set 2 i individual lb i obj i else if value ub i bounds changed true extrema set 2 i 1 individual ub i obj i return bounds changed\n", "comment": "determines the new bounds for the individuals and returns\n"}
{"id": "34796069", "raw_code": "\tpublic void setType(RandType type) {\n\t\tthis.type = type;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the type of the random number generator to the specified value.\n\t * \n\t * @see #getType\n\t * @param type\n\t *            the type of the random number generator\n\t */\n", "code": "public void set type rand type type this type type\n", "comment": "sets the type of the random number generator to the specified value\n"}
{"id": "34796070", "raw_code": "\tpublic RandType getType() {\n\t\treturn type;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the type of the random number generator.\n\t * \n\t * @see #setType\n\t * @return the type of the random number generator\n\t */\n", "code": "public rand type get type return type\n", "comment": "returns the type of the random number generator\n"}
{"id": "34796073", "raw_code": "\tpublic void setUsingSeed(boolean value) {\n\t\tthis.usingSeed = value;\n\t}\n", "raw_comment": "\t/**\n\t * Select if a specific seed should be used.\n\t * \n\t * @see #isUsingSeed\n\t * @param value\n\t *            {@code true} if a seed shall be used, {@code false} otherwise\n\t */\n", "code": "public void set using seed boolean value this using seed value\n", "comment": "select if a specific seed should be used\n"}
{"id": "34796074", "raw_code": "\tpublic void setSeed(byte[] buf) {\n\t\tsetSeed(pack(buf));\n\t}\n", "raw_comment": "\t/**\n\t * This method resets the state of this instance using the byte array of\n\t * seed data provided. Note that calling this method is equivalent to\n\t * calling \"setSeed(pack(buf))\" and in particular will result in a new\n\t * integer array being generated during the call. If you wish to retain this\n\t * seed data to allow the pseudo random sequence to be restarted then it\n\t * would be more efficient to use the \"pack()\" method to convert it into an\n\t * integer array first and then use that to re-seed the instance. The\n\t * behaviour of the class will be the same in both cases but it will be more\n\t * efficient.\n\t * \n\t * @param buf\n\t *            The non-empty byte array of seed information.\n\t * @throws NullPointerException\n\t *             if the buffer is null.\n\t * @throws IllegalArgumentException\n\t *             if the buffer has zero length.\n\t */\n", "code": "public void set seed byte buf set seed pack buf\n", "comment": "this method resets the state of this instance using the byte array of\n"}
{"id": "34796083", "raw_code": "\tpublic int getThreads() {\n\t\treturn threads;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the maximal number of parallel threads.\n\t * \n\t * @see #setThreads\n\t * @return the maximal number of parallel threads\n\t */\n", "code": "public int get threads return threads\n", "comment": "returns the maximal number of parallel threads\n"}
{"id": "34796084", "raw_code": "\tpublic void setThreads(int threads) {\n\t\tif (threads <= 0) {\n\t\t\tthrow new IllegalArgumentException(\"The number of threads must be positive: \" + threads);\n\t\t}\n\t\tthis.threads = threads;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the maximal number of parallel threads.\n\t * \n\t * @see #getThreads\n\t * @param threads\n\t *            the maximal number of parallel threads\n\t */\n", "code": "public void set threads int threads if threads 0 throw new illegal argument exception the number of threads must be positive threads this threads threads\n", "comment": "sets the maximal number of parallel threads\n"}
{"id": "34796095", "raw_code": "\tprotected PrintWriter initWriter(String filename) {\n\t\tif (filename == null || filename.equals(\"\")) {\n\t\t\tthrow new IllegalArgumentException(\"File name must not be the empty string.\");\n\t\t}\n\n\t\tFile file = new File(filename);\n\t\tFile dir = file.getParentFile();\n\t\tif (dir != null) {\n\t\t\tdir.mkdirs();\n\t\t}\n\t\ttry {\n\t\t\treturn new PrintWriter(new BufferedWriter(new FileWriter(file)));\n\t\t} catch (IOException e) {\n\t\t\tthrow new IllegalArgumentException(e);\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Initialize the print write from a filename\n\t * \n\t * @param filename\n\t *            the filename\n\t * @return the print writer\n\t */\n", "code": "protected print writer init writer string filename if filename null filename equals throw new illegal argument exception file name must not be the empty string file file new file filename file dir file get parent file if dir null dir mkdirs try return new print writer new buffered writer new file writer file catch ioexception e throw new illegal argument exception e\n", "comment": "initialize the print write from a filename\n"}
{"id": "34796101", "raw_code": "\tpublic int getEvaluationStep() {\n\t\treturn evaluationStep;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the step size of the evaluations.\n\t * \n\t * @see #setEvaluationStep\n\t * @return the step size of the evaluations\n\t */\n", "code": "public int get evaluation step return evaluation step\n", "comment": "returns the step size of the evaluations\n"}
{"id": "34796103", "raw_code": "\tpublic void setEvaluationStep(int evaluationStep) {\n\t\tthis.evaluationStep = evaluationStep;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the step size of the evaluations.\n\t * \n\t * @see #getEvaluationStep\n\t * @param evaluationStep\n\t *            the step size of the evaluations\n\t */\n", "code": "public void set evaluation step int evaluation step this evaluation step evaluation step\n", "comment": "sets the step size of the evaluations\n"}
{"id": "34796104", "raw_code": "\tpublic int getIterationStep() {\n\t\treturn iterationStep;\n\t}\n", "raw_comment": "\t/**\n\t * Returns the step size of the iterations.\n\t * \n\t * @see #setIterationStep\n\t * @return the step size of the iterations\n\t */\n", "code": "public int get iteration step return iteration step\n", "comment": "returns the step size of the iterations\n"}
{"id": "34796106", "raw_code": "\tpublic void setIterationStep(int iterationStep) {\n\t\tthis.iterationStep = iterationStep;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the step size of the iterations.\n\t * \n\t * @see #getIterationStep\n\t * @param iterationStep\n\t *            the step size of the iterations\n\t */\n", "code": "public void set iteration step int iteration step this iteration step iteration step\n", "comment": "sets the step size of the iterations\n"}
{"id": "34796111", "raw_code": "\tpublic void setLoggingPerEvaluation(boolean loggingPerEvaluation) {\n\t\tthis.loggingPerEvaluation = loggingPerEvaluation;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the observation for the number of evaluations.\n\t * \n\t * @param loggingPerEvaluation\n\t *            {@code true} if the logger observes the number of evaluations\n\t */\n", "code": "public void set logging per evaluation boolean logging per evaluation this logging per evaluation logging per evaluation\n", "comment": "sets the observation for the number of evaluations\n"}
{"id": "34796114", "raw_code": "\tpublic void setLoggingPerIteration(boolean loggingPerIteration) {\n\t\tthis.loggingPerIteration = loggingPerIteration;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the observation for the number of iterations.\n\t * \n\t * @param loggingPerIteration\n\t *            {@code true} if the logger observes the number of iterations\n\t */\n", "code": "public void set logging per iteration boolean logging per iteration this logging per iteration logging per iteration\n", "comment": "sets the observation for the number of iterations\n"}
{"id": "34796115", "raw_code": "\tprotected String getStatistics(int iteration, int evaluation, double time) {\n\t\treturn iteration + getColumnDelimiter() + evaluation + getColumnDelimiter() + time;\n\t}\n", "raw_comment": "\t/**\n\t * Statistics for the given {@code iteration} and {@code evaluation}.\n\t * \n\t * Per default, the iteration, the number of evaluations and the\n\t * optimization run time in milliseconds, separated by\n\t * {@link #getColumnDelimiter()}, are returned.\n\t * \n\t * @param iteration\n\t *            the current iteration\n\t * @param evaluation\n\t *            the current number of evaluations\n\t * @param time\n\t *            the current runtime of the optimization\n\t * @return the corresponding string\n\t */\n", "code": "protected string get statistics int iteration int evaluation double time return iteration get column delimiter evaluation get column delimiter time\n", "comment": "statistics for the given\n"}
{"id": "34796118", "raw_code": "\tpublic void setPrintInfeasible(boolean printInfeasible) {\n\t\tthis.printInfeasible = printInfeasible;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the printout mode for infeasible individuals.\n\t * \n\t * @param printInfeasible\n\t *            {@code false} to omit infeasible individuals.\n\t */\n", "code": "public void set print infeasible boolean print infeasible this print infeasible print infeasible\n", "comment": "sets the printout mode for infeasible individuals\n"}
{"id": "34796146", "raw_code": "    public String getAppletInfo() {\n        return \"PlotApplet \" + PlotBox.PTPLOT_RELEASE + \": A data plotter.\\n\"\n                + \"By: Edward A. Lee and\\n \" + \"Christopher Hylands\\n\"\n                + \"($Id: PlotApplet.java,v 1.76 2005/07/30 05:30:56 cxh Exp $)\";\n    }\n", "raw_comment": "    /** Return a string describing this applet.\n     *  @return A string describing the applet.\n     */\n", "code": "public string get applet info return plot applet plot box ptplot release a data plotter n by edward a lee and n christopher hylands n id plot applet java v 1 76 2005 07 30 05 30 56 cxh exp\n", "comment": "return a string describing this applet\n"}
{"id": "34796192", "raw_code": "    public void addColorChooser(String name, String label, String defaultColor) {\n        JLabel lbl = new JLabel(label + \": \");\n        lbl.setBackground(_background);\n\n        QueryColorChooser colorChooser = new QueryColorChooser(name,\n                defaultColor);\n        _addPair(name, lbl, colorChooser, colorChooser);\n    }\n", "raw_comment": "    /** Create a ColorChooser.\n     *  @param name The name used to identify the entry (when calling get).\n     *  @param label The label to attach to the entry.\n     *  @param defaultColor The default color to use.\n     */\n", "code": "public void add color chooser string name string label string default color jlabel lbl new jlabel label lbl set background background query color chooser color chooser new query color chooser name default color add pair name lbl color chooser color chooser\n", "comment": "create a color chooser\n"}
{"id": "34796204", "raw_code": "\tpublic int getVerticalOffset() {\n\t\treturn -10;\n\t}\n", "raw_comment": "\t/**\n\t * Return the best vertical offset for the given icon.\n\t * \n\t * @param filename\n\t *            the filename\n\t * @return the vertical offset to use\n\t */\n", "code": "public int get vertical offset return 10\n", "comment": "return the best vertical offset for the given icon\n"}
{"id": "34796205", "raw_code": "\tpublic int getHorizontalOffset() {\n\t\treturn -12;\n\t}\n", "raw_comment": "\t/**\n\t * Return the best horizontal offset for the given icon.\n\t * \n\t * @param filename\n\t *            the filename\n\t * @return the horizontal offset to use\n\t */\n", "code": "public int get horizontal offset return 12\n", "comment": "return the best horizontal offset for the given icon\n"}
{"id": "34796210", "raw_code": "\tpublic void setX1(int x1) {\n\t\tif (x1 > plotBox.get_lrx()) {\n\t\t\tx1 = plotBox.get_lrx();\n\t\t}\n\n\t\tif (x1 < plotBox.get_ulx()) {\n\t\t\tx1 = plotBox.get_ulx();\n\t\t}\n\t\tthis.x1 = x1;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the x value of the starting point.\n\t * \n\t * @param x1\n\t *            the x1 to set\n\t */\n", "code": "public void set x1 int x1 if x1 plot box get lrx x1 plot box get lrx if x1 plot box get ulx x1 plot box get ulx this x1 x1\n", "comment": "sets the x value of the starting point\n"}
{"id": "34796213", "raw_code": "\tpublic void setEnd(int x2, int y2) {\n\t\tsetX2(x2);\n\t\tsetY2(y2);\n\t\tsetValid();\n\t}\n", "raw_comment": "\t/**\n\t * Updates the end point of the zoom box.\n\t * \n\t * @param x2\n\t *            the x value of the end point\n\t * @param y2\n\t *            the y value of the end point\n\t */\n", "code": "public void set end int x2 int y2 set x2 x2 set y2 y2 set valid\n", "comment": "updates the end point of the zoom box\n"}
{"id": "34796216", "raw_code": "\tpublic void setX2(int x2) {\n\t\tif (x2 > plotBox.get_lrx()) {\n\t\t\tx2 = plotBox.get_lrx();\n\t\t}\n\n\t\tif (x2 < plotBox.get_ulx()) {\n\t\t\tx2 = plotBox.get_ulx();\n\t\t}\n\t\tthis.x2 = x2;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the x value of the end point.\n\t * \n\t * @param x2\n\t *            the x2 to set\n\t */\n", "code": "public void set x2 int x2 if x2 plot box get lrx x2 plot box get lrx if x2 plot box get ulx x2 plot box get ulx this x2 x2\n", "comment": "sets the x value of the end point\n"}
{"id": "34796219", "raw_code": "\tpublic void setY1(int y1) {\n\t\tif (y1 > plotBox.get_lry()) {\n\t\t\ty1 = plotBox.get_lry();\n\t\t}\n\n\t\tif (y1 < plotBox.get_uly()) {\n\t\t\ty1 = plotBox.get_uly();\n\t\t}\n\t\tthis.y1 = y1;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the y value of the start point.\n\t * \n\t * @param y1\n\t *            the y1 to set\n\t */\n", "code": "public void set y1 int y1 if y1 plot box get lry y1 plot box get lry if y1 plot box get uly y1 plot box get uly this y1 y1\n", "comment": "sets the y value of the start point\n"}
{"id": "34796222", "raw_code": "\tpublic void setY2(int y2) {\n\t\tif (y2 > plotBox.get_lry()) {\n\t\t\ty2 = plotBox.get_lry();\n\t\t}\n\n\t\tif (y2 < plotBox.get_uly()) {\n\t\t\ty2 = plotBox.get_uly();\n\t\t}\n\t\tthis.y2 = y2;\n\t}\n", "raw_comment": "\t/**\n\t * Sets the y value of the end point.\n\t * \n\t * @param y2\n\t *            the y2 to set\n\t */\n", "code": "public void set y2 int y2 if y2 plot box get lry y2 plot box get lry if y2 plot box get uly y2 plot box get uly this y2 y2\n", "comment": "sets the y value of the end point\n"}
{"id": "34796233", "raw_code": "\tprotected void drawZoomInIcon(Component component, Graphics graphics) {\n\t\tZoomIcon i = ZoomIcons.getIcon(ZOOMiN);\n\t\ti.paintIcon(component, graphics, getX2() + i.getHorizontalOffset(),\n\t\t\t\tgetY1() + i.getVerticalOffset());\n\n\t}\n", "raw_comment": "\t/**\n\t * Draws the zoom-in icon.\n\t * \n\t * @param component\n\t *            the component to be used as the observer if this icon has no\n\t *            image observer\n\t * @param graphics\n\t *            the graphics context\n\t */\n", "code": "protected void draw zoom in icon component component graphics graphics zoom icon i zoom icons get icon zoomi n i paint icon component graphics get x2 i get horizontal offset get y1 i get vertical offset\n", "comment": "draws the zoom in icon\n"}
{"id": "34796234", "raw_code": "\tprotected void drawZoomOutIcon(Component component, Graphics graphics) {\n\t\tZoomIcon i = ZoomIcons.getIcon(ZOOMoUT);\n\t\ti.paintIcon(component, graphics, getX1() + i.getHorizontalOffset(),\n\t\t\t\tgetY2() + i.getVerticalOffset());\n\t}\n", "raw_comment": "\t/**\n\t * Draws the zoom-out icon.\n\t * \n\t * @param component\n\t *            the component to be used as the observer if this icon has no\n\t *            image observer\n\t * @param graphics\n\t *            the graphics context\n\t */\n", "code": "protected void draw zoom out icon component component graphics graphics zoom icon i zoom icons get icon zoomo ut i paint icon component graphics get x1 i get horizontal offset get y2 i get vertical offset\n", "comment": "draws the zoom out icon\n"}
{"id": "34796235", "raw_code": "\tpublic void setShowFancyIcons(boolean showFancyIcon) {\n\t\tthis.showFancyIcon = showFancyIcon;\n\t}\n", "raw_comment": "\t/**\n\t * Set this to false, to disable drawing of the {@code ZoomIcons}. Then,\n\t * small plus and minus signs are drawn.\n\t * \n\t * @param showFancyIcon\n\t *            the showFancyIcon to set\n\t */\n", "code": "public void set show fancy icons boolean show fancy icon this show fancy icon show fancy icon\n", "comment": "set this to false to disable drawing of the\n"}
{"id": "34796237", "raw_code": "\tpublic boolean isShowingFancyIcons() {\n\t\treturn showFancyIcon;\n\t}\n", "raw_comment": "\t/**\n\t * True, if icons are drawn at the corner of this {@code ZoomRectangle}.\n\t * \n\t * \n\t * @return if fancy icons are drawn\n\t */\n", "code": "public boolean is showing fancy icons return show fancy icon\n", "comment": "true if icons are drawn at the corner of this\n"}
{"id": "34796276", "raw_code": "    public String getAppletInfo() {\n        return \"Histogram 1.0: Demo of PlotApplet.\\n\"\n                + \"By: Edward A. Lee\\n \"\n                + \"($Id: HistogramApplet.java,v 1.25 2005/07/08 19:59:34 cxh Exp $)\";\n    }\n", "raw_comment": "    /** Return a string describing this applet.\n     *  @return A string describing the applet.\n     */\n", "code": "public string get applet info return histogram 1 0 demo of plot applet n by edward a lee n id histogram applet java v 1 25 2005 07 08 19 59 34 cxh exp\n", "comment": "return a string describing this applet\n"}
{"id": "34796294", "raw_code": "    public String getAppletInfo() {\n        return \"PlotLiveApplet \"\n                + PlotBox.PTPLOT_RELEASE\n                + \" : Demo of PlotLive.\\n\"\n                + \"By: Edward A. Lee\\n\"\n                + \"    Christopher Brooks\\n\"\n                + \"($Id: PlotLiveApplet.java,v 1.31 2005/07/28 18:49:33 cxh Exp $)\";\n    }\n", "raw_comment": "    /** Return a string describing this applet.\n     *  @return A description of the applet.\n     */\n", "code": "public string get applet info return plot live applet plot box ptplot release demo of plot live n by edward a lee n christopher brooks n id plot live applet java v 1 31 2005 07 28 18 49 33 cxh exp\n", "comment": "return a string describing this applet\n"}
{"id": "34796369", "raw_code": "    protected void _close() {\n        StringUtilities.exit(0);\n    }\n", "raw_comment": "    /** Exit the application.\n     */\n", "code": "protected void close string utilities exit 0\n", "comment": "exit the application\n"}
{"id": "42480261", "raw_code": "    public void actionPerformed(ActionEvent e) {\n\n        // there is a current notification going on\n        if (current != null) {\n\n            // check if queue is not empty and there is no\n            // notification running\n            if ((!queue.isEmpty()) && (!current.isRunning())) {\n\n                // poll a notification from the queue\n                current = (Notification) queue.poll();\n\n                // animate\n                current.animate();\n            }\n            else {\n\n                // if the queue is empty\n                if (queue.isEmpty()) {\n\n                    // stop the timer\n                    timer.stop();\n                }\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Implements the <code>ActionListener</code> for our timer. It will trigger\n     * notifications and process the queue.\n     * @param e The event.\n     */\n", "code": "public void action performed action event e there is a current notification going on if current null check if queue is not empty and there is no notification running if queue is empty current is running poll a notification from the queue current notification queue poll animate current animate else if the queue is empty if queue is empty stop the timer timer stop\n", "comment": "implements the code action listener code for our timer\n"}
{"id": "42480276", "raw_code": "    public void timingEvent(float f) {\n\n        // animate the window based on the Y axis\n        setCurrentWindowBounds((int) positionX, calculateCurrentPositionOnY(f), thisWidth, thisHeight);\n\n    }\n", "raw_comment": "    /**\n     * Implements the <code>timingEvent</code> method from <code>org.jdesktop.animation.timing.TimingTarget</code>.\n     * Please don't call this function directly.\n     * @param f The continnum interval referring to the animation.\n     */\n", "code": "public void timing event float f animate the window based on the y axis set current window bounds int position x calculate current position on y f this width this height\n", "comment": "implements the code timing event code method from code org\n"}
{"id": "42480281", "raw_code": "    public void begin() {\n        // empty body\n    }\n", "raw_comment": "    /**\n     * Implements the <code>begin</code> method from <code>org.jdesktop.animation.timing.TimingTarget</code>.\n     * This method is called before animation begins. Please don't call this function directly.\n     */\n", "code": "public void begin empty body\n", "comment": "implements the code begin code method from code org\n"}
{"id": "42480285", "raw_code": "    public void repeat() {\n        // empty body\n    }\n", "raw_comment": "    /**\n     * Implements the <code>repeat</code> method from <code>org.jdesktop.animation.timing.TimingTarget</code>.\n     * This function is called on every animation repetition. Please don't call this function directly.\n     */\n", "code": "public void repeat empty body\n", "comment": "implements the code repeat code method from code org\n"}
{"id": "42480293", "raw_code": "    private void setCurrentWindowBounds(int x, int y, int width, int height) {\n        switch (windowType) {\n            case JFRAME:\n                windowJFrame.setBounds(x, y, width, height);\n                break;\n            case JWINDOW:\n                windowJWindow.setBounds(x, y, width, height);\n                break;\n        }\n    }\n", "raw_comment": "    /**\n     * Sets the bounds of the current window. It's basically a call to the\n     * inner window <code>setBounds</code> method.\n     * @param x Coordinate X\n     * @param y Coordinate Y\n     * @param width Width\n     * @param height Height\n     */\n", "code": "private void set current window bounds int x int y int width int height switch window type case jframe window jframe set bounds x y width height break case jwindow window jwindow set bounds x y width height break\n", "comment": "sets the bounds of the current window\n"}
{"id": "42480296", "raw_code": "    private void setCurrentWindowVisible(boolean value) {\n        switch (windowType) {\n            case JFRAME:\n                windowJFrame.setVisible(value);\n                break;\n            case JWINDOW:\n                windowJWindow.setVisible(value);\n                break;\n        }\n    }\n", "raw_comment": "    /**\n     * Sets the visibility of the current window. It's basically a call to the\n     * inner window <code>setVisible</code> method.\n     * @param value <code>true</code> if window should be visible, or <code>false</code>\n     * otherwise.\n     */\n", "code": "private void set current window visible boolean value switch window type case jframe window jframe set visible value break case jwindow window jwindow set visible value break\n", "comment": "sets the visibility of the current window\n"}
{"id": "42480298", "raw_code": "    private void setCurrentWindowAlwaysOnTop(boolean value) {\n        switch (windowType) {\n            case JFRAME:\n                windowJFrame.setAlwaysOnTop(value);\n                break;\n            case JWINDOW:\n                windowJWindow.setAlwaysOnTop(value);\n                break;\n        }\n    }\n", "raw_comment": "    /**\n     * Sets the window parameter of being on top of other windows. It's basically\n     * a call to the inner window <code>setAlwaysOnTop</code> method.\n     * @param value <code>true</code> if window should be on top of other windows, or\n     * <code>false</code> otherwise.\n     */\n", "code": "private void set current window always on top boolean value switch window type case jframe window jframe set always on top value break case jwindow window jwindow set always on top value break\n", "comment": "sets the window parameter of being on top of other windows\n"}
{"id": "42480302", "raw_code": "    private void disposeCurrentWindow() {\n        switch (windowType) {\n            case JFRAME:\n                windowJFrame.dispose();\n                break;\n            case JWINDOW:\n                windowJWindow.dispose();\n                break;\n        }\n    }\n", "raw_comment": "    /**\n     * Dispose the current window. It's basically a call to the inner window\n     * <code>dispose</code> method.\n     */\n", "code": "private void dispose current window switch window type case jframe window jframe dispose break case jwindow window jwindow dispose break\n", "comment": "dispose the current window\n"}
{"id": "42480306", "raw_code": "    public void setAnimationSpeed(int milliseconds) {\n        this.timeToAnimate = milliseconds;\n    }\n", "raw_comment": "    /**\n     * Sets the animation speed. This method was rewritten and the name was\n     * replaced by a more meaningful one. Check the following example:\n     * @code\n     * JWindow window = new JWindow();\n     * Notification note = new Notification(window, WindowPosition.BOTTOMRIGHT, 25, 25, 1000);\n     * note.setAnimationSpeed(500);\n     * NotificationQueue queue = new NotificationQueue();\n     * queue.add(note);\n     * @endcode\n     * @param milliseconds The notification effects duration in milliseconds.\n     * Usually 500 milliseconds or less is an acceptable value for this parameter.\n     */\n", "code": "public void set animation speed int milliseconds this time to animate milliseconds\n", "comment": "sets the animation speed\n"}
{"id": "5692301", "raw_code": "    public Document getParsedDocument() {\n        return this.document;\n    }\n", "raw_comment": "    /** \n     * Returns the resulting document of the last call to parse().\n     */\n", "code": "public document get parsed document return this document\n", "comment": "returns the resulting document of the last call to parse\n"}
{"id": "5692302", "raw_code": "    protected void setPostParseResults(Document doc) throws XOBParseException {\n        this.document = doc;\n    }\n", "raw_comment": "    /**\n     * The parse() method should call this after parsing.\n     *\n     * @param doc The DOM Document parse result.\n     */\n", "code": "protected void set post parse results document doc throws xobparse exception this document doc\n", "comment": "the parse method should call this after parsing\n"}
{"id": "5692304", "raw_code": "    public void setValidating(boolean validate) {\n        this.useValidation = validate;\n    }\n", "raw_comment": "    /** \n     * Sets wether or not the parser should validate the XML being parsed. <b>Default is false.</b>\n     *\n     * @param validate true if you want a validating parser.\n     */\n", "code": "public void set validating boolean validate this use validation validate\n", "comment": "sets wether or not the parser should validate the xml being parsed\n"}
{"id": "5692306", "raw_code": "    public boolean isValidating() {\n        return this.useValidation;\n    }\n", "raw_comment": "    /** \n     * Returns true if this parser is validating, false otherwise.\n     */\n", "code": "public boolean is validating return this use validation\n", "comment": "returns true if this parser is validating false otherwise\n"}
{"id": "5692307", "raw_code": "    public void setSchemaValidating(boolean schemaValidating) throws XOBFeatureNotSupportedException {\n        this.useSchemaValidation = schemaValidating;\n    }\n", "raw_comment": "    /** \n     * Sets wether or not XML Schema validation should be done. This is only relevant if\n     * validating is true. If validating is true and this is set to false DTD validation\n     * is implied. <b>Default is false.</b>\n     *\n     * @param schemaValidating Set to true to validate against an XML Schema.\n     * @exception XOBFeatureNotSupportedException if this feature is not supported by the underlying parser.\n     */\n", "code": "public void set schema validating boolean schema validating throws xobfeature not supported exception this use schema validation schema validating\n", "comment": "sets wether or not xml schema validation should be done\n"}
{"id": "5692309", "raw_code": "    public boolean isSchemaValidating() {\n        return this.useSchemaValidation;\n    }\n", "raw_comment": "    /** \n     * Returns true if this parsers uses XML Schema validation. This should always return false if this\n     * feature is not supported by the underlying parser.\n     */\n", "code": "public boolean is schema validating return this use schema validation\n", "comment": "returns true if this parsers uses xml schema validation\n"}
{"id": "5692310", "raw_code": "    public void setNamespaceProcessing(boolean namespaceProcessing) throws XOBFeatureNotSupportedException {\n        this.useNamespaces = namespaceProcessing;\n    }\n", "raw_comment": "    /** \n     * Turns namespace processing on/off. <b>Default is true</b>.\n     *\n     * @param namespaceProcessing true for one, false for off. \n     */\n", "code": "public void set namespace processing boolean namespace processing throws xobfeature not supported exception this use namespaces namespace processing\n", "comment": "turns namespace processing on off\n"}
{"id": "5692311", "raw_code": "    public boolean hasNamespaceProcessing() {\n        return this.useNamespaces;\n    }\n", "raw_comment": "    /** \n     * Returns true if namespace processing is on, false otherwise. This should always return false\n     * if not supported by the underlying parser.\n     */\n", "code": "public boolean has namespace processing return this use namespaces\n", "comment": "returns true if namespace processing is on false otherwise\n"}
{"id": "5692314", "raw_code": "    public EntityResolver getEntityResolver() throws XOBFeatureNotSupportedException {\n        return this.entityResolver;\n    }\n", "raw_comment": "    /** \n     * Returns the current entity resolver. Can be null if not set!\n     */\n", "code": "public entity resolver get entity resolver throws xobfeature not supported exception return this entity resolver\n", "comment": "returns the current entity resolver\n"}
{"id": "5692315", "raw_code": "    public ErrorHandler getErrorHandler() throws XOBFeatureNotSupportedException {\n        return this.errorHandler;\n    }\n", "raw_comment": "    /** \n     * Returns the current error handler. Can be null if not set!\n     */\n", "code": "public error handler get error handler throws xobfeature not supported exception return this error handler\n", "comment": "returns the current error handler\n"}
{"id": "5692316", "raw_code": "    public void setEntityResolver(EntityResolver entityResolver) throws XOBFeatureNotSupportedException {\n        this.entityResolver = entityResolver;\n    }\n", "raw_comment": "    /** \n     * Sets an entity resolver for the parser.\n     *\n     * @param entityResolver The resovler to set.\n     */\n", "code": "public void set entity resolver entity resolver entity resolver throws xobfeature not supported exception this entity resolver entity resolver\n", "comment": "sets an entity resolver for the parser\n"}
{"id": "5692318", "raw_code": "    public String getSchemaImplementation() {\n        return this.schemaImpl;\n    }\n", "raw_comment": "    /** \n     * Returns the currently used schmea implementation.\n     */\n", "code": "public string get schema implementation return this schema impl\n", "comment": "returns the currently used schmea implementation\n"}
{"id": "5692320", "raw_code": "    public void setSchemaImplementation(String implementationRef) {\n        if (implementationRef == null) {\n            this.schemaImpl = \"http://www.w3.org/2001/XMLSchema\";\n        }\n        else {\n            this.schemaImpl = implementationRef;\n        }\n    }\n", "raw_comment": "    /** \n     * Change the default schema implementation (http://www.w3.org/2001/XMLSchema).\n     *\n     * @param implementationRef A reference to the implementation to use.\n     */\n", "code": "public void set schema implementation string implementation ref if implementation ref null this schema impl http www w3 org 2001 xmlschema else this schema impl implementation ref\n", "comment": "change the default schema implementation http www\n"}
{"id": "5692322", "raw_code": "    public XMLParser cloneParser() {\n        AbstractXMLParser clone = (AbstractXMLParser)newInstance();\n        clone.useNamespaces = this.useNamespaces;\n        clone.useValidation = this.useValidation;\n        clone.useSchemaValidation = this.useSchemaValidation;\n        clone.entityResolver = this.entityResolver;\n        clone.errorHandler = this.errorHandler;\n        clone.schemaImpl = this.schemaImpl;\n        return (XMLParser)clone;\n    }    \n", "raw_comment": "    /** \n     * Clones the parser. All current settings should be identical in the clone.\n     */\n", "code": "public xmlparser clone parser abstract xmlparser clone abstract xmlparser new instance clone use namespaces this use namespaces clone use validation this use validation clone use schema validation this use schema validation clone entity resolver this entity resolver clone error handler this error handler clone schema impl this schema impl return xmlparser clone\n", "comment": "clones the parser\n"}
{"id": "5692328", "raw_code": "    public String getMonthDay() {\n        return this.monthDay;\n    }\n", "raw_comment": "    /**\n     * Returns the month/day value this object represents.\n     */\n", "code": "public string get month day return this month day\n", "comment": "returns the month day value this object represents\n"}
{"id": "5692329", "raw_code": "    public String toString() {\n        return \"\" + this.day;\n    }\n", "raw_comment": "    /**\n     * Returns a String representation of this object.\n     */\n", "code": "public string to string return this day\n", "comment": "returns a string representation of this object\n"}
{"id": "5692330", "raw_code": "    public String toString() {\n        return this.monthDay;\n    }\n", "raw_comment": "    /**\n     * Returns the String representation of this object.\n     */\n", "code": "public string to string return this month day\n", "comment": "returns the string representation of this object\n"}
{"id": "5692331", "raw_code": "    public String toString() {\n        SimpleDateFormat sdf = new SimpleDateFormat(FORMATS[this.format]);\n        return sdf.format(this);\n    }\n", "raw_comment": "    /**\n     * Returns the XML Schema date representation of this time.\n     */\n", "code": "public string to string simple date format sdf new simple date format formats this format return sdf format this\n", "comment": "returns the xml schema date representation of this time\n"}
{"id": "5692333", "raw_code": "    public String toString() {\n        return \"\" + this.year;\n    }\n", "raw_comment": "    /**\n     * Returns a String representation of this object.\n     */\n", "code": "public string to string return this year\n", "comment": "returns a string representation of this object\n"}
{"id": "5692335", "raw_code": "    public String toString() {\n        return \"\" + this.month;\n    }\n", "raw_comment": "    /**\n     * Returns a String representation of this object.\n     */\n", "code": "public string to string return this month\n", "comment": "returns a string representation of this object\n"}
{"id": "5692336", "raw_code": "    public String toString() {\n        SimpleDateFormat sdf = new SimpleDateFormat(FORMAT);\n        return sdf.format(this);\n    }\n", "raw_comment": "    /**\n     * Returns the XML Schema date representation of this date.\n     */\n", "code": "public string to string simple date format sdf new simple date format format return sdf format this\n", "comment": "returns the xml schema date representation of this date\n"}
{"id": "5692340", "raw_code": "    public String getYearMonth() {\n        return this.yearMonth;\n    }\n", "raw_comment": "    /**\n     * Returns the value that this object represents.\n     */\n", "code": "public string get year month return this year month\n", "comment": "returns the value that this object represents\n"}
{"id": "5692341", "raw_code": "    public String toString() {\n        return this.yearMonth;\n    }\n", "raw_comment": "    /**\n     * Returns a String representation of this object.\n     */\n", "code": "public string to string return this year month\n", "comment": "returns a string representation of this object\n"}
{"id": "5692342", "raw_code": "    public void setValidating(boolean validate) {\n        this.parser.setValidating(validate);\n    }\n", "raw_comment": "    /**\n     * Sets wether or not the parser should validate the XML being parsed. <b>Default is true.</b>\n     *\n     * @param validate true if you want a validating parser.\n     */\n", "code": "public void set validating boolean validate this parser set validating validate\n", "comment": "sets wether or not the parser should validate the xml being parsed\n"}
{"id": "5692344", "raw_code": "    public boolean isValidating() {\n        return this.parser.isValidating();\n    }\n", "raw_comment": "    /**\n     * Returns true if this parser is validating, false otherwise.\n     */\n", "code": "public boolean is validating return this parser is validating\n", "comment": "returns true if this parser is validating false otherwise\n"}
{"id": "5692347", "raw_code": "    public void setSchemaValidating(boolean schemaValidating) throws XOBFeatureNotSupportedException {\n        this.parser.setSchemaValidating(schemaValidating);\n    }\n", "raw_comment": "    /**\n     * Sets wether or not XML Schema validation should be done. This is only relevant if \n     * validating is true. If validating is true and this is set to false DTD validation \n     * is implied. <b>Default is true.</b>\n     *\n     * @param schemaValidating Set to true to validate against an XML Schema.\n     * @exception XOBFeatureNotSupportedException if this feature is not supported by the underlying parser.\n     */\n", "code": "public void set schema validating boolean schema validating throws xobfeature not supported exception this parser set schema validating schema validating\n", "comment": "sets wether or not xml schema validation should be done\n"}
{"id": "5692349", "raw_code": "    public boolean isSchemaValidating() {\n        return this.parser.isSchemaValidating();\n    }\n", "raw_comment": "    /**\n     * Returns true if this parsers uses XML Schema validation. This should always return false if this \n     * feature is not supported by the underlying parser.\n     */\n", "code": "public boolean is schema validating return this parser is schema validating\n", "comment": "returns true if this parsers uses xml schema validation\n"}
{"id": "5692351", "raw_code": "    public void setDTDRef(DTDRef dtd) {\n        this.dtd = dtd;\n    }\n", "raw_comment": "    /**\n     * This sets a dtd reference to use when marshalling objects to xml.\n     *\n     * @param dtd The DTDRef to use.\n     */\n", "code": "public void set dtdref dtdref dtd this dtd dtd\n", "comment": "this sets a dtd reference to use when marshalling objects to xml\n"}
{"id": "5692352", "raw_code": "    public void setSchemaRef(SchemaRef schema) {\n        this.schema = schema;\n    }\n", "raw_comment": "    /**\n     * This sets a XML Schema reference to use when marshalling objects to xml.\n     * <p>\n     * This adds 3 attributes to the top level tag. This is just a convenience method. XML Schema\n     * reference tags can easily be added through the object interfaces if defined there. \n     *\n     * @param schema The XML Schema reference to add.\n     */\n", "code": "public void set schema ref schema ref schema this schema schema\n", "comment": "this sets a xml schema reference to use when marshalling objects to xml\n"}
{"id": "5692354", "raw_code": "    public void setNamespaceProcessing(boolean namespaceProcessing) throws XOBFeatureNotSupportedException {\n        this.parser.setNamespaceProcessing(namespaceProcessing);\n    }\n", "raw_comment": "    /**\n     * Turns namespace processing on/off. <b>Default is true.</b>\n     *\n     * @param namespaceProcessing true for one, false for off.\n     */\n", "code": "public void set namespace processing boolean namespace processing throws xobfeature not supported exception this parser set namespace processing namespace processing\n", "comment": "turns namespace processing on off\n"}
{"id": "5692357", "raw_code": "    public void add(Object key, Object obj) {\n        this.objectList.add(obj);\n\n        ArrayList mapContent = (ArrayList)this.map.get(key);\n        if (mapContent == null) {\n            mapContent = new ArrayList();\n        }\n        mapContent.add(obj);\n        this.map.put(key, mapContent);\n    }\n", "raw_comment": "    /**\n     * Adds and object with a key. It is possible to add more than one object with the same key. \n     *\n     * @param key The key to assiciate the object with.\n     * @param obj The object to add.\n     */\n", "code": "public void add object key object obj this object list add obj array list map content array list this map get key if map content null map content new array list map content add obj this map put key map content\n", "comment": "adds and object with a key\n"}
{"id": "5692358", "raw_code": "    public void addGrouped(Object key, Object obj) {\n        if (this.map.get(key) == null) {\n            add(key, obj);  \n        }\n        else {\n            ArrayList mapContent = (ArrayList)this.map.get(key);\n            Object lastObjOfKey = mapContent.get(mapContent.size() - 1);\n            int insertIx = this.objectList.lastIndexOf(lastObjOfKey);\n            this.objectList.add(insertIx + 1,  obj);\n            mapContent.add(obj);\n        }\n    }\n", "raw_comment": "    /**\n     * Adds the specified object after the last object of the same key.\n     *\n     * @param key The key to accociate the object with.\n     * @param obj The object to add.\n     */\n", "code": "public void add grouped object key object obj if this map get key null add key obj else array list map content array list this map get key object last obj of key map content get map content size 1 int insert ix this object list last index of last obj of key this object list add insert ix 1 obj map content add obj\n", "comment": "adds the specified object after the last object of the same key\n"}
{"id": "5692359", "raw_code": "    public boolean hasNamespaceProcessing() {\n        return this.parser.hasNamespaceProcessing();\n    }\n", "raw_comment": "    /**\n     * Returns true if namespace processing is on, false otherwise. This should always return false \n     * if not supported by the underlying parser.\n     */\n", "code": "public boolean has namespace processing return this parser has namespace processing\n", "comment": "returns true if namespace processing is on false otherwise\n"}
{"id": "5692360", "raw_code": "    public void replace(Object key, Object obj) throws TooManyObjectsException {\n        ArrayList mapContent = (ArrayList)this.map.get(key);\n        if (mapContent != null) {\n            if (mapContent.size() != 1) {\n                throw new TooManyObjectsException(\"You cannot replace a key with more than one entry!\");\n            }\n            \n            Object old = mapContent.get(0);\n            int ix = this.objectList.indexOf(old);\n            this.objectList.set(ix, obj);            \n            mapContent.set(0, obj);\n        }\n        else {\n            add(key, obj);\n        }\n    }\n", "raw_comment": "    /**\n     * Replaces the object associated with the specified key.\n     *\n     * @param key The key for which the associated object should be replaced.\n     * @param obj The new object that will replace the old.\n     * @exception TooManyObjectsException if there are more than one object associated with the key.\n     */\n", "code": "public void replace object key object obj throws too many objects exception array list map content array list this map get key if map content null if map content size 1 throw new too many objects exception you cannot replace a key with more than one entry object old map content get 0 int ix this object list index of old this object list set ix obj map content set 0 obj else add key obj\n", "comment": "replaces the object associated with the specified key\n"}
{"id": "5692361", "raw_code": "    public void set(Object key, Object obj) throws TooManyObjectsException {\n        replace(key, obj);\n    }\n", "raw_comment": "    /**\n     * This is simply an alias for replace.\n     *\n     * @param key The key for which the associated object should be replaced.\n     * @param obj The new object that will replace the old.\n     * @exception TooManyObjectsException if there are more than one object associated with the key.\n     */\n", "code": "public void set object key object obj throws too many objects exception replace key obj\n", "comment": "this is simply an alias for replace\n"}
{"id": "5692362", "raw_code": "    public List get(Object key) {\n        return (List)this.map.get(key);\n    }\n", "raw_comment": "    /**\n     * Gets an object by key.\n     *\n     * @param key Get the objects stored with this key.\n     */\n", "code": "public list get object key return list this map get key\n", "comment": "gets an object by key\n"}
{"id": "5692363", "raw_code": "    public Object getObject(Object key) throws TooManyObjectsException {\n        List list = get(key);\n        \n        Object ret = null;\n        if (list != null) {\n            if (list.size() != 1) {\n                throw new TooManyObjectsException(\"You cannot do a getObject() on a key with more than one entry!\");\n            }\n            ret = list.get(0);\n        }\n        \n        return ret;\n    }\n", "raw_comment": "    /**\n     * Returns the actual object associated with the key.\n     *\n     * @param key The key for which the associated object should be fetched.\n     * @exception TooManyObjectsException if there are more than one object associated with the key.\n     */\n", "code": "public object get object object key throws too many objects exception list list get key object ret null if list null if list size 1 throw new too many objects exception you cannot do a get object on a key with more than one entry ret list get 0 return ret\n", "comment": "returns the actual object associated with the key\n"}
{"id": "5692364", "raw_code": "    public void setEntityResolver(EntityResolver entityResolver) throws XOBFeatureNotSupportedException {\n        this.parser.setEntityResolver(entityResolver);\n    }\n", "raw_comment": "    /**\n     * Sets an entity resolver to be used when parsing.\n     *\n     * @param entityResolver The entity resolver to set.\n     */\n", "code": "public void set entity resolver entity resolver entity resolver throws xobfeature not supported exception this parser set entity resolver entity resolver\n", "comment": "sets an entity resolver to be used when parsing\n"}
{"id": "5692366", "raw_code": "    public Object get(int i) {\n        return this.objectList.get(i);\n    }\n", "raw_comment": "    /**\n     * Returns the object at the specified index.\n     */\n", "code": "public object get int i return this object list get i\n", "comment": "returns the object at the specified index\n"}
{"id": "5692369", "raw_code": "    public boolean hasNext() {\n        return this.origIterator.hasNext();\n    }\n", "raw_comment": "    /** Returns <tt>true</tt> if the iteration has more elements. (In other\n     * words, returns <tt>true</tt> if <tt>next</tt> would return an element\n     * rather than throwing an exception.)\n     *\n     * @return <tt>true</tt> if the iterator has more elements.\n     *\n     */\n", "code": "public boolean has next return this orig iterator has next\n", "comment": "returns tt true tt if the iteration has more elements\n"}
{"id": "5692370", "raw_code": "    public EntityResolver getEntityResolver() throws XOBFeatureNotSupportedException {\n        return this.parser.getEntityResolver();\n    }\n", "raw_comment": "    /**\n     * Gets the current entity resolver or null if none exist.\n     */\n", "code": "public entity resolver get entity resolver throws xobfeature not supported exception return this parser get entity resolver\n", "comment": "gets the current entity resolver or null if none exist\n"}
{"id": "5692371", "raw_code": "    public Object next() {\n        return this.origIterator.next();\n    }\n", "raw_comment": "    /** Returns the next element in the iteration.\n     *\n     * @return the next element in the iteration.\n     * @exception NoSuchElementException iteration has no more elements.\n     *\n     */\n", "code": "public object next return this orig iterator next\n", "comment": "returns the next element in the iteration\n"}
{"id": "5692372", "raw_code": "    public void remove() {\n        throw new RuntimeException(\"This Iterator is readonly, remove() is not supported!\");\n    }\n", "raw_comment": "    /**\n     * Removes from the underlying collection the last element returned by the\n     * iterator (optional operation).  This method can be called only once per\n     * call to <tt>next</tt>.  The behavior of an iterator is unspecified if\n     * the underlying collection is modified while the iteration is in\n     * progress in any way other than by calling this method.\n     *\n     * @exception UnsupportedOperationException if the <tt>remove</tt>\n     * \t\t  operation is not supported by this Iterator.\n     *\n     * @exception IllegalStateException if the <tt>next</tt> method has not\n     * \t\t  yet been called, or the <tt>remove</tt> method has already\n     * \t\t  been called after the last call to the <tt>next</tt>\n     * \t\t  method.\n     *\n     */\n", "code": "public void remove throw new runtime exception this iterator is readonly remove is not supported\n", "comment": "removes from the underlying collection the last element returned by the\n"}
{"id": "5692374", "raw_code": "    public void setErrorHandler(ErrorHandler errorHandler) throws XOBFeatureNotSupportedException {\n        this.parser.setErrorHandler(errorHandler);\n    }\n", "raw_comment": "    /**\n     * Sets the error handler to use when parsing.\n     *\n     * @param errorHandler The error handler to set.\n     */\n", "code": "public void set error handler error handler error handler throws xobfeature not supported exception this parser set error handler error handler\n", "comment": "sets the error handler to use when parsing\n"}
{"id": "5692377", "raw_code": "    public ErrorHandler getErrorHandler() throws XOBFeatureNotSupportedException {\n        return this.parser.getErrorHandler();\n    }\n", "raw_comment": "    /**\n     * Returns the current error handler or null if none exist.\n     */\n", "code": "public error handler get error handler throws xobfeature not supported exception return this parser get error handler\n", "comment": "returns the current error handler or null if none exist\n"}
{"id": "5692380", "raw_code": "    public void setErrorHandler(ErrorHandler errorHandler) throws XOBFeatureNotSupportedException {\n        this.realErrorHandler = errorHandler;\n    }\n", "raw_comment": "    /**\n     * Sets the error handler to use when parsing.\n     *\n     * @param errorHandler The error handler to set.\n     *\n     */\n", "code": "public void set error handler error handler error handler throws xobfeature not supported exception this real error handler error handler\n", "comment": "sets the error handler to use when parsing\n"}
{"id": "5692382", "raw_code": "    public void setXMLDataFilterSet(XMLDataFilterSet filterSet) {\n        this.filterSet = (XMLDataFilterSetImpl)filterSet;\n    }   \n", "raw_comment": "    /**\n     * Sets a filter set that is used when getting children from a parent. For parent elements that\n     * are tagged to support filtering only those children that matches the filter will be returned.\n     * <p>\n     * There can only be one filter set per unmarshaller, but each filter set can have many filters.\n     *\n     * @param filterSet The filter set to set.\n     */\n", "code": "public void set xmldata filter set xmldata filter set filter set this filter set xmldata filter set impl filter set\n", "comment": "sets a filter set that is used when getting children from a parent\n"}
{"id": "5692384", "raw_code": "    private void childElementSetter(Object arg) throws Throwable {\n        if (!(arg instanceof XMLObject)) {\n            throw new RuntimeException(\"XMLObjectProxy: The argument to a non attribute setter must implement XMLObject!\");\n        }\n\n        // First extract the XMLElement object hiding in the argument object.\n        XMLElement setElement = (XMLElement)((XMLIntObject)arg).getXMLElement();\n\n        this.element.setChildElement(setElement);\n    }\n", "raw_comment": "    /**\n     * This method handles setters of child elements.\n     *\n     * @param arg The object to set.\n     */\n", "code": "private void child element setter object arg throws throwable if arg instanceof xmlobject throw new runtime exception xmlobject proxy the argument to a non attribute setter must implement xmlobject first extract the xmlelement object hiding in the argument object xmlelement set element xmlelement xmlint object arg get xmlelement this element set child element set element\n", "comment": "this method handles setters of child elements\n"}
{"id": "5692387", "raw_code": "    public void setDTDRef(DTDRef dtd) {\n        this.marshaller.setDTDRef(dtd);\n        try {\n            setSchemaValidating(false);\n        }\n        catch (XOBFeatureNotSupportedException fnse) {\n            // This is OK, we only want to set it if it is supported. Setting it is\n            // the only way to find out if it is.\n        }\n    }\n", "raw_comment": "    /**\n     * This sets a dtd reference to use when marshalling objects to xml.\n     *\n     * @param dtd The DTDRef to use.\n     */\n", "code": "public void set dtdref dtdref dtd this marshaller set dtdref dtd try set schema validating false catch xobfeature not supported exception fnse this is ok we only want to set it if it is supported setting it is the only way to find out if it is\n", "comment": "this sets a dtd reference to use when marshalling objects to xml\n"}
{"id": "5692389", "raw_code": "    public void setSchemaRef(SchemaRef schema) {\n        this.marshaller.setSchemaRef(schema);\n        try {\n            setSchemaValidating(true);\n        }\n        catch (XOBFeatureNotSupportedException fnse) {\n            // This is OK, we only want to set it if it is supported. Setting it is\n            // the only way to find out if it is.\n        }\n    }\n", "raw_comment": "    /**\n     * This sets a XML Schema reference to use when marshalling objects to xml.\n     * <p>\n     * This adds 3 attributes to the top level tag. This is just a convenience method. XML Schema\n     * reference tags can easily be added through the object interfaces if defined there. \n     *\n     * @param schema The XML Schema reference to add.\n     */\n", "code": "public void set schema ref schema ref schema this marshaller set schema ref schema try set schema validating true catch xobfeature not supported exception fnse this is ok we only want to set it if it is supported setting it is the only way to find out if it is\n", "comment": "this sets a xml schema reference to use when marshalling objects to xml\n"}
{"id": "5692390", "raw_code": "    private void attributeSetter(String setterName, Object arg) throws Throwable {\n        String attrName = setterName.substring(0,1).toLowerCase() + setterName.substring(1);\n        String namespace = null;\n        // Namespaced attributes have an '_' character separating the namespace from the attribute name in\n        // the attribute setter name.\n        if (attrName.indexOf('_') >= 0) {\n            StringTokenizer tokens = new StringTokenizer(attrName, \"_\");\n            namespace = tokens.nextToken();\n            attrName = tokens.nextToken();\n        }\n        String attrValue = ToolKit.primitiveTypeToString(arg);\n        XMLAttribute attr = new XMLAttribute(namespace, attrName, attrValue);\n        this.element.setAttribute(attr);        \n    }\n", "raw_comment": "    /**\n     * This method handles attribute setters.\n     *\n     * @param setterName The name of the setter but without the \"set\" part.\n     * @param arg The object to set.\n     */\n", "code": "private void attribute setter string setter name object arg throws throwable string attr name setter name substring 0 1 to lower case setter name substring 1 string namespace null namespaced attributes have an character separating the namespace from the attribute name in the attribute setter name if attr name index of 0 string tokenizer tokens new string tokenizer attr name namespace tokens next token attr name tokens next token string attr value tool kit primitive type to string arg xmlattribute attr new xmlattribute namespace attr name attr value this element set attribute attr\n", "comment": "this method handles attribute setters\n"}
{"id": "5692393", "raw_code": "    public void error(SAXParseException exception) throws SAXException {\n        this.failed = true;\n        this.faults.append(\"Error: \" + exception.getLineNumber() + \":\" + exception.getColumnNumber());\n        this.faults.append(\" - \" + exception.getMessage());\n        this.faults.append(\"\\n\");   \n        if (this.realErrorHandler != null) {\n            this.realErrorHandler.error(exception);\n        }\n    }\n", "raw_comment": "    /** Receive notification of a recoverable error.\n     *\n     * <p>This corresponds to the definition of \"error\" in section 1.2\n     * of the W3C XML 1.0 Recommendation.  For example, a validating\n     * parser would use this callback to report the violation of a\n     * validity constraint.  The default behaviour is to take no\n     * action.</p>\n     *\n     * <p>The SAX parser must continue to provide normal parsing events\n     * after invoking this method: it should still be possible for the\n     * application to process the document through to the end.  If the\n     * application cannot do so, then the parser should report a fatal\n     * error even if the XML 1.0 recommendation does not require it to\n     * do so.</p>\n     *\n     * <p>Filters may use this method to report other, non-XML errors\n     * as well.</p>\n     *\n     * @param exception The error information encapsulated in a\n     *                  SAX parse exception.\n     * @exception org.xml.sax.SAXException Any SAX exception, possibly\n     *            wrapping another exception.\n     * @see org.xml.sax.SAXParseException\n     *\n     */\n", "code": "public void error saxparse exception exception throws saxexception this failed true this faults append error exception get line number exception get column number this faults append exception get message this faults append n if this real error handler null this real error handler error exception\n", "comment": "receive notification of a recoverable error\n"}
{"id": "5692396", "raw_code": "    public void fatalError(SAXParseException exception) throws SAXException {\n        this.failed = true;\n        this.faults.append(\"FatalError: \" + exception.getLineNumber() + \":\" + exception.getColumnNumber());\n        this.faults.append(\" - \" + exception.getMessage());\n        this.faults.append(\"\\n\");\n        if (this.realErrorHandler != null) {\n            this.realErrorHandler.fatalError(exception);\n        }\n    }\n", "raw_comment": "    /** Receive notification of a non-recoverable error.\n     *\n     * <p>This corresponds to the definition of \"fatal error\" in\n     * section 1.2 of the W3C XML 1.0 Recommendation.  For example, a\n     * parser would use this callback to report the violation of a\n     * well-formedness constraint.</p>\n     *\n     * <p>The application must assume that the document is unusable\n     * after the parser has invoked this method, and should continue\n     * (if at all) only for the sake of collecting addition error\n     * messages: in fact, SAX parsers are free to stop reporting any\n     * other events once this method has been invoked.</p>\n     *\n     * @param exception The error information encapsulated in a\n     *                  SAX parse exception.\n     * @exception org.xml.sax.SAXException Any SAX exception, possibly\n     *            wrapping another exception.\n     * @see org.xml.sax.SAXParseException\n     *\n     */\n", "code": "public void fatal error saxparse exception exception throws saxexception this failed true this faults append fatal error exception get line number exception get column number this faults append exception get message this faults append n if this real error handler null this real error handler fatal error exception\n", "comment": "receive notification of a non recoverable error\n"}
{"id": "5692397", "raw_code": "    public void warning(SAXParseException exception) throws SAXException {\n        if (this.failOnWarning) {\n            this.failed = true;\n        }\n        this.faults.append(\"Warning: \" + exception.getLineNumber() + \":\" + exception.getColumnNumber());\n        this.faults.append(\" - \" + exception.getMessage());\n        this.faults.append(\"\\n\");\n        if (this.realErrorHandler != null) {\n            this.realErrorHandler.warning(exception);\n        }\n    }\n", "raw_comment": "    /** Receive notification of a warning.\n     *\n     * <p>SAX parsers will use this method to report conditions that\n     * are not errors or fatal errors as defined by the XML 1.0\n     * recommendation.  The default behaviour is to take no action.</p>\n     *\n     * <p>The SAX parser must continue to provide normal parsing events\n     * after invoking this method: it should still be possible for the\n     * application to process the document through to the end.</p>\n     *\n     * <p>Filters may use this method to report other, non-XML warnings\n     * as well.</p>\n     *\n     * @param exception The warning information encapsulated in a\n     *                  SAX parse exception.\n     * @exception org.xml.sax.SAXException Any SAX exception, possibly\n     *            wrapping another exception.\n     * @see org.xml.sax.SAXParseException\n     *\n     */\n", "code": "public void warning saxparse exception exception throws saxexception if this fail on warning this failed true this faults append warning exception get line number exception get column number this faults append exception get message this faults append n if this real error handler null this real error handler warning exception\n", "comment": "receive notification of a warning\n"}
{"id": "5692399", "raw_code": "    public String getFilterName() {\n        return this.filterName;\n    }\n", "raw_comment": "    /**\n     * Returns the name of the filter.\n     */\n", "code": "public string get filter name return this filter name\n", "comment": "returns the name of the filter\n"}
{"id": "5692400", "raw_code": "        public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n            if (this.dtdRef == null && systemId.toLowerCase().endsWith(\".dtd\")) {\n                this.dtdRef = binder.createDTDRef(publicId, systemId);\n            }\n            \n            if (this.realResolver != null) {\n                return this.realResolver.resolveEntity(publicId, systemId);\n            }\n            \n            return null;\n        }\n", "raw_comment": "        /** Allow the application to resolve external entities.\n         *\n         * <p>The Parser will call this method before opening any external\n         * entity except the top-level document entity (including the\n         * external DTD subset, external entities referenced within the\n         * DTD, and external entities referenced within the document\n         * element): the application may request that the parser resolve\n         * the entity itself, that it use an alternative URI, or that it\n         * use an entirely different input source.</p>\n         *\n         * <p>Application writers can use this method to redirect external\n         * system identifiers to secure and/or local URIs, to look up\n         * public identifiers in a catalogue, or to read an entity from a\n         * database or other input source (including, for example, a dialog\n         * box).</p>\n         *\n         * <p>If the system identifier is a URL, the SAX parser must\n         * resolve it fully before reporting it to the application.</p>\n         *\n         * @param publicId The public identifier of the external entity\n         *        being referenced, or null if none was supplied.\n         * @param systemId The system identifier of the external entity\n         *        being referenced.\n         * @return An InputSource object describing the new input source,\n         *         or null to request that the parser open a regular\n         *         URI connection to the system identifier.\n         * @exception org.xml.sax.SAXException Any SAX exception, possibly\n         *            wrapping another exception.\n         * @exception java.io.IOException A Java-specific IO exception,\n         *            possibly the result of creating a new InputStream\n         *            or Reader for the InputSource.\n         * @see org.xml.sax.InputSource\n         *\n         */\n", "code": "public input source resolve entity string public id string system id throws saxexception ioexception if this dtd ref null system id to lower case ends with dtd this dtd ref binder create dtdref public id system id if this real resolver null return this real resolver resolve entity public id system id return null\n", "comment": "allow the application to resolve external entities\n"}
{"id": "5692401", "raw_code": "    public void setFilterAttribute(String filterAttribute) {\n        this.filterAttribute = filterAttribute;\n    }\n", "raw_comment": "    /**\n     * Sets the attribue of children to filter on.\n     *\n     * @param filterAttribute The attribute to set.\n     */\n", "code": "public void set filter attribute string filter attribute this filter attribute filter attribute\n", "comment": "sets the attribue of children to filter on\n"}
{"id": "5692402", "raw_code": "    public String getFilterAttribute() {\n        return this.filterAttribute;\n    }\n", "raw_comment": "    /**\n     * Returns the attribue of children to filter on.\n     */\n", "code": "public string get filter attribute return this filter attribute\n", "comment": "returns the attribue of children to filter on\n"}
{"id": "5692403", "raw_code": "    public void setFilterValue(String filterValue) {\n        this.filterValue = filterValue;\n    }    \n", "raw_comment": "    /**\n     * Sets the value the filterAttribute should have to be included\n     * in the result.\n     *\n     * @param filterValue The value to set.\n     */\n", "code": "public void set filter value string filter value this filter value filter value\n", "comment": "sets the value the filter attribute should have to be included\n"}
{"id": "5692404", "raw_code": "    public String getFilterValue() {\n        return this.filterValue;\n    }\n", "raw_comment": "    /**\n     * Returns the value the filterAttribute should have to be included\n     * in the result.\n     */\n", "code": "public string get filter value return this filter value\n", "comment": "returns the value the filter attribute should have to be included\n"}
{"id": "5692409", "raw_code": "    public XMLParser newInstance() {\n        return new XOBXMLParser();\n    }    \n", "raw_comment": "    /** \n     * This should simply create a new instance of the XMLParser implementation and\n     * return it. cloneParser() will call this method and then copy all private fields,\n     * and return a complete clone.\n     */\n", "code": "public xmlparser new instance return new xobxmlparser\n", "comment": "this should simply create a new instance of the xmlparser implementation and\n"}
{"id": "5692410", "raw_code": "        public DTDRef getDTDRef() {\n            return this.dtdRef;\n        }\n", "raw_comment": "        /**\n         * Returns any cauthg DTD reference.\n         */\n", "code": "public dtdref get dtdref return this dtd ref\n", "comment": "returns any cauthg dtd reference\n"}
{"id": "5692411", "raw_code": "        public Object next() {\n            try {\n                return XMLObjectProxy.createProxiedObject((XMLElement)this.origIterator.next(), this.interfaceClass, this.filterSet);\n            }\n            catch (Throwable t) {\n                throw new RuntimeException(t.getMessage());\n            }\n        }\n", "raw_comment": "        /** \n         * Returns the next element in the iteration.\n         *\n         * @return the next element in the iteration.\n         * @exception NoSuchElementException iteration has no more elements.\n         */\n", "code": "public object next try return xmlobject proxy create proxied object xmlelement this orig iterator next this interface class this filter set catch throwable t throw new runtime exception t get message\n", "comment": "returns the next element in the iteration\n"}
{"id": "5692413", "raw_code": "        public EntityResolver getRealResolver() {\n                return this.realResolver;\n        }   \n", "raw_comment": "        /**\n         * Returns the real resolver.\n         */\n", "code": "public entity resolver get real resolver return this real resolver\n", "comment": "returns the real resolver\n"}
{"id": "5692417", "raw_code": "        public void remove() {\n            this.origIterator.remove();\n        }\n", "raw_comment": "        /**\n         * Removes from the underlying collection the last element returned by the\n         * iterator (optional operation).  This method can be called only once per\n         * call to <tt>next</tt>.  The behavior of an iterator is unspecified if\n         * the underlying collection is modified while the iteration is in\n         * progress in any way other than by calling this method.\n         *\n         * @exception UnsupportedOperationException if the <tt>remove</tt>\n         * \t\t  operation is not supported by this Iterator.\n         *\n         * @exception IllegalStateException if the <tt>next</tt> method has not\n         * \t\t  yet been called, or the <tt>remove</tt> method has already\n         * \t\t  been called after the last call to the <tt>next</tt>\n         * \t\t  method.\n         */\n", "code": "public void remove this orig iterator remove\n", "comment": "removes from the underlying collection the last element returned by the\n"}
{"id": "5692424", "raw_code": "    public XMLDataFilter makeFilter(String filterName) {\n        XMLDataFilterImpl filter = new XMLDataFilterImpl(filterName);\n        this.filters.put(filterName, filter);\n        \n        return filter;\n    }\n", "raw_comment": "    /**\n     * Makes a new filter in the set. The returned filter reference must be configured before the\n     * filterset is set on the XMLUnmarshaller, but can after that be modified at anytime.\n     *\n     * @param filterName The name of the filter. This name should be used as value for the filterNameAttribue\n     *                   in the XML files to be applied.\n     */\n", "code": "public xmldata filter make filter string filter name xmldata filter impl filter new xmldata filter impl filter name this filters put filter name filter return filter\n", "comment": "makes a new filter in the set\n"}
{"id": "5692425", "raw_code": "    public void setQualifiedName(String name) {\n        int colonIx = name.indexOf(':');\n        if (colonIx > 0) {\n            this.namespace = name.substring(0, colonIx);\n            this.name = name.substring(colonIx + 1);\n        }\n        else {\n            this.namespace = null;\n            this.name = name;\n        }\n    }\n", "raw_comment": "    /**\n     * Sets a fully qualified name including namespace if any.\n     *\n     * @param name The name to set.\n     */\n", "code": "public void set qualified name string name int colon ix name index of if colon ix 0 this namespace name substring 0 colon ix this name name substring colon ix 1 else this namespace null this name name\n", "comment": "sets a fully qualified name including namespace if any\n"}
{"id": "5692426", "raw_code": "    public XMLDataFilterImpl lookupFilter(String filterName) {\n        return (XMLDataFilterImpl)this.filters.get(filterName);\n    }\n", "raw_comment": "    /**\n     * Lookup a named filter.\n     *\n     * @param filterName The name of the filter to lookup.\n     */\n", "code": "public xmldata filter impl lookup filter string filter name return xmldata filter impl this filters get filter name\n", "comment": "lookup a named filter\n"}
{"id": "5692428", "raw_code": "    public String getNamespacePrefix() {\n        return this.namespacePrefix;\n    }\n", "raw_comment": "    /** \n     * Returns the alias for the namespace if any.\n     */\n", "code": "public string get namespace prefix return this namespace prefix\n", "comment": "returns the alias for the namespace if any\n"}
{"id": "5692429", "raw_code": "    public String getSchemaLocation() {\n        return this.schemaLocation;        \n    }\n", "raw_comment": "    /**\n     * Returns the location of the schema for the namespace.\n     */\n", "code": "public string get schema location return this schema location\n", "comment": "returns the location of the schema for the namespace\n"}
{"id": "5692430", "raw_code": "    public XMLAttribute getXmlNS() {\n        if (this.namespacePrefix == null) {\n            return new XMLAttribute(null, \"xmlns\", this.namespace);\n        }\n        else {\n            return new XMLAttribute(\"xmlns\", this.namespacePrefix, this.namespace);\n        }\n    }\n", "raw_comment": "    /**\n     * Returns the default namespace (xmlns) as an XMLAttribute.\n     */\n", "code": "public xmlattribute get xml ns if this namespace prefix null return new xmlattribute null xmlns this namespace else return new xmlattribute xmlns this namespace prefix this namespace\n", "comment": "returns the default namespace xmlns as an xmlattribute\n"}
{"id": "5692431", "raw_code": "    public String getQualifiedName() {\n        StringBuffer ret = new StringBuffer();\n        if (this.namespace != null) {\n            ret.append(this.namespace);\n            ret.append(':');\n        }\n        ret.append(this.name);\n        return ret.toString();\n    }\n", "raw_comment": "    /**\n     * Returns a fully qualified name including namespace if any.\n     */\n", "code": "public string get qualified name string buffer ret new string buffer if this namespace null ret append this namespace ret append ret append this name return ret to string\n", "comment": "returns a fully qualified name including namespace if any\n"}
{"id": "5692433", "raw_code": "    public XMLAttribute getXmlNSXsi() {\n        return new XMLAttribute(\"xmlns\", \"xsi\", \"http://www.w3.org/2001/XMLSchema-instance\");\n    }\n", "raw_comment": "    /**\n     * Returns the xmlns:xsi attribute as an XMLAttribute.\n     */\n", "code": "public xmlattribute get xml nsxsi return new xmlattribute xmlns xsi http www w3 org 2001 xmlschema instance\n", "comment": "returns the xmlns xsi attribute as an xmlattribute\n"}
{"id": "5692434", "raw_code": "    public XMLAttribute getXsiSchemaLocation() {\n        return new XMLAttribute(\"xsi\",\"schemaLocation\", this.namespace + \" \" + this.schemaLocation);\n    }\n", "raw_comment": "    /**\n     * Returns the xsi:schemaLocation attribute as an XMLAttribute.\n     */\n", "code": "public xmlattribute get xsi schema location return new xmlattribute xsi schema location this namespace this schema location\n", "comment": "returns the xsi schema location attribute as an xmlattribute\n"}
{"id": "5692435", "raw_code": "    public String toString() {\n        StringBuffer sb = new StringBuffer();\n        sb.append(\"xmlns\");\n        if (this.namespacePrefix != null) {\n            sb.append(':');\n            sb.append(this.namespacePrefix);\n        }\n        sb.append(\"=\\\"\");\n        sb.append(this.namespace);\n        sb.append(\"\\\" xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\" \");\n        sb.append(\" xsi:schemaLocation=\\\"\");\n        sb.append(this.namespace);\n        sb.append(' ');\n        sb.append(this.schemaLocation);\n        sb.append(\"\\\"\");\n        return sb.toString();\n    }\n", "raw_comment": "    /**\n     * Returns a String representation of all information held by this class.\n     */\n", "code": "public string to string string buffer sb new string buffer sb append xmlns if this namespace prefix null sb append sb append this namespace prefix sb append sb append this namespace sb append xmlns xsi http www w3 org 2001 xmlschema instance sb append xsi schema location sb append this namespace sb append sb append this schema location sb append return sb to string\n", "comment": "returns a string representation of all information held by this class\n"}
{"id": "5692439", "raw_code": "    public void generateSummary(Iterator elementsIt) {\n        writeSummaryStart(\"Elements\");\n        while (elementsIt.hasNext()) {\n            XSDElement element = (XSDElement)elementsIt.next();\n            if (element.hasPublicType()) {\n                writeSummaryContents(element.getName(), element.getTypeAsString(), element.getDocumentation());\n            }\n            else {\n                writeSummaryContents(element.getName(), \"(Private type)\", element.getDocumentation());\n            }\n        }\n        writeSummaryEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a summary section.\n     *\n     * @param elementsIt An Iterator of XSDElement objects.\n     */\n", "code": "public void generate summary iterator elements it write summary start elements while elements it has next xsdelement element xsdelement elements it next if element has public type write summary contents element get name element get type as string element get documentation else write summary contents element get name private type element get documentation write summary end\n", "comment": "generates a summary section\n"}
{"id": "5692441", "raw_code": "    public void generateDetail(Iterator elementsIt) {\n        writeDetailStart(\"Elements\");\n        while (elementsIt.hasNext()) {\n            XSDElement element = (XSDElement)elementsIt.next();\n            \n            generateDetail(element);\n        }\n        writeDetailEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a detail section.\n     *\n     * @param elementsIt An Iterator of XSDElement objects.\n     */\n", "code": "public void generate detail iterator elements it write detail start elements while elements it has next xsdelement element xsdelement elements it next generate detail element write detail end\n", "comment": "generates a detail section\n"}
{"id": "5692442", "raw_code": "    public void generateDetailAlt2(Iterator elementsIt, XSDSchema schema) {\n        writeDetailStart(\"Elements\");\n        while (elementsIt.hasNext()) {\n            XSDElement element = (XSDElement)elementsIt.next();\n            \n            generateDetailAlt2(element, schema);\n        }\n        writeDetailEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a detail section - Alternative 2.\n     *\n     * @param elementsIt An Iterator of XSDElement objects.\n     * @param schema The schema we are generating docs for.\n     */\n", "code": "public void generate detail alt2 iterator elements it xsdschema schema write detail start elements while elements it has next xsdelement element xsdelement elements it next generate detail alt2 element schema write detail end\n", "comment": "generates a detail section alternative 2\n"}
{"id": "5692445", "raw_code": "    public void setChildElement(XMLElement element) throws TooManyObjectsException {\n        this.children.replace(element.getQualifiedName(),  element);\n    }\n", "raw_comment": "    /**\n     * Sets a child element on this element. Sucessive sets of elements with the same name\n     * will replace previous.\n     *\n     * @param element The element to set.\n     * @exception TooManyObjectsException if there are more than one element of the same type.\n     */\n", "code": "public void set child element xmlelement element throws too many objects exception this children replace element get qualified name element\n", "comment": "sets a child element on this element\n"}
{"id": "5692448", "raw_code": "    public void addChildElement(XMLElement element) {\n        this.children.add(element.getQualifiedName(), element);\n    }\n", "raw_comment": "    /**\n     * Adds a child element.\n     *\n     * @param element The child element to add.\n     */ \n", "code": "public void add child element xmlelement element this children add element get qualified name element\n", "comment": "adds a child element\n"}
{"id": "5692449", "raw_code": "    public XMLParser getXMLParser() {\n        return this.parser;\n    }\n", "raw_comment": "    /** \n     * Returns the current XMLParser implementation.\n     */\n", "code": "public xmlparser get xmlparser return this parser\n", "comment": "returns the current xmlparser implementation\n"}
{"id": "5692452", "raw_code": "    public void setXMLParser(XMLParser parser) {\n        if (parser == null) {\n            this.parser = new XOBXMLParser();\n        }\n        else {\n            this.parser = parser;\n        }\n    }\n", "raw_comment": "    /** \n     * This replaces the standard XMLParser implementation (using jaxp apis) with a user\n     * provided implementation.\n     */\n", "code": "public void set xmlparser xmlparser parser if parser null this parser new xobxmlparser else this parser parser\n", "comment": "this replaces the standard xmlparser implementation using jaxp apis with a user\n"}
{"id": "5692455", "raw_code": "    public DTDRef createDTDRef(String systemId) {\n        return new DTDRefImpl(null, systemId, getDocTypeAsString());\n    }\n", "raw_comment": "    /** \n     * Creates a new DTDRef. This can be used to create a DTD reference\n     * in marshalled objects.\n     * <p>\n     * toString() on the returned object will produce the following:\n     * <pre>\n     * &lt;!DOCTYPE <i>docType</i> SYSTEM \"<i>systemId</i>\"&gt;\n     * </pre>\n     *\n     * @param systemId The system id part of the DTD.\n     */\n", "code": "public dtdref create dtdref string system id return new dtdref impl null system id get doc type as string\n", "comment": "creates a new dtdref\n"}
{"id": "5692457", "raw_code": "    public List getAllChildElements() {\n        return this.children.getAllEntries();\n    }\n", "raw_comment": "    /**\n     * Returns a List of all direct child elements as XMLElement objects.\n     */\n", "code": "public list get all child elements return this children get all entries\n", "comment": "returns a list of all direct child elements as xmlelement objects\n"}
{"id": "5692458", "raw_code": "    public DTDRef createDTDRef(String publicId, String systemId) {\n        return new DTDRefImpl(publicId, systemId, getDocTypeAsString());\n    }\n", "raw_comment": "    /** \n     * Creates a new DTDRef. This can be used to create a DTD reference\n     * in marshalled objects.\n     * <p>\n     * toString() on the returned object will produce the following:\n     * <pre>\n     * &lt;!DOCTYPE <i>docType</i> PUBLIC \"<i>publicId</i>\" \"<i>systemId</i>\"&gt;\n     * </pre>\n     *\n     * @param publicId The public id part of the DTD.\n     * @param systemId The system id part of the DTD.\n     */\n", "code": "public dtdref create dtdref string public id string system id return new dtdref impl public id system id get doc type as string\n", "comment": "creates a new dtdref\n"}
{"id": "5692460", "raw_code": "    public List getChildElements(String name) {\n        return this.children.get(name);\n    }\n", "raw_comment": "    /**\n     * Returns a List of the named child elements.\n     *\n     * @param name The name of the element to return.\n     */\n", "code": "public list get child elements string name return this children get name\n", "comment": "returns a list of the named child elements\n"}
{"id": "5692461", "raw_code": "    public DTDRef createCompleteDTDRef(String completeDTDRefTag) {\n        return new DTDRefImpl(completeDTDRefTag);\n    }\n", "raw_comment": "    /** \n     * Creates a new DTDRef. This can be used to create a DTD reference\n     * in marshalled objects.\n     * <p>\n     * This version allows support for things not supported by the other 2 create methods. Dont\n     * use this version if one of the other 2 will do!\n     * <p>\n     * toString() on the returned object will return exactly what was passed.\n     *\n     * @param completeDTDRefTag A complete DTD reference tag.\n     */\n", "code": "public dtdref create complete dtdref string complete dtdref tag return new dtdref impl complete dtdref tag\n", "comment": "creates a new dtdref\n"}
{"id": "5692464", "raw_code": "    public XMLElement getChildElement(String name) {\n        try {\n            return (XMLElement)this.children.get(name).get(0);\n        }\n        catch (NullPointerException npe) {\n            return null;\n        }\n    }\n", "raw_comment": "    /**\n     * Returns the first child element with the name.\n     *\n     * @param name The name of the child to get.\n     */\n", "code": "public xmlelement get child element string name try return xmlelement this children get name get 0 catch null pointer exception npe return null\n", "comment": "returns the first child element with the name\n"}
{"id": "5692465", "raw_code": "    public SchemaRef createSchemaRef(String namespace, String schemaLocation) {\n        return new SchemaRefImpl(namespace, schemaLocation);\n    }\n", "raw_comment": "    /** \n     * Creates new SchemaRef. This can be used to create a Schema reference in marshalled objects.\n     * <p>\n     * toString() on the returned object will produce the following attributes:\n     * <pre>\n     * xmlns=\"<i>namespace</i>\"\n     * nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     * xsi:schemaLocation=\"<i>namespace</i> <i>schemaLocation</i>\"\n     * </pre>\n     * See <a href='http://www.w3schools.com/schema/schema_schema.asp'>http://www.w3schools.com/schema/schema_schema.asp</a>\n     * for more information.\n     *\n     * @param namespace The 'xmlns' attribute value.\n     * @param schemaLocation The location of the schema for the namespace.\n     */\n", "code": "public schema ref create schema ref string namespace string schema location return new schema ref impl namespace schema location\n", "comment": "creates new schema ref\n"}
{"id": "5692466", "raw_code": "    public void addFile(File file) {\n        this.files.add(file);\n    }\n", "raw_comment": "    /**\n     * Adds a file to generate doc for.\n     *\n     * @param file The file to add.\n     */\n", "code": "public void add file file file this files add file\n", "comment": "adds a file to generate doc for\n"}
{"id": "5692467", "raw_code": "    public SchemaRef createSchemaRef(String namespace, String namespacePrefix, String schemaLocation) {\n        return new SchemaRefImpl(namespace, namespacePrefix, schemaLocation);\n    }    \n", "raw_comment": "    /** \n     * Creates new SchemaRef. This can be used to create a Schema reference in marshalled objects.\n     * <p>\n     * toString() on the returned object will produce the following attributes:\n     * <pre>\n     * xmlns:<i>namespacePrefix</i>=\"<i>namespace</i>\"\n     * nxmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n     * xsi:schemaLocation=\"<i>namespace</i> <i>schemaLocation</i>\"\n     * </pre>\n     * See <a href='http://www.w3schools.com/schema/schema_schema.asp'>http://www.w3schools.com/schema/schema_schema.asp</a>\n     * for more information.\n     *\n     * @param namespace The namespace of the schema tags.\n     * @param namespacePrefix The prefix for the namespace that the tags will be prefixed with.\n     * @param schemaLocation The location of the schema for the namespace.\n     */\n", "code": "public schema ref create schema ref string namespace string namespace prefix string schema location return new schema ref impl namespace namespace prefix schema location\n", "comment": "creates new schema ref\n"}
{"id": "5692468", "raw_code": "    public void generateSummary(Iterator complexTypesIt) {\n        writeSummaryStart(\"Complex types\");\n        while (complexTypesIt.hasNext()) {\n            XSDComplexType complexType = (XSDComplexType)complexTypesIt.next();\n            writeSummaryContents(complexType.getName(), null, complexType.getDocumentation());\n        }\n        writeSummaryEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a summary section.\n     *\n     * @param complexTypesIt An Iterator of XSDComplexType objects.\n     */\n", "code": "public void generate summary iterator complex types it write summary start complex types while complex types it has next xsdcomplex type complex type xsdcomplex type complex types it next write summary contents complex type get name null complex type get documentation write summary end\n", "comment": "generates a summary section\n"}
{"id": "5692469", "raw_code": "    public void generateDetail(Iterator complexTypesIt) {\n        writeDetailStart(\"Complex types\");\n        while (complexTypesIt.hasNext()) {\n            XSDComplexType complexType = (XSDComplexType)complexTypesIt.next();\n            \n            generateDetail(complexType);\n        }\n        writeDetailEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a detail section for all complex types in the specified Iterator.\n     *\n     * @param complexTypesIt An Iterator of XSDComplexType objects.\n     */\n", "code": "public void generate detail iterator complex types it write detail start complex types while complex types it has next xsdcomplex type complex type xsdcomplex type complex types it next generate detail complex type write detail end\n", "comment": "generates a detail section for all complex types in the specified iterator\n"}
{"id": "5692470", "raw_code": "    public XMLDataFilterSet createXMLDataFilterSet() {\n        return new XMLDataFilterSetImpl();\n    }    \n", "raw_comment": "    /**\n     * Creates a new XMLDataFilterSet that can be set on an XMLUnmarshaller. Filters need to be made and \n     * configured before it is given to XMLUnmarshaller. The filter configurations can however be changed \n     * at anytime after that.\n     */\n", "code": "public xmldata filter set create xmldata filter set return new xmldata filter set impl\n", "comment": "creates a new xmldata filter set that can be set on an xmlunmarshaller\n"}
{"id": "5692471", "raw_code": "    public void generateDetail(XSDComplexType complexType) {\n        writeDetailContentsStart(\"complexType\", complexType.getName(), complexType.getDocumentation());\n\n        if (complexType.hasExtensions()) {\n            writeExtensionList(complexType.getExtensions());\n        }\n\n        if (complexType.hasAttributes()) {\n            writeAttributeDetailList(complexType.getAttributes());\n        }\n\n        if (complexType.hasElementRefs()) {\n            writeElementDetailList(complexType.getElementRefs());\n        }\n\n        writeDetailContentsEnd();        \n    }\n", "raw_comment": "    /**\n     * Generates detail for a specific complex type.\n     *\n     * @param complexType The complex type to generate detail for.\n     */\n", "code": "public void generate detail xsdcomplex type complex type write detail contents start complex type complex type get name complex type get documentation if complex type has extensions write extension list complex type get extensions if complex type has attributes write attribute detail list complex type get attributes if complex type has element refs write element detail list complex type get element refs write detail contents end\n", "comment": "generates detail for a specific complex type\n"}
{"id": "5692472", "raw_code": "    public void setAttribute(XMLAttribute attribute) {\n        if (attribute.getNamespace() != null) {\n            this.attributes.put(attribute.getNamespace() + \":\" + attribute.getName(), attribute);\n        }\n        else {\n            this.attributes.put(attribute.getName(), attribute);\n        }\n    }\n", "raw_comment": "    /**\n     * Sets an attribute.\n     *\n     * @param attribute The attribute to set.\n     */\n", "code": "public void set attribute xmlattribute attribute if attribute get namespace null this attributes put attribute get namespace attribute get name attribute else this attributes put attribute get name attribute\n", "comment": "sets an attribute\n"}
{"id": "5692474", "raw_code": "    private void collectGroupElements(XSDSchema schema, Iterator names, ArrayList elements) {\n        while (names.hasNext()) {\n            String groupName = (String)names.next();\n            XSDGroup group = schema.lookupGroup(groupName);\n            if (group != null) {\n                for (Iterator it = group.getElementRefs(); it.hasNext();) {\n                    elements.add(it.next());\n                }\n                if (group.getGroupRefs() != null) {\n                    collectGroupElements(schema, group.getGroupRefs(),  elements);\n                }\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Collects elements in sub groups.\n     *\n     * @param schema The schema we are generating docs for.\n     * @param names An Iterator of String objects containing the group names.\n     * @param elements Any found elements are added to this.\n     */\n", "code": "private void collect group elements xsdschema schema iterator names array list elements while names has next string group name string names next xsdgroup group schema lookup group group name if group null for iterator it group get element refs it has next elements add it next if group get group refs null collect group elements schema group get group refs elements\n", "comment": "collects elements in sub groups\n"}
{"id": "5692478", "raw_code": "    private void setter(String methodName, Object data) {\n        try {\n            Class[] clazz = new Class[1];\n            clazz[0] = data.getClass();\n            Method method = this.realTask.getClass().getDeclaredMethod(methodName, clazz);\n            Object[] arg = new Object[1];\n            arg[0] = data;\n            method.invoke(this.realTask, arg);\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(e.getMessage());\n        }\n    }\n", "raw_comment": "    /**\n     * Internal support method that calls a setter in the real task.\n     *\n     * @param methodName The name of the method to call.\n     * @param data The data to pass to the setter.\n     */\n", "code": "private void setter string method name object data try class clazz new class 1 clazz 0 data get class method method this real task get class get declared method method name clazz object arg new object 1 arg 0 data method invoke this real task arg catch exception e e print stack trace throw new runtime exception e get message\n", "comment": "internal support method that calls a setter in the real task\n"}
{"id": "5692481", "raw_code": "    private void setter(String methodName, boolean data) {\n        try {\n            Class[] clazz = new Class[1];\n            clazz[0] = boolean.class;\n            Method method = this.realTask.getClass().getDeclaredMethod(methodName, clazz);\n            Object[] arg = new Object[1];\n            arg[0] = new Boolean(data);\n            method.invoke(this.realTask, arg);\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(e.getMessage());\n        }\n    }\n", "raw_comment": "    /**\n     * Internal support method that calls a setter in the real task.\n     *\n     * @param methodName The name of the method to call.\n     * @param data The data to pass to the setter.\n     */\n", "code": "private void setter string method name boolean data try class clazz new class 1 clazz 0 boolean class method method this real task get class get declared method method name clazz object arg new object 1 arg 0 new boolean data method invoke this real task arg catch exception e e print stack trace throw new runtime exception e get message\n", "comment": "internal support method that calls a setter in the real task\n"}
{"id": "5692482", "raw_code": "    public Iterator getAttributes() {\n        return this.attributes.values().iterator();\n    }\n", "raw_comment": "    /**\n     * Returns an Iterator of all attributes as XMLAttribute objects.\n     */\n", "code": "public iterator get attributes return this attributes values iterator\n", "comment": "returns an iterator of all attributes as xmlattribute objects\n"}
{"id": "5692483", "raw_code": "    public boolean isAlt() {\n        return this.opts.isAlt();\n    }\n", "raw_comment": "    /**\n     * Returns true if the alternative output is selected.\n     */\n", "code": "public boolean is alt return this opts is alt\n", "comment": "returns true if the alternative output is selected\n"}
{"id": "5692484", "raw_code": "    private Object getter(String methodName) {\n        Object ret = null;\n        try {\n            Method method = this.realTask.getClass().getDeclaredMethod(methodName, null);\n            ret = method.invoke(this.realTask, null);\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n            throw new RuntimeException(e.getMessage());\n        }\n        \n        return ret;\n    }\n", "raw_comment": "    /**\n     * Internal support method that calls a getter in the real task.\n     *\n     * @param methodName The name of the method to call.\n     */\n", "code": "private object getter string method name object ret null try method method this real task get class get declared method method name null ret method invoke this real task null catch exception e e print stack trace throw new runtime exception e get message return ret\n", "comment": "internal support method that calls a getter in the real task\n"}
{"id": "5692486", "raw_code": "    public boolean isVerbose() {\n        return this.opts.isVerbose();\n    }\n", "raw_comment": "    /**\n     * Returns the verbose state.\n     */\n", "code": "public boolean is verbose return this opts is verbose\n", "comment": "returns the verbose state\n"}
{"id": "5692488", "raw_code": "    public void setDocdir(Path dir) {\n        this.opts.setDocDir(dir.list()[0]);\n    }\n", "raw_comment": "    /**\n     * Sets the directory the documentation should be generated in.\n     *\n     * @param dir The directory to set.\n     */\n", "code": "public void set docdir path dir this opts set doc dir dir list 0\n", "comment": "sets the directory the documentation should be generated in\n"}
{"id": "5692489", "raw_code": "    public boolean isAlt() {\n        return ((Boolean)getter(\"isAlt\")).booleanValue();\n    }\n", "raw_comment": "    /**\n     * Returns true if the alternative output is selected.\n     */\n", "code": "public boolean is alt return boolean getter is alt boolean value\n", "comment": "returns true if the alternative output is selected\n"}
{"id": "5692490", "raw_code": "    public String getDocdir() {\n        return this.opts.getDocDir();\n    }\n", "raw_comment": "    /**\n     * Returns the directory the documentation should be generated in.\n     */\n", "code": "public string get docdir return this opts get doc dir\n", "comment": "returns the directory the documentation should be generated in\n"}
{"id": "5692491", "raw_code": "    public void addFileSet(FileSet fileSet) {\n        this.fileSet = fileSet;\n    }\n", "raw_comment": "    /**\n     * Sets the FileSet of the input schema files to generate from.\n     *\n     * @param fileSet The FileSet to set.\n     */\n", "code": "public void add file set file set file set this file set file set\n", "comment": "sets the file set of the input schema files to generate from\n"}
{"id": "5692492", "raw_code": "    public void setVerbose(boolean verbose) {\n        setter(\"setVerbose\", verbose);\n    }\n", "raw_comment": "    /**\n     * Set to true to list files being generated.\n     *\n     * @param verbose true or false.\n     */\n", "code": "public void set verbose boolean verbose setter set verbose verbose\n", "comment": "set to true to list files being generated\n"}
{"id": "5692493", "raw_code": "    public FileSet getFileSet() {\n        return this.fileSet;\n    }\n", "raw_comment": "    /**\n     * Returns the current FileSet.\n     */\n", "code": "public file set get file set return this file set\n", "comment": "returns the current file set\n"}
{"id": "5692494", "raw_code": "    public boolean isVerbose() {\n        return ((Boolean)getter(\"isVerbose\")).booleanValue();\n    }\n", "raw_comment": "    /**\n     * Returns the verbose state.\n     */\n", "code": "public boolean is verbose return boolean getter is verbose boolean value\n", "comment": "returns the verbose state\n"}
{"id": "5692495", "raw_code": "    public void execute() throws BuildException {\n        if (this.fileSet != null) {\n            String[] fileStrs = this.fileSet.getDirectoryScanner(getUsedProject()).getIncludedFiles();\n            File dir = this.fileSet.getDir(getUsedProject());\n            XSDDoc doc = new XSDDoc();\n            doc.setOptions(this.opts);\n            for (int i = 0; i < fileStrs.length; i++) {\n                doc.addFile(new File(dir, fileStrs[i]));\n            }\n            try {\n                doc.generate();\n            }\n            catch (GenerateException ge) {\n                throw new BuildException(ge.getMessage());\n            }\n        }\n        else {\n            throw new BuildException(\"No <fileset ...> specified!\");\n        }\n    }\n", "raw_comment": "    /**\n     * Executes the task.\n     */\n", "code": "public void execute throws build exception if this file set null string file strs this file set get directory scanner get used project get included files file dir this file set get dir get used project xsddoc doc new xsddoc doc set options this opts for int i 0 i file strs length i doc add file new file dir file strs i try doc generate catch generate exception ge throw new build exception ge get message else throw new build exception no fileset specified\n", "comment": "executes the task\n"}
{"id": "5692496", "raw_code": "    public void setDocdir(Path dir) {\n        setter(\"setDocdir\", dir);\n    }\n", "raw_comment": "    /**\n     * Sets the directory the documentation should be generated in.\n     *\n     * @param dir The directory to set.\n     */\n", "code": "public void set docdir path dir setter set docdir dir\n", "comment": "sets the directory the documentation should be generated in\n"}
{"id": "5692497", "raw_code": "    public String getBarColor() {\n        return this.barColor;\n    }\n", "raw_comment": "    /** Getter for property barcolor.\n     * @return Value of property barcolor.\n     *\n     */\n", "code": "public string get bar color return this bar color\n", "comment": "getter for property barcolor\n"}
{"id": "5692498", "raw_code": "    public List getAttributes(String name) {\n        ArrayList ret = new ArrayList();\n        for (Iterator it = getAttributes(); it.hasNext();) {\n            XMLAttribute attr = (XMLAttribute)it.next();\n            if (attr.getName().equals(name)) {\n                ret.add(attr);\n            }\n        }\n        return (List)ret.clone();\n    }\n", "raw_comment": "    /**\n     * Returna all attributes of the specified name, but with different namespace\n     * prefixes. \n     *\n     * @param name The name to get.\n     */\n", "code": "public list get attributes string name array list ret new array list for iterator it get attributes it has next xmlattribute attr xmlattribute it next if attr get name equals name ret add attr return list ret clone\n", "comment": "returna all attributes of the specified name but with different namespace\n"}
{"id": "5692499", "raw_code": "    public void setBarColor(String barColor) {\n        this.barColor = barColor;\n    }\n", "raw_comment": "    /** Setter for property barcolor.\n     * @param barColor New value of property barcolor.\n     *\n     */\n", "code": "public void set bar color string bar color this bar color bar color\n", "comment": "setter for property barcolor\n"}
{"id": "5692500", "raw_code": "    public String getDocdir() {\n        return (String)getter(\"getDocdir\");\n    }\n", "raw_comment": "    /**\n     * Returns the directory the documentation should be generated in.\n     */\n", "code": "public string get docdir return string getter get docdir\n", "comment": "returns the directory the documentation should be generated in\n"}
{"id": "5692501", "raw_code": "    public String getBarTextColor() {\n        return this.barTextColor;\n    }\n", "raw_comment": "    /** Getter for property barTextColor.\n     * @return Value of property barTextColor.\n     *\n     */\n", "code": "public string get bar text color return this bar text color\n", "comment": "getter for property bar text color\n"}
{"id": "5692502", "raw_code": "    public void setBarTextColor(String barTextColor) {\n        this.barTextColor = barTextColor;\n    }\n", "raw_comment": "    /** Setter for property barTextColor.\n     * @param barTextColor New value of property barTextColor.\n     *\n     */\n", "code": "public void set bar text color string bar text color this bar text color bar text color\n", "comment": "setter for property bar text color\n"}
{"id": "5692503", "raw_code": "    public void addFileSet(FileSet fileSet) {\n        setter(\"addFileSet\", fileSet);\n    }\n", "raw_comment": "    /**\n     * Sets the FileSet of the input schema files to generate from.\n     *\n     * @param fileSet The FileSet to set.\n     */\n", "code": "public void add file set file set file set setter add file set file set\n", "comment": "sets the file set of the input schema files to generate from\n"}
{"id": "5692504", "raw_code": "    public String getHeaderTextColor() {\n        return this.headerTextColor;\n    }\n", "raw_comment": "    /** Getter for property headerTextColor.\n     * @return Value of property headerTextColor.\n     *\n     */\n", "code": "public string get header text color return this header text color\n", "comment": "getter for property header text color\n"}
{"id": "5692505", "raw_code": "    public void setHeaderTextColor(String headerTextColor) {\n        this.headerTextColor = headerTextColor;\n    }\n", "raw_comment": "    /** Setter for property headerTextColor.\n     * @param headerTextColor New value of property headerTextColor.\n     *\n     */\n", "code": "public void set header text color string header text color this header text color header text color\n", "comment": "setter for property header text color\n"}
{"id": "5692506", "raw_code": "    public FileSet getFileSet() {\n        return (FileSet)getter(\"getFileSet\");\n    }\n", "raw_comment": "    /**\n     * Returns the current FileSet.\n     */\n", "code": "public file set get file set return file set getter get file set\n", "comment": "returns the current file set\n"}
{"id": "5692507", "raw_code": "    public String getXsdFile() {\n        return this.xsdFile;\n    }\n", "raw_comment": "    /** Getter for property xsdFile.\n     * @return Value of property xsdFile.\n     *\n     */\n", "code": "public string get xsd file return this xsd file\n", "comment": "getter for property xsd file\n"}
{"id": "5692508", "raw_code": "    public void execute() throws BuildException {\n        setter(\"receiveParentProject\", getProject());\n        try {            \n            Method method = this.realTask.getClass().getDeclaredMethod(\"execute\", null);\n            method.invoke(this.realTask, null);\n        }\n        catch (Exception e) {\n            e.printStackTrace();\n            throw new BuildException(e.getMessage());\n        }\n    }\n", "raw_comment": "    /**\n     * Executes the task.\n     */\n", "code": "public void execute throws build exception setter receive parent project get project try method method this real task get class get declared method execute null method invoke this real task null catch exception e e print stack trace throw new build exception e get message\n", "comment": "executes the task\n"}
{"id": "5692509", "raw_code": "    public void setXsdFile(String xsdFile) {\n        this.xsdFile = xsdFile;\n    }\n", "raw_comment": "    /** Setter for property xsdFile.\n     * @param xsdFile New value of property xsdFile.\n     *\n     */\n", "code": "public void set xsd file string xsd file this xsd file xsd file\n", "comment": "setter for property xsd file\n"}
{"id": "5692510", "raw_code": "    public void generateSummary(Iterator groupsIt) {\n        writeSummaryStart(\"Groups\");\n        while (groupsIt.hasNext()) {\n            XSDGroup group = (XSDGroup)groupsIt.next();\n            writeSummaryContents(group.getName(), null, group.getDocumentation());\n        }\n        writeSummaryEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a summary section.\n     *\n     * @param groupsIt An Iterator of XSDGroup objects.\n     */\n", "code": "public void generate summary iterator groups it write summary start groups while groups it has next xsdgroup group xsdgroup groups it next write summary contents group get name null group get documentation write summary end\n", "comment": "generates a summary section\n"}
{"id": "5692511", "raw_code": "    public String getDocDir() {\n        return this.docDir;\n    }\n", "raw_comment": "    /** Getter for property docDir.\n     * @return Value of property docDir.\n     *\n     */\n", "code": "public string get doc dir return this doc dir\n", "comment": "getter for property doc dir\n"}
{"id": "5692512", "raw_code": "    public void generateDetail(Iterator groupsIt) {\n        writeDetailStart(\"Groups\");\n        while (groupsIt.hasNext()) {\n            XSDGroup group = (XSDGroup)groupsIt.next();\n            \n            generateDetail(group);\n        }\n        writeDetailEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a detail section for all groups in the specified Iterator.\n     *\n     * @param groupsIt An Iterator of XSDGroup objects.\n     */\n", "code": "public void generate detail iterator groups it write detail start groups while groups it has next xsdgroup group xsdgroup groups it next generate detail group write detail end\n", "comment": "generates a detail section for all groups in the specified iterator\n"}
{"id": "5692513", "raw_code": "    public void setDocDir(String docDir) {\n        this.docDir = docDir;\n    }\n", "raw_comment": "    /** Setter for property docDir.\n     * @param docDir New value of property docDir.\n     *\n     */\n", "code": "public void set doc dir string doc dir this doc dir doc dir\n", "comment": "setter for property doc dir\n"}
{"id": "5692514", "raw_code": "    public void generateDetail(XSDGroup group) {\n        writeDetailContentsStart(\"group\", group.getName(), group.getDocumentation());\n\n        // Treat other group and attributeGroup references as extensions.\n        ArrayList extensions = new ArrayList();\n        for (Iterator it = group.getGroupRefs(); it.hasNext();) {\n            String groupRef = (String)it.next();\n            extensions.add(groupRef);\n        }\n        for (Iterator it = group.getAttributeGroupRefs(); it.hasNext();) {\n            String attributeGroupRef = (String)it.next();\n            extensions.add(attributeGroupRef);\n        }\n        writeExtensionList(extensions.iterator());\n        \n        writeElementDetailList(group.getElementRefs());\n\n        writeDetailContentsEnd();        \n    }\n", "raw_comment": "    /**\n     * Generates detail for a specific group.\n     *\n     * @param group The group to generate detail for.\n     */\n", "code": "public void generate detail xsdgroup group write detail contents start group group get name group get documentation treat other group and attribute group references as extensions array list extensions new array list for iterator it group get group refs it has next string group ref string it next extensions add group ref for iterator it group get attribute group refs it has next string attribute group ref string it next extensions add attribute group ref write extension list extensions iterator write element detail list group get element refs write detail contents end\n", "comment": "generates detail for a specific group\n"}
{"id": "5692515", "raw_code": "    public List getAllXMLNSAttributes() {\n        ArrayList ret = new ArrayList();\n        XMLAttribute attr = null;\n        for (Iterator it = getAttributes(); it.hasNext();) {\n            attr = (XMLAttribute)it.next();\n            if (attr.getNamespace() != null && attr.getNamespace().equals(\"xmlns\")) {\n                ret.add(attr);\n            }\n        }\n        attr = getAttribute(\"xmlns\");\n        if (attr != null) {\n            ret.add(attr);\n        }\n        return (List)ret.clone();        \n    }\n", "raw_comment": "    /**\n     * Finds all xmlns:xyz and xmlns attributes.\n     */\n", "code": "public list get all xmlnsattributes array list ret new array list xmlattribute attr null for iterator it get attributes it has next attr xmlattribute it next if attr get namespace null attr get namespace equals xmlns ret add attr attr get attribute xmlns if attr null ret add attr return list ret clone\n", "comment": "finds all xmlns xyz and xmlns attributes\n"}
{"id": "5692516", "raw_code": "    public boolean validate() {\n        return this.docDir != null;\n    }\n", "raw_comment": "    /**\n     * Returns true if the minimum required options are set.\n     */\n", "code": "public boolean validate return this doc dir null\n", "comment": "returns true if the minimum required options are set\n"}
{"id": "5692517", "raw_code": "    public boolean isAlt() {\n        return this.alt;\n    }\n", "raw_comment": "    /** Getter for property alt.\n     * @return Value of property alt.\n     *\n     */\n", "code": "public boolean is alt return this alt\n", "comment": "getter for property alt\n"}
{"id": "5692518", "raw_code": "    public void setAlt(boolean alt) {\n        this.alt = alt;\n    }\n", "raw_comment": "    /** Setter for property alt.\n     * @param alt New value of property alt.\n     *\n     */\n", "code": "public void set alt boolean alt this alt alt\n", "comment": "setter for property alt\n"}
{"id": "5692519", "raw_code": "    public boolean isVerbose() {\n        return this.verbose;\n    }\n", "raw_comment": "    /** Getter for property verbose.\n     * @return Value of property verbose.\n     *\n     */\n", "code": "public boolean is verbose return this verbose\n", "comment": "getter for property verbose\n"}
{"id": "5692520", "raw_code": "    protected DocOptions getOpts() {\n        return this.opts;\n    }\n", "raw_comment": "    /**\n     * Returns the options.\n     */\n", "code": "protected doc options get opts return this opts\n", "comment": "returns the options\n"}
{"id": "5692522", "raw_code": "    public void generateSummary(Iterator groupsIt) {\n        writeSummaryStart(\"Attribute Groups\");\n        while (groupsIt.hasNext()) {\n            XSDAttributeGroup attrGroup = (XSDAttributeGroup)groupsIt.next();\n            writeSummaryContents(attrGroup.getName(), null, attrGroup.getDocumentation());\n        }\n        writeSummaryEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a summary section.\n     *\n     * @param groupsIt An Iterator of XSDAttributeGroup objects.\n     */\n", "code": "public void generate summary iterator groups it write summary start attribute groups while groups it has next xsdattribute group attr group xsdattribute group groups it next write summary contents attr group get name null attr group get documentation write summary end\n", "comment": "generates a summary section\n"}
{"id": "5692523", "raw_code": "    public void generateDetail(Iterator groupsIt) {\n        writeDetailStart(\"Attribute Groups\");\n        while (groupsIt.hasNext()) {\n            XSDAttributeGroup attrGroup = (XSDAttributeGroup)groupsIt.next();\n            \n            generateDetail(attrGroup);\n        }\n        writeDetailEnd();\n    }\n", "raw_comment": "    /**\n     * Generates a detail section for all attribute groups in the specified Iterator.\n     *\n     * @param groupsIt An Iterator of XSDAttributeGroup objects.\n     */\n", "code": "public void generate detail iterator groups it write detail start attribute groups while groups it has next xsdattribute group attr group xsdattribute group groups it next generate detail attr group write detail end\n", "comment": "generates a detail section for all attribute groups in the specified iterator\n"}
{"id": "5692524", "raw_code": "    public void generateDetail(XSDAttributeGroup attrGroup) {\n        writeDetailContentsStart(\"attributeGroup\", attrGroup.getName(), attrGroup.getDocumentation());\n\n        writeAttributeDetailList(attrGroup.getAttributes());\n\n        writeDetailContentsEnd();        \n    }\n", "raw_comment": "    /**\n     * Generates detail for a specific attribute group.\n     *\n     * @param attrGroup The attribute group to generate detail for.\n     */\n", "code": "public void generate detail xsdattribute group attr group write detail contents start attribute group attr group get name attr group get documentation write attribute detail list attr group get attributes write detail contents end\n", "comment": "generates detail for a specific attribute group\n"}
{"id": "5692525", "raw_code": "    protected PrintWriter getWriter() {\n        return this.writer;\n    }\n", "raw_comment": "    /**\n     * Returns the current PrintWriter.\n     */\n", "code": "protected print writer get writer return this writer\n", "comment": "returns the current print writer\n"}
{"id": "5692526", "raw_code": "    public XMLAttribute getAttribute(String name) {\n         return (XMLAttribute)this.attributes.get(name);\n    }\n", "raw_comment": "    /**\n     * Returns the value of a specific attribute. Null is returned if attribute does not exists.\n     * This method asumes no namespace. If the attribute do have a namespace this will not find it\n     * unless you specify namespace:name.\n     *\n     * @param name The name of the attribute to return.\n     */\n", "code": "public xmlattribute get attribute string name return xmlattribute this attributes get name\n", "comment": "returns the value of a specific attribute\n"}
{"id": "5692529", "raw_code": "    public String getAppInfo() {\n        return this.appInfo;\n    }\n", "raw_comment": "    /** \n     * Returns application specific information for this object.\n     */\n", "code": "public string get app info return this app info\n", "comment": "returns application specific information for this object\n"}
{"id": "5692530", "raw_code": "    protected void print(String str) {\n        this.writer.print(str);\n    }\n", "raw_comment": "    /**\n     * Prints a string using the current writer.\n     *\n     * @param str The string to print.\n     */\n", "code": "protected void print string str this writer print str\n", "comment": "prints a string using the current writer\n"}
{"id": "5692531", "raw_code": "    public boolean hasAppInfo() {\n        return this.appInfo != null;\n    }\n", "raw_comment": "    /**\n     * Returns true if there are any app info available.\n     */\n", "code": "public boolean has app info return this app info null\n", "comment": "returns true if there are any app info available\n"}
{"id": "5692533", "raw_code": "    public String getDocumentation() {\n        return this.documentation;\n    }\n", "raw_comment": "    /** \n     * Returns the documentation for this object.\n     */\n", "code": "public string get documentation return this documentation\n", "comment": "returns the documentation for this object\n"}
{"id": "5692534", "raw_code": "    public boolean hasDocumentation() {\n        return this.documentation != null;\n    }\n", "raw_comment": "    /**\n     * Returns true if there is any documentation available.\n     */\n", "code": "public boolean has documentation return this documentation null\n", "comment": "returns true if there is any documentation available\n"}
{"id": "5692535", "raw_code": "    protected void println(String str) {\n        this.writer.println(str);\n    }\n", "raw_comment": "    /**\n     * Prints a line plus a line feed using the current writer.\n     *\n     * @param str The string to print.\n     */\n", "code": "protected void println string str this writer println str\n", "comment": "prints a line plus a line feed using the current writer\n"}
{"id": "5692536", "raw_code": "    protected void writeAnnotation(PrintStream ps, String indent) {\n        if (this.appInfo != null || this.documentation != null) {\n            ps.println(indent + \"<\" + getNS() + \":\" + StringConstants.ANNOTATION + \">\");\n            if (this.documentation != null) {\n                ps.println(indent + indent + \"<\" + getNS() + \":\" + StringConstants.DOCUMENTATION + \">\");\n                ps.println(indent + indent + indent + this.documentation);\n                ps.println(indent + indent + \"</\" + getNS() + \":\" + StringConstants.DOCUMENTATION + \">\");\n            }\n            if (this.appInfo != null) {\n                ps.println(indent + indent + \"<\" + getNS() + \":\" + StringConstants.APPINFO + \">\");\n                ps.println(indent + indent + indent + this.appInfo);\n                ps.println(indent + indent + \"</\" + getNS() + \":\" + StringConstants.APPINFO + \">\");\n            }\n            ps.println(indent + \"</\" + getNS() + \":\" + StringConstants.ANNOTATION + \">\");\n        }\n    }        \n", "raw_comment": "    /**\n     * Writes an annotation node.\n     *\n     * @param ps The PrintStream to write to.\n     * @param indent A set of spaces for indentation.\n     */\n", "code": "protected void write annotation print stream ps string indent if this app info null this documentation null ps println indent get ns string constants annotation if this documentation null ps println indent indent get ns string constants documentation ps println indent indent indent this documentation ps println indent indent get ns string constants documentation if this app info null ps println indent indent get ns string constants appinfo ps println indent indent indent this app info ps println indent indent get ns string constants appinfo ps println indent get ns string constants annotation\n", "comment": "writes an annotation node\n"}
{"id": "5692537", "raw_code": "    public XMLAttribute getAttribute(String namespace, String name) {\n        return (XMLAttribute)this.attributes.get(namespace + \":\" + name);\n    }\n", "raw_comment": "    /**\n     * Returns the value of a specific attribute. Null is returned if attribute does not exists.\n     *\n     * @param namespace The namespace of the attribute.\n     * @param name The name of the attribute to return.\n     */\n", "code": "public xmlattribute get attribute string namespace string name return xmlattribute this attributes get namespace name\n", "comment": "returns the value of a specific attribute\n"}
{"id": "5692541", "raw_code": "    protected void writeEnd() {\n        println(\"<TABLE border='0' width='100%' cellpadding='0' cellspacing='0'><TR bgcolor='\" + this.opts.getBarColor() + \n            \"'><TD><FONT color='\" + this.opts.getBarTextColor() + \"'><B>\" + this.opts.getXsdFile() + \"</B></FONT></TD>\" +\n            \"<TD colspan='2' align='right'><FONT color='\" + this.opts.getBarTextColor() + \"'>This was generated by XOBGen, \" +\n            \"part of XOB (<a href=\\\"http://xob.sourceforge.net/\\\">http://xob.sourceforge.net</a>/)</FONT></TD></TR></TABLE>\");\n        println(\"</BODY>\");\n        println(\"</HTML>\");\n    }\n", "raw_comment": "    /**\n     * Writes the end of the HTML document.\n     */\n", "code": "protected void write end println table border 0 width 100 cellpadding 0 cellspacing 0 tr bgcolor this opts get bar color td font color this opts get bar text color b this opts get xsd file b font td td colspan 2 align right font color this opts get bar text color this was generated by xobgen part of xob a href http xob sourceforge net http xob sourceforge net a font td tr table println body println html\n", "comment": "writes the end of the html document\n"}
{"id": "5692543", "raw_code": "    public boolean hasElementRefs() {\n        return !this.elementRefs.isEmpty();\n    }\n", "raw_comment": "    /**\n     * Returns true if there are elements in the set.\n     */\n", "code": "public boolean has element refs return this element refs is empty\n", "comment": "returns true if there are elements in the set\n"}
{"id": "5692544", "raw_code": "    public void setElementValue(String value) {\n        this.value = value;\n    }\n", "raw_comment": "    /**\n     * Sets the element value.\n     *\n     * @param value The value to set.\n     */\n", "code": "public void set element value string value this value value\n", "comment": "sets the element value\n"}
{"id": "5692545", "raw_code": "    public Iterator getElementRefs() {\n        return this.elementRefs.iterator();\n    }\n", "raw_comment": "    /**\n     * Returns an Iterator of XSDElementSet.ElementRef objects.\n     */\n", "code": "public iterator get element refs return this element refs iterator\n", "comment": "returns an iterator of xsdelement set\n"}
{"id": "5692547", "raw_code": "    public XSDElementRef getNamedElementRef(String name) {\n        String tname = nsPrefixName(name);\n        for (Iterator it = getElementRefs(); it.hasNext();) {\n            XSDElementRef ref = (XSDElementRef)it.next();\n            if (ref.getName().equals(tname)) {\n                return ref;\n            }\n        }\n        return null;\n    }    \n", "raw_comment": "    /**\n     * Gets a named element reference.\n     *\n     * @param name The name of the reference to get.\n     */\n", "code": "public xsdelement ref get named element ref string name string tname ns prefix name name for iterator it get element refs it has next xsdelement ref ref xsdelement ref it next if ref get name equals tname return ref return null\n", "comment": "gets a named element reference\n"}
{"id": "5692548", "raw_code": "    public String getElementValue() {\n        return this.value;\n    }\n", "raw_comment": "    /**\n     * Returns the elements text value.\n     */\n", "code": "public string get element value return this value\n", "comment": "returns the elements text value\n"}
{"id": "5692549", "raw_code": "    private XSDAttribute getAttribute() {\n        XSDAttribute attr = getSchema().lookupAttribute(this.ref);\n        if (attr == null) {\n            throw new RuntimeException(\"This attribute reference (\" + this.ref + \") references a non existent public attribute!\");\n        }\n        return attr;\n    }\n", "raw_comment": "    /**\n     * Gets the real attribute this ref references.\n     */\n", "code": "private xsdattribute get attribute xsdattribute attr get schema lookup attribute this ref if attr null throw new runtime exception this attribute reference this ref references a non existent public attribute return attr\n", "comment": "gets the real attribute this ref references\n"}
{"id": "5692550", "raw_code": "    protected void writeSummarySection() {\n        println(\"<!--\");\n        println(\"\");\n        println(\"    S u m m a r y\");\n        println(\"\");\n        println(\"-->\");\n        println(\"\");\n        println(\"<H1>Summary</H1>\");\n    }\n", "raw_comment": "    /**\n     * Writes the summary section heading.\n     */\n", "code": "protected void write summary section println println println s u m m a r y println println println println h1 summary h1\n", "comment": "writes the summary section heading\n"}
{"id": "5692551", "raw_code": "    public int getType() {\n        return getAttribute().getType();\n    }\n", "raw_comment": "    /**\n     * Returns an XSDBaseTypes constant representing the type of this attribute.\n     */\n", "code": "public int get type return get attribute get type\n", "comment": "returns an xsdbase types constant representing the type of this attribute\n"}
{"id": "5692552", "raw_code": "    public String getTypeAsString() {\n        return getAttribute().getTypeAsString();\n    }\n", "raw_comment": "    /**\n     * Returns the type as a String.\n     */\n", "code": "public string get type as string return get attribute get type as string\n", "comment": "returns the type as a string\n"}
{"id": "5692553", "raw_code": "    public String getTypeAsJavaType() {\n        return getAttribute().getTypeAsJavaType();\n    }\n", "raw_comment": "    /**\n     * Returns the type as a Java type.\n     */\n", "code": "public string get type as java type return get attribute get type as java type\n", "comment": "returns the type as a java type\n"}
{"id": "5692554", "raw_code": "    public String getName() {\n        return getAttribute().getName();\n    }\n", "raw_comment": "    /**\n     * Returns the name of the attribute.\n     */\n", "code": "public string get name return get attribute get name\n", "comment": "returns the name of the attribute\n"}
{"id": "5692555", "raw_code": "    public boolean isOptional() {\n        return getAttribute().isOptional();\n    }\n", "raw_comment": "    /**\n     * returns true if this attribute is optional.\n     */\n", "code": "public boolean is optional return get attribute is optional\n", "comment": "returns true if this attribute is optional\n"}
{"id": "5692556", "raw_code": "    protected void writeSummaryStart(String type) {\n        println(\"<!--\");\n        println(\"\");\n        println(\"  \" + type);\n        println(\"\");\n        println(\"-->\");\n        println(\"<P>\");\n        println(\"<TABLE border='2' cellpadding='3' cellspacing='1' width='100%'>\");\n        println(\"  <TR bgcolor='\" + this.opts.getBarColor() + \"'><TD colspan='1'><FONT size='+2' color='\" + this.opts.getBarTextColor() + \n            \"'><B>\" + type + \"</B></FONT></TD></TR>\");\n        \n    }\n", "raw_comment": "    /**\n     * Writes the beginning of a summary section for a type.\n     *\n     * @param type The type this summary section is for.\n     */\n", "code": "protected void write summary start string type println println println type println println println p println table border 2 cellpadding 3 cellspacing 1 width 100 println tr bgcolor this opts get bar color td colspan 1 font size 2 color this opts get bar text color b type b font td tr\n", "comment": "writes the beginning of a summary section for a type\n"}
{"id": "5692558", "raw_code": "    public boolean hasDefaultValue() {\n        return getAttribute().hasDefaultValue();\n    }\n", "raw_comment": "    /**\n     * Returns true if this attribute has a default value.\n     */\n", "code": "public boolean has default value return get attribute has default value\n", "comment": "returns true if this attribute has a default value\n"}
{"id": "5692559", "raw_code": "    public String getDefaultValue() {\n        return getAttribute().getDefaultValue();\n    }\n", "raw_comment": "    /**\n     * Returns the default value of this attribute. This returns null\n     * if hasDefaultValue() returns false!\n     */\n", "code": "public string get default value return get attribute get default value\n", "comment": "returns the default value of this attribute\n"}
{"id": "5692560", "raw_code": "    private void writeSummaryContentsComment(String comment) {\n        if (comment == null) {\n            return;\n        }\n        StringTokenizer token = new StringTokenizer(comment, \".\");\n        String firstLine = token.nextToken() + \".\";\n        println(\"<UL>\");\n        println(toHTMLDoc(firstLine));\n        println(\"</UL>\");\n    }\n", "raw_comment": "    /**\n     * Writes a summary contents comment.\n     *\n     * @param comment The comment to write.\n     */\n", "code": "private void write summary contents comment string comment if comment null return string tokenizer token new string tokenizer comment string first line token next token println ul println to htmldoc first line println ul\n", "comment": "writes a summary contents comment\n"}
{"id": "5692561", "raw_code": "    public void postParse() {\n        xob.xsdparser.XSDComplexType complexType = getComplexType();\n        if (complexType != null) {\n            if (complexType.extendsSimpleType()) {\n                this.publicType = (String)complexType.getExtensions().next();\n                //this.privateType = null;\n            }\n        }\n        \n        if (this.publicType != null) {\n            resolvePublicType();\n        }\n    }\n", "raw_comment": "    /**\n     * Do some things we couldn't do before the whole schema was parsed.\n     */\n", "code": "public void post parse xob xsdparser xsdcomplex type complex type get complex type if complex type null if complex type extends simple type this public type string complex type get extensions next this private type null if this public type null resolve public type\n", "comment": "do some things we couldnt do before the whole schema was parsed\n"}
{"id": "5692564", "raw_code": "    protected void writeSummaryContents(String name, String type, String docs) {\n        println(\"  <TR>\");\n        println(\"    <TD>\");\n        println(\"      <B>\");\n        if (type != null) {\n            String typeHTML = type;\n            if (!type.startsWith(\"(\") && !this.opts.isAlt()) {\n                typeHTML = \"<A href='#\" + type + \"'>\" + type + \"</A>\";\n            }\n            println(\"        <A href='#\" + name + \"'>\" + name + \"</A> : \" + typeHTML);\n        }\n        else {\n            println(\"        <A href='#\" + name + \"'>\" + name + \"</A>\");            \n        }\n        println(\"      </B>\");     \n        if (docs != null) {\n            writeSummaryContentsComment(docs);\n        }\n    }\n", "raw_comment": "    /**\n     * Writes the summary contents for a section entry. This is called several times\n     * between a writeSummaryStart() and a writeSummaryEnd().\n     *\n     * @param name The name of the sumarized element.\n     * @param type The type of the sumarized element.\n     * @param docs Any documentation for the sumarized element. Can be null.\n     */\n", "code": "protected void write summary contents string name string type string docs println tr println td println b if type null string type html type if type starts with this opts is alt type html a href type type a println a href name name a type html else println a href name name a println b if docs null write summary contents comment docs\n", "comment": "writes the summary contents for a section entry\n"}
{"id": "5692565", "raw_code": "    private void resolvePublicType() {\n        XSDSimpleType simpleType = getSchema().lookupSimpleType(this.publicType);\n        while (simpleType != null) {\n            String extendsString = simpleType.getExtendsAsString();\n            if (extendsString != null) {\n                this.publicType = extendsString;\n            }\n            else {\n                break;\n            }\n            simpleType = getSchema().lookupSimpleType(this.publicType);\n        }        \n    }\n", "raw_comment": "    /**\n     * This makes sure that if the public type references a public simple type\n     * it is converted to the basic type the simple type extends.\n     */\n", "code": "private void resolve public type xsdsimple type simple type get schema lookup simple type this public type while simple type null string extends string simple type get extends as string if extends string null this public type extends string else break simple type get schema lookup simple type this public type\n", "comment": "this makes sure that if the public type references a public simple type\n"}
{"id": "5692566", "raw_code": "    public String toString() {\n        String strValue = null;\n        try {\n            StringWriter sw = new StringWriter();\n            PrintWriter pw = new PrintWriter(sw);\n            writeElement(pw, \"\");\n            pw.close();\n            strValue = sw.toString();\n        }\n        catch (Exception e) {\n            System.out.println(\"Element name:\" + getName());\n            e.printStackTrace();\n            strValue = \"Failed to convert this XMLElement to a String! [\" + e.getMessage() + \"]\";\n        }\n        \n        return strValue;\n    }    \n", "raw_comment": "    /**\n     * Returns a String representation of this object.\n     */\n", "code": "public string to string string str value null try string writer sw new string writer print writer pw new print writer sw write element pw pw close str value sw to string catch exception e system out println element name get name e print stack trace str value failed to convert this xmlelement to a string e get message return str value\n", "comment": "returns a string representation of this object\n"}
{"id": "5692567", "raw_code": "    public boolean hasPublicType() {\n        return this.publicType != null;\n    }\n", "raw_comment": "    /**\n     * Returns true if the element has a public type.\n     * This is mutually exclusive with hasPrivateType(). Both\n     * cannot be true.\n     */\n", "code": "public boolean has public type return this public type null\n", "comment": "returns true if the element has a public type\n"}
{"id": "5692568", "raw_code": "    protected void writeSummaryEnd() {\n        println(\"</TABLE>\");\n        println(\"</P>\"); \n    }\n", "raw_comment": "    /**\n     * Writes the end of a summary section.\n     */\n", "code": "protected void write summary end println table println p\n", "comment": "writes the end of a summary section\n"}
{"id": "5692569", "raw_code": "    public boolean hasBasicXSDType() {\n        if (this.publicType != null) {\n            return XSDBaseTypes.isBasicType(this.publicType);\n        }\n        return false;\n    }\n", "raw_comment": "    /**\n     * Returns true if the type is public and an XSD basic type.\n     */\n", "code": "public boolean has basic xsdtype if this public type null return xsdbase types is basic type this public type return false\n", "comment": "returns true if the type is public and an xsd basic type\n"}
{"id": "5692571", "raw_code": "    public String getTypeAsString() {\n        String typeString = null;\n        if (this.publicType != null) {\n            typeString = this.publicType;\n        }                \n        return typeString;\n    }\n", "raw_comment": "    /**\n     * If hasPublicType() returns true this returns the name as a String.\n     * If hasPublicType() returns false this returns null.\n     */\n", "code": "public string get type as string string type string null if this public type null type string this public type return type string\n", "comment": "if has public type returns true this returns the name as a string\n"}
{"id": "5692572", "raw_code": "    protected void writeDetailsSection() {\n        println(\"<!--\");\n        println(\"\");\n        println(\"    D e t a i l s\");\n        println(\"\");\n        println(\"-->\");\n        println(\"\");\n        println(\"<H1>Details</H1>\");\n    }\n", "raw_comment": "    /**\n     * Writes a heading for the details sections.\n     */\n", "code": "protected void write details section println println println d e t a i l s println println println println h1 details h1\n", "comment": "writes a heading for the details sections\n"}
{"id": "5692573", "raw_code": "    public String getValidatedType() {\n        String typeString = null;\n        if (this.publicType != null) {\n            int iType = XSDBaseTypes.xsd2XSDBaseType(this.publicType);\n            if (iType != XSDBaseTypes.NONE) {\n                typeString = XSDBaseTypes.baseType2String(iType);\n            }\n            else {\n                XSDComplexType type = (XSDComplexType)getSchema().lookupComplexType(this.publicType);\n                if (type != null) {\n                    typeString = type.getName();\n                }\n                else {\n                    throw new RuntimeException(\"XOB: Type \\\"\" + this.publicType + \"\\\" is neither a basic type nor a named complexType!\");\n                }\n            }\n        }      \n        \n        return typeString;\n    }\n", "raw_comment": "    /**\n     * If hasPublicType() returns true this returns the type name.\n     * If hasPublicType() returns false this returns null.\n     *\n     * @exception RuntimeException if the type is neither a basic nor a complext type!\n     */\n", "code": "public string get validated type string type string null if this public type null int i type xsdbase types xsd2 xsdbase type this public type if i type xsdbase types none type string xsdbase types base type2 string i type else xsdcomplex type type xsdcomplex type get schema lookup complex type this public type if type null type string type get name else throw new runtime exception xob type this public type is neither a basic type nor a named complex type return type string\n", "comment": "if has public type returns true this returns the type name\n"}
{"id": "5692574", "raw_code": "    private void callPostParse(Iterator it) {\n        while (it.hasNext()) {\n            Object obj = it.next();\n            if (obj instanceof XSDObject) {\n                ((XSDObject)obj).postParse();\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Calls the postParse() method on all XSDObject objects in the iterator.\n     *\n     * @param it The iterator to scan for XSDObject objects.\n     */\n", "code": "private void call post parse iterator it while it has next object obj it next if obj instanceof xsdobject xsdobject obj post parse\n", "comment": "calls the post parse method on all xsdobject objects in the iterator\n"}
{"id": "5692576", "raw_code": "    public void registerElement(XSDElement element) {\n        this.elements.put(nsPrefixName(element.getName()), element);\n    }\n", "raw_comment": "    /**\n     * Registers a new named XSDElement.\n     *\n     * @param element The XSDElement to register.\n     */\n", "code": "public void register element xsdelement element this elements put ns prefix name element get name element\n", "comment": "registers a new named xsdelement\n"}
{"id": "5692577", "raw_code": "    public boolean hasPrivateType() {\n        //return this.privateType != null;\n        return this.publicType == null;\n    }\n", "raw_comment": "    /**\n     * Returns true if this element has a private type.\n     * This is mutually exclusive with hasPublicType(). Both \n     * cannot be true.\n     */\n", "code": "public boolean has private type return this private type null return this public type null\n", "comment": "returns true if this element has a private type\n"}
{"id": "5692578", "raw_code": "    protected void writeDetailStart(String type) {\n        println(\"<!--\");\n        println(\"\");\n        println(\"    \" + type);\n        println(\"\");\n        println(\"-->\");\n        println(\"<TABLE border='0' width='100%'><TR bgcolor='\" + this.opts.getBarColor() + \"'><TD colspan='1'><FONT size='+2' color='\" +\n            this.opts.getBarTextColor() + \"'><B>\" + type + \"</B></FONT></TD></TR></TABLE>\");\n        println(\"<TABLE border='0' width='100%'>\");\n    }\n", "raw_comment": "    /**\n     * Writes the start of a detail section.\n     * <p>\n     * The structure basically looks like this:\n     * <pre>\n     * writeDetailStart()\n     *   writeDetailContentsStart()\n     *     writeExtensionList()\n     *     writeAttributeDetailList()\n     *     writeElementDetailList()\n     *   writeDetailContentsEnd()\n     *   writeDetailContentsStart()\n     *     ...\n     *   writeDetailContentEnd()\n     *   ...\n     * writeDetailEnd()\n     *\n     * @param type The type of element the section covers. Element, ComplexType, etc.\n     */\n", "code": "protected void write detail start string type println println println type println println println table border 0 width 100 tr bgcolor this opts get bar color td colspan 1 font size 2 color this opts get bar text color b type b font td tr table println table border 0 width 100\n", "comment": "writes the start of a detail section\n"}
{"id": "5692580", "raw_code": "    protected String getNS() {\n        return this.schema.getNSAlias();\n    }\n", "raw_comment": "    /**\n     * Gets the namespace of the object.\n     */\n", "code": "protected string get ns return this schema get nsalias\n", "comment": "gets the namespace of the object\n"}
{"id": "5692581", "raw_code": "    public void setSchema(XSDSchema schema) {\n        this.schema = schema;\n    }\n", "raw_comment": "    /**\n     * Sets the schema object this object belongs to.\n     *\n     * @param schema the XSDSchema object to set.\n     */\n", "code": "public void set schema xsdschema schema this schema schema\n", "comment": "sets the schema object this object belongs to\n"}
{"id": "5692582", "raw_code": "    public XSDSchema getSchema() {\n        return this.schema;\n    }\n", "raw_comment": "    /**\n     * Returns the schema that this object belongs to.\n     */\n", "code": "public xsdschema get schema return this schema\n", "comment": "returns the schema that this object belongs to\n"}
{"id": "5692583", "raw_code": "    public void registerComplexType(XSDComplexType type) {\n        this.complexTypes.put(nsPrefixName(type.getName()), type);\n    }\n", "raw_comment": "    /**\n     * Registers a new named XSDComplexType.\n     *\n     * @param type The XSDComplexType to register.\n     */\n", "code": "public void register complex type xsdcomplex type type this complex types put ns prefix name type get name type\n", "comment": "registers a new named xsdcomplex type\n"}
{"id": "5692584", "raw_code": "    protected boolean isPrimitiveSchemaType(String type) {\n        return type.startsWith(this.schema.getNSAlias() + \":\");\n    }\n", "raw_comment": "    /**\n     * Validates if the specified type is a primitive schema type.\n     */\n", "code": "protected boolean is primitive schema type string type return type starts with this schema get nsalias\n", "comment": "validates if the specified type is a primitive schema type\n"}
{"id": "5692585", "raw_code": "    protected void writeDetailEnd() {\n        println(\"</TABLE>\");\n    }\n", "raw_comment": "    /**\n     * Writes the end of a detail section.\n     */\n", "code": "protected void write detail end println table\n", "comment": "writes the end of a detail section\n"}
{"id": "5692586", "raw_code": "    protected String getQualifiedName(String unqualifiedName) {\n        return this.schema.getNSAlias() + \":\" + unqualifiedName;\n    }\n", "raw_comment": "    /**\n     * Qualifies a name with the namespace alias used by the schema file.\n     *\n     * @param unqualifiedName The name to qualify.\n     */\n", "code": "protected string get qualified name string unqualified name return this schema get nsalias unqualified name\n", "comment": "qualifies a name with the namespace alias used by the schema file\n"}
{"id": "5692587", "raw_code": "    public Iterator getComplexTypes() {\n        return new EntrySetIterator(this.complexTypes.entrySet().iterator());\n    }\n", "raw_comment": "    /** \n     * Returns all public/named complex types as XSDComplexType objects. \n     */\n", "code": "public iterator get complex types return new entry set iterator this complex types entry set iterator\n", "comment": "returns all public named complex types as xsdcomplex type objects\n"}
{"id": "5692588", "raw_code": "    protected String nsPrefixName(String name) {\n        String prefixedName = null;\n        int i = name.indexOf(':');\n        if (i > 0) {\n            prefixedName = name;\n        }\n        else {\n            prefixedName = getNS() + \":\" + name;\n        }\n        \n        return prefixedName;\n    }\n", "raw_comment": "    /**\n     * This prefixes the name with the namespace alias for the\n     * schema file if the name isn't already prefixed.\n     *\n     * @param name The name to prefix.\n     */\n", "code": "protected string ns prefix name string name string prefixed name null int i name index of if i 0 prefixed name name else prefixed name get ns name return prefixed name\n", "comment": "this prefixes the name with the namespace alias for the\n"}
{"id": "5692589", "raw_code": "    protected String nsUnprefixName(String name) {\n        String unprefixedName = name;\n        int i = name.indexOf(\":\");\n        if (i > 0) {\n            unprefixedName = name.substring(i + 1);\n        }\n        return unprefixedName;\n    }\n", "raw_comment": "    /**\n     * Removes any namespace prefix from the name.\n     *\n     * @param name The name to unprefix.\n     */\n", "code": "protected string ns unprefix name string name string unprefixed name name int i name index of if i 0 unprefixed name name substring i 1 return unprefixed name\n", "comment": "removes any namespace prefix from the name\n"}
{"id": "5692590", "raw_code": "    public void registerSimpleType(XSDSimpleType type) {\n        this.simpleTypes.put(nsPrefixName(type.getName()), type);\n    }\n", "raw_comment": "    /**\n     * Registers a new named XSDSimpleType.\n     *\n     * @param type The XSDSimpleType to register.\n     */\n", "code": "public void register simple type xsdsimple type type this simple types put ns prefix name type get name type\n", "comment": "registers a new named xsdsimple type\n"}
{"id": "5692591", "raw_code": "    public XMLElement findElement(String elementName, XMLElement searchElement) {\n        XMLElement found = null;\n        \n        List elementList = searchElement.getChildElements(elementName);\n        if (elementList != null && elementList.size() > 0) {\n            found = (XMLElement)elementList.get(0);\n        }\n        else {\n            // If it is not a direct child, then check the children of children.\n            for (Iterator it = searchElement.getAllChildElements().iterator(); it.hasNext();) {\n                XMLElement childElement = (XMLElement)it.next();\n                found = findElement(elementName, childElement);\n                if (found != null) {\n                    break;\n                }\n            }\n        }\n        \n        return found;\n    }\n", "raw_comment": "    /**\n     * This searches for a child element with the specified name in the specified\n     * element and all its children.\n     *\n     * @param elementName The name of the element to find.\n     * @param searchElement The element to search in.\n     */\n", "code": "public xmlelement find element string element name xmlelement search element xmlelement found null list element list search element get child elements element name if element list null element list size 0 found xmlelement element list get 0 else if it is not a direct child then check the children of children for iterator it search element get all child elements iterator it has next xmlelement child element xmlelement it next found find element element name child element if found null break return found\n", "comment": "this searches for a child element with the specified name in the specified\n"}
{"id": "5692592", "raw_code": "    protected void writeDetailContentsStart(String type, String objName, String docs) {\n        if (objName != null) {\n            println(\"    <TR bgcolor='\" + this.opts.getBarColor() + \"'><TD><A name='\" + objName + \"'><FONT color='\" +\n                this.opts.getBarTextColor() + \"'>\" + objName + \"</FONT></TD></TR>\");\n        }\n        println(\"    <TR>\");\n        println(\"        <TD>\");\n        if (objName != null) {\n            println(\"            \" + type + \" <B>\" + objName + \"</B>\");\n            println(\"            <P/>\");\n        }\n        if (docs != null) {\n            println(\"            <UL>\");\n            println(\"            \" + toHTMLDoc(docs));\n            println(\"            </UL>\");\n            println(\"            <P/>\");\n        }\n    }\n", "raw_comment": "    /**\n     * Writes the start of a detail contents entry. \n     *\n     * @param type The type of detail being written.\n     * @param objName The name of the object being detailed.\n     * @param docs Any documentation for the object or null otherwise.\n     */\n", "code": "protected void write detail contents start string type string obj name string docs if obj name null println tr bgcolor this opts get bar color td a name obj name font color this opts get bar text color obj name font td tr println tr println td if obj name null println type b obj name b println p if docs null println ul println to htmldoc docs println ul println p\n", "comment": "writes the start of a detail contents entry\n"}
{"id": "5692593", "raw_code": "    public XMLElement findElementLocal(String elementName, XMLElement searchElement) {\n        XMLElement found = null;\n        \n        List elementList = searchElement.getChildElements(elementName);\n        if (elementList != null && elementList.size() > 0) {\n            found = (XMLElement)elementList.get(0);\n        }        \n        \n        return found;\n    }\n", "raw_comment": "    /**\n     * This searches for a child element with the specified name in the specified\n     * element and only in the specified element.\n     *\n     * @param elementName The name of the element to find.\n     * @param searchElement The element to search in.\n     */\n", "code": "public xmlelement find element local string element name xmlelement search element xmlelement found null list element list search element get child elements element name if element list null element list size 0 found xmlelement element list get 0 return found\n", "comment": "this searches for a child element with the specified name in the specified\n"}
{"id": "5692594", "raw_code": "    public XSDSimpleType lookupSimpleType(String name) {\n        return (XSDSimpleType)this.simpleTypes.get(nsPrefixName(name));\n    }\n", "raw_comment": "    /**\n     * Returns a registered XSDSimpleType.\n     *\n     * @param name The name of the XSDSimpleType to lookup.\n     */\n", "code": "public xsdsimple type lookup simple type string name return xsdsimple type this simple types get ns prefix name name\n", "comment": "returns a registered xsdsimple type\n"}
{"id": "5692598", "raw_code": "    public Iterator getSimpleTypes() {\n        return new EntrySetIterator(this.simpleTypes.entrySet().iterator());\n    }\n", "raw_comment": "    /**\n     * Returns all public/named simple types.\n     */\n", "code": "public iterator get simple types return new entry set iterator this simple types entry set iterator\n", "comment": "returns all public named simple types\n"}
{"id": "5692599", "raw_code": "    protected void writeDetailContentsEnd() {\n        println(\"        </TD>\");\n        println(\"    </TR>\");\n        println(\"    <TR><TD></TD></TR>\");\n    }\n", "raw_comment": "    /**\n     * Writes the end of a detail contents entry.\n     */\n", "code": "protected void write detail contents end println td println tr println tr td td tr\n", "comment": "writes the end of a detail contents entry\n"}
{"id": "5692600", "raw_code": "    public Iterator getAttributes() {\n        return this.attributes.getAttributes();\n    }\n", "raw_comment": "    /**\n     * Returns the attributes defined by this attribute group as XSDAttribute objects.\n     */\n", "code": "public iterator get attributes return this attributes get attributes\n", "comment": "returns the attributes defined by this attribute group as xsdattribute objects\n"}
{"id": "5692602", "raw_code": "    public Iterator getElementRefs() {\n        return this.elements.getElementRefs();\n    }\n", "raw_comment": "    /**\n     * Returns the elements defined by this group. This will always return something\n     * since there is no point in defining a group with no elements in it! XSDElementRef\n     * objects are returned.\n     */\n", "code": "public iterator get element refs return this elements get element refs\n", "comment": "returns the elements defined by this group\n"}
{"id": "5692603", "raw_code": "    public void registerGroup(XSDGroup group) {\n        this.groups.put(nsPrefixName(group.getName()), group);\n    }\n", "raw_comment": "    /**\n     * Registers a new named XSDGroup.\n     *\n     * @param group The XSDGroup to register.\n     */\n", "code": "public void register group xsdgroup group this groups put ns prefix name group get name group\n", "comment": "registers a new named xsdgroup\n"}
{"id": "5692604", "raw_code": "    public Iterator getGroupRefs() {\n        return this.elements.getGroupRefs().iterator();\n    }\n", "raw_comment": "    /**\n     * Returns the groups defined by this group as String objects.\n     */\n", "code": "public iterator get group refs return this elements get group refs iterator\n", "comment": "returns the groups defined by this group as string objects\n"}
{"id": "5692605", "raw_code": "    public Iterator getAttributeGroupRefs() {\n        return this.elements.getAttributeGroupRefs().iterator();\n    }    \n", "raw_comment": "    /**\n     * Returns the attributegroups defined by this group as String objects.\n     */\n", "code": "public iterator get attribute group refs return this elements get attribute group refs iterator\n", "comment": "returns the attributegroups defined by this group as string objects\n"}
{"id": "5692606", "raw_code": "    protected void writeAttributeDetailList(Iterator attrIt) {\n        println(\"            <DL>\");\n        println(\"                <DT><B>Attributes</B></DT>\");\n        println(\"                <DD>\");\n        println(\"                <TABLE border='0'>\");\n        while (attrIt.hasNext()) {\n            XSDAttribute attr = (XSDAttribute)attrIt.next();\n            println(\"                    <TR>\");\n            println(\"                        <TD>\");\n            print(\"                        \" + attr.getName() + \" : \" + attr.getBasicTypeAsString());\n            if (attr.hasDefaultValue()) {\n                print(\" = \\\"\" + attr.getDefaultValue() + \"\\\"\");\n            }\n            if (attr.isOptional()) {\n                println(\" - Optional\");\n            }\n            else {\n                println(\" - Required\");\n            }\n            println(\"                        </TD>\");\n            println(\"                        <TD>\");\n            if (attr.hasDocumentation()) {\n                println(\"                        \" + toHTMLDoc(attr.getDocumentation()));\n            }\n            println(\"                        </TD>\");\n            println(\"                    </TR>\");\n        }\n        println(\"                </TABLE>\");\n        println(\"                </DD>\");\n        println(\"            </DL>\");\n    }\n", "raw_comment": "    /**\n     * Writes a list of attributes as part of a detail.\n     *\n     * @param attrIt An Iterator or XSDAttribute objects.\n     * @see XSDAttribute\n     */\n", "code": "protected void write attribute detail list iterator attr it println dl println dt b attributes b dt println dd println table border 0 while attr it has next xsdattribute attr xsdattribute attr it next println tr println td print attr get name attr get basic type as string if attr has default value print attr get default value if attr is optional println optional else println required println td println td if attr has documentation println to htmldoc attr get documentation println td println tr println table println dd println dl\n", "comment": "writes a list of attributes as part of a detail\n"}
{"id": "5692607", "raw_code": "    public Iterator getGroups() {\n        return new EntrySetIterator(this.groups.entrySet().iterator());\n    }\n", "raw_comment": "    /** \n     * Returns all groups as XSDGroup objects. \n     */\n", "code": "public iterator get groups return new entry set iterator this groups entry set iterator\n", "comment": "returns all groups as xsdgroup objects\n"}
{"id": "5692608", "raw_code": "    public void registerAttributeGroup(XSDAttributeGroup attributeGroup) {\n        this.attributeGroups.put(nsPrefixName(attributeGroup.getName()), attributeGroup);\n    }\n", "raw_comment": "    /**\n     * Registers a new named XSDAttributeGroup.\n     *\n     * @param attributeGroup The XSDAttributeGroup to register.\n     */\n", "code": "public void register attribute group xsdattribute group attribute group this attribute groups put ns prefix name attribute group get name attribute group\n", "comment": "registers a new named xsdattribute group\n"}
{"id": "5692610", "raw_code": "    public Iterator getAttributeGroups() {\n        return new EntrySetIterator(this.attributeGroups.entrySet().iterator());        \n    }\n", "raw_comment": "    /** \n     * Returns all attribute groups as XSDAttrbiuteGroup objects. \n     */\n", "code": "public iterator get attribute groups return new entry set iterator this attribute groups entry set iterator\n", "comment": "returns all attribute groups as xsdattrbiute group objects\n"}
{"id": "5692612", "raw_code": "    public HashMap getMap() {\n        return this.xsdToXOBMap;\n    }\n", "raw_comment": "    /**\n     * Returns the loaded map.\n     */\n", "code": "public hash map get map return this xsd to xobmap\n", "comment": "returns the loaded map\n"}
{"id": "5692614", "raw_code": "    public void registerAttribute(XSDAttribute attribute) {\n        this.attributes.put(nsPrefixName(attribute.getName()), attribute);\n    }\n", "raw_comment": "    /**\n     * Registers a public attribute definition.\n     *\n     * @param attribute The attribute to register.\n     */\n", "code": "public void register attribute xsdattribute attribute this attributes put ns prefix name attribute get name attribute\n", "comment": "registers a public attribute definition\n"}
{"id": "5692615", "raw_code": "         public void validate() throws XOBParseException {\n             if (this.failed)\n                 throw new XOBParseException(this.faults.toString());\n         }\n", "raw_comment": "         /**\n          * Throws an Exception if there were any errors.\n          */\n", "code": "public void validate throws xobparse exception if this failed throw new xobparse exception this faults to string\n", "comment": "throws an exception if there were any errors\n"}
{"id": "5692616", "raw_code": "    public XSDAttribute lookupAttribute(String name) {\n        return (XSDAttribute)this.attributes.get(nsPrefixName(name));\n    }\n", "raw_comment": "    /**\n     * Returns a registered XSDAttribute.\n     *\n     * @param name The name of the attribute to get.\n     */\n", "code": "public xsdattribute lookup attribute string name return xsdattribute this attributes get ns prefix name name\n", "comment": "returns a registered xsdattribute\n"}
{"id": "5692617", "raw_code": "         public void error(SAXParseException exception) throws SAXException {\n             this.failed = true;\n             this.faults.append(\"Error: \" + exception.getLineNumber() + \":\" + exception.getColumnNumber());\n             this.faults.append(\" - \" + exception.getMessage());\n             this.faults.append(\"\\n\");\n         }\n", "raw_comment": "         /** Receive notification of a recoverable error.\n          *\n          * <p>This corresponds to the definition of \"error\" in section 1.2\n          * of the W3C XML 1.0 Recommendation.  For example, a validating\n          * parser would use this callback to report the violation of a\n          * validity constraint.  The default behaviour is to take no\n          * action.</p>\n          *\n          * <p>The SAX parser must continue to provide normal parsing events\n          * after invoking this method: it should still be possible for the\n          * application to process the document through to the end.  If the\n          * application cannot do so, then the parser should report a fatal\n          * error even if the XML 1.0 recommendation does not require it to\n          * do so.</p>\n          *\n          * <p>Filters may use this method to report other, non-XML errors\n          * as well.</p>\n          *\n          * @param exception The error information encapsulated in a\n          *                  SAX parse exception.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @see org.xml.sax.SAXParseException\n          *\n          */\n", "code": "public void error saxparse exception exception throws saxexception this failed true this faults append error exception get line number exception get column number this faults append exception get message this faults append n\n", "comment": "receive notification of a recoverable error\n"}
{"id": "5692618", "raw_code": "    protected void writeExtensionList(Iterator extensionsIt) {\n        println(\"            <DL>\");\n        println(\"                <DT><B>Extends</B></DT>\");\n        println(\"                <DD>\");\n        while (extensionsIt.hasNext()) {\n            String extension = (String)extensionsIt.next();\n            println(\"                        <A href='#\" + extension + \"'>\" + extension + \"</A><BR>\");\n        }\n        println(\"                </DD>\");\n        println(\"            </DL>\");        \n    }\n", "raw_comment": "    /**\n     * Writes a list of element references as part of a detail.\n     *\n     * @param extensionsIt An Iterator of String objects containing the names of extended types.\n     */\n", "code": "protected void write extension list iterator extensions it println dl println dt b extends b dt println dd while extensions it has next string extension string extensions it next println a href extension extension a br println dd println dl\n", "comment": "writes a list of element references as part of a detail\n"}
{"id": "5692619", "raw_code": "         public void fatalError(SAXParseException exception) throws SAXException {\n             this.failed = true;\n             this.faults.append(\"FatalError: \" + exception.getLineNumber() + \":\" + exception.getColumnNumber());\n             this.faults.append(\" - \" + exception.getMessage());\n             this.faults.append(\"\\n\");\n         }\n", "raw_comment": "         /** Receive notification of a non-recoverable error.\n          *\n          * <p>This corresponds to the definition of \"fatal error\" in\n          * section 1.2 of the W3C XML 1.0 Recommendation.  For example, a\n          * parser would use this callback to report the violation of a\n          * well-formedness constraint.</p>\n          *\n          * <p>The application must assume that the document is unusable\n          * after the parser has invoked this method, and should continue\n          * (if at all) only for the sake of collecting addition error\n          * messages: in fact, SAX parsers are free to stop reporting any\n          * other events once this method has been invoked.</p>\n          *\n          * @param exception The error information encapsulated in a\n          *                  SAX parse exception.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @see org.xml.sax.SAXParseException\n          *\n          */\n", "code": "public void fatal error saxparse exception exception throws saxexception this failed true this faults append fatal error exception get line number exception get column number this faults append exception get message this faults append n\n", "comment": "receive notification of a non recoverable error\n"}
{"id": "5692620", "raw_code": "    public boolean isQualified() {\n        return this.qualified;\n    }\n", "raw_comment": "    /**\n     * Returns true if the schema requires xml files to be namespace qualified.\n     */\n", "code": "public boolean is qualified return this qualified\n", "comment": "returns true if the schema requires xml files to be namespace qualified\n"}
{"id": "5692621", "raw_code": "         public void warning(SAXParseException exception) throws SAXException {\n             System.out.print(\"FatalError: \" + exception.getLineNumber() + \":\" + exception.getColumnNumber());\n             System.out.println(\" - \" + exception.getMessage());\n         }\n", "raw_comment": "         /** Receive notification of a warning.\n          *\n          * <p>SAX parsers will use this method to report conditions that\n          * are not errors or fatal errors as defined by the XML 1.0\n          * recommendation.  The default behaviour is to take no action.</p>\n          *\n          * <p>The SAX parser must continue to provide normal parsing events\n          * after invoking this method: it should still be possible for the\n          * application to process the document through to the end.</p>\n          *\n          * <p>Filters may use this method to report other, non-XML warnings\n          * as well.</p>\n          *\n          * @param exception The warning information encapsulated in a\n          *                  SAX parse exception.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @see org.xml.sax.SAXParseException\n          *\n          */\n", "code": "public void warning saxparse exception exception throws saxexception system out print fatal error exception get line number exception get column number system out println exception get message\n", "comment": "receive notification of a warning\n"}
{"id": "5692622", "raw_code": "    public String getTargetNamespace() {\n        return this.targetNamespace;\n    }\n", "raw_comment": "    /**\n     * Returns the target namespace.\n     */\n", "code": "public string get target namespace return this target namespace\n", "comment": "returns the target namespace\n"}
{"id": "5692624", "raw_code": "    public Object findNamedObject(String name) {\n        Object obj = null;\n        obj = elements.get(name);\n        if (obj != null) {\n            return obj;\n        }\n        obj = complexTypes.get(name);\n        if (obj != null) {\n            return obj;\n        }\n        obj = simpleTypes.get(name);\n        if (obj != null) {\n            return obj;\n        }\n        obj = groups.get(name);\n        if (obj != null) {\n            return obj;\n        }\n        obj = attributeGroups.get(name);\n        if (obj != null) {\n            return obj;\n        }\n        \n        return null;\n    }    \n", "raw_comment": "    /**\n     * Returns the named object if any, null otherwise.\n     *\n     * @param name The name of the object to find.\n     */\n", "code": "public object find named object string name object obj null obj elements get name if obj null return obj obj complex types get name if obj null return obj obj simple types get name if obj null return obj obj groups get name if obj null return obj obj attribute groups get name if obj null return obj return null\n", "comment": "returns the named object if any null otherwise\n"}
{"id": "5692625", "raw_code": "    public File getHome() {\n        return this.xobHome;\n    }\n", "raw_comment": "    /**\n     * Figures out the installation catalog when run through a jar. \n     * Figures out the source catalog when run in a non jar classpath (development).\n     */\n", "code": "public file get home return this xob home\n", "comment": "figures out the installation catalog when run through a jar\n"}
{"id": "5692626", "raw_code": "    public void addZipFile(File zipFile) throws IOException {\n        if (classpathMap.get(zipFile) == null) {\n            ClassPathEntry cpe = new ZipFileClassPathEntry(zipFile);\n            classpathMap.put(zipFile, cpe);\n            classpath.add(cpe);\n        }\n    }\n", "raw_comment": "    /**\n     * Adds a zip file to the classpath of this classloader.\n     */\n", "code": "public void add zip file file zip file throws ioexception if classpath map get zip file null class path entry cpe new zip file class path entry zip file classpath map put zip file cpe classpath add cpe\n", "comment": "adds a zip file to the classpath of this classloader\n"}
{"id": "5692627", "raw_code": "    public InputStream openFile(String file) throws IOException {\n        return new FileInputStream(new File(getHome(), file));\n    }\n", "raw_comment": "    /**\n     * Opens an input stream relative to the installation catalog.\n     *\n     * @param file The XOB installation catalog relative path to the file to open.\n     */\n", "code": "public input stream open file string file throws ioexception return new file input stream new file get home file\n", "comment": "opens an input stream relative to the installation catalog\n"}
{"id": "5692629", "raw_code": "        public boolean hasNext() {\n            return this.mapEntryIterator.hasNext();\n        }\n", "raw_comment": "        /** Returns <tt>true</tt> if the iteration has more elements. (In other\n         * words, returns <tt>true</tt> if <tt>next</tt> would return an element\n         * rather than throwing an exception.)\n         *\n         * @return <tt>true</tt> if the iterator has more elements.\n         *\n         */\n", "code": "public boolean has next return this map entry iterator has next\n", "comment": "returns tt true tt if the iteration has more elements\n"}
{"id": "5692630", "raw_code": "    private String findBasicType(String type) {\n        String nsType = nsPrefixName(type);\n        if (XSDBaseTypes.isBasicType(nsType)) {\n            return type;\n        }\n        XSDSimpleType simpleType = getSchema().lookupSimpleType(nsType);\n        if (simpleType != null) {\n            nsType = simpleType.getExtendsAsString();\n            if (nsType != null) {\n                return findBasicType(nsType);\n            }\n        }\n        \n        return \"xs:string\"; // The default if type cannot be resolved.\n    }\n", "raw_comment": "    /**\n     * Finds the basic type of this attribute by searching simple type extensions.\n     * <p>\n     * In other words, if the type is an extension(/restriction) of an extension of\n     * a basic type it will return the basic type or \"xs:string\" if no other basic \n     * type was found\n     *\n     * @param type The starting type to find the basic type of.\n     */\n", "code": "private string find basic type string type string ns type ns prefix name type if xsdbase types is basic type ns type return type xsdsimple type simple type get schema lookup simple type ns type if simple type null ns type simple type get extends as string if ns type null return find basic type ns type return xs string the default if type cannot be resolved\n", "comment": "finds the basic type of this attribute by searching simple type extensions\n"}
{"id": "5692631", "raw_code": "    public void addCatalogPath(File catalogPath) {\n        if (classpathMap.get(catalogPath) == null) {\n            ClassPathEntry cpe = new CatalogClassPathEntry(catalogPath);\n            classpathMap.put(catalogPath, cpe);\n            classpath.add(cpe);\n        }\n    }\n", "raw_comment": "    /**\n     * Adds a catalog path to the classpath.\n     *\n     * @param catalogPath The catalog path to add.\n     */\n", "code": "public void add catalog path file catalog path if classpath map get catalog path null class path entry cpe new catalog class path entry catalog path classpath map put catalog path cpe classpath add cpe\n", "comment": "adds a catalog path to the classpath\n"}
{"id": "5692632", "raw_code": "        public Object next() {\n            return ((Map.Entry)this.mapEntryIterator.next()).getValue();\n        }\n", "raw_comment": "        /** Returns the next element in the iteration.\n         *\n         * @return the next element in the iteration.\n         * @exception NoSuchElementException iteration has no more elements.\n         *\n         */\n", "code": "public object next return map entry this map entry iterator next get value\n", "comment": "returns the next element in the iteration\n"}
{"id": "5692633", "raw_code": "    public int getType() {\n        int iType = -1;\n        if (this.type == null) {\n            iType = XSDBaseTypes.STRING;\n        }\n        else {\n            String basicType = findBasicType(this.type);\n            iType = XSDBaseTypes.xsd2XSDBaseType(basicType);            \n        }\n        return iType;\n    }\n", "raw_comment": "    /**\n     * Returns an XSDBaseTypes constant representing the type of this attribute.\n     */\n", "code": "public int get type int i type 1 if this type null i type xsdbase types string else string basic type find basic type this type i type xsdbase types xsd2 xsdbase type basic type return i type\n", "comment": "returns an xsdbase types constant representing the type of this attribute\n"}
{"id": "5692634", "raw_code": "    public void addClasspath(String path) throws IOException {\n        if (path.endsWith(\".jar\") || path.endsWith(\".zip\")) {\n            addZipFile(new File(path));\n        }\n        else {\n            addCatalogPath(new File(path));\n        }\n    }\n", "raw_comment": "    /**\n     * This takes both a catalog path and paths to zip and jar files. It determines\n     * what it is and calls the appropriate adder.\n     *\n     * @param path The path to add.\n     */\n", "code": "public void add classpath string path throws ioexception if path ends with jar path ends with zip add zip file new file path else add catalog path new file path\n", "comment": "this takes both a catalog path and paths to zip and jar files\n"}
{"id": "5692635", "raw_code": "    public String getTypeAsString() {\n        return this.type;\n    }\n", "raw_comment": "    /**\n     * Returns the type as a String.\n     */\n", "code": "public string get type as string return this type\n", "comment": "returns the type as a string\n"}
{"id": "5692636", "raw_code": "        public void remove() {\n            throw new RuntimeException(\"Not supported!\");\n        }\n", "raw_comment": "        /**\n         * Removes from the underlying collection the last element returned by the\n         * iterator (optional operation).  This method can be called only once per\n         * call to <tt>next</tt>.  The behavior of an iterator is unspecified if\n         * the underlying collection is modified while the iteration is in\n         * progress in any way other than by calling this method.\n         *\n         * @exception UnsupportedOperationException if the <tt>remove</tt>\n         * \t\t  operation is not supported by this Iterator.\n         *\n         * @exception IllegalStateException if the <tt>next</tt> method has not\n         * \t\t  yet been called, or the <tt>remove</tt> method has already\n         * \t\t  been called after the last call to the <tt>next</tt>\n         * \t\t  method.\n         *\n         */\n", "code": "public void remove throw new runtime exception not supported\n", "comment": "removes from the underlying collection the last element returned by the\n"}
{"id": "5692637", "raw_code": "    public Class getClass(String name) throws ClassNotFoundException {\n        return loadClass(name, true);\n    }\n", "raw_comment": "    /**\n     * Loads a specific class.\n     *\n     * @param name The full package name of the class to load.\n     */\n", "code": "public class get class string name throws class not found exception return load class name true\n", "comment": "loads a specific class\n"}
{"id": "5692638", "raw_code": "    public String getBasicTypeAsString() {\n        if (this.type != null) {\n            String strType = findBasicType(this.type);\n            if (strType == null) {\n                strType = this.type;\n            }\n            return strType;\n        }\n        \n        return \"xs:string\"; // Always default to xs:string if no type can be determined.\n    }\n", "raw_comment": "    /**\n     * Returns the basic type.\n     */\n", "code": "public string get basic type as string if this type null string str type find basic type this type if str type null str type this type return str type return xs string always default to xs string if no type can be determined\n", "comment": "returns the basic type\n"}
{"id": "5692640", "raw_code": "    public void setMinOccurs(int minOccurs) {\n        this.minOccurs = minOccurs;\n    }\n", "raw_comment": "    /**\n     * Sets minOccurs.\n     *\n     * @param minOccurs the value to set.\n     */\n", "code": "public void set min occurs int min occurs this min occurs min occurs\n", "comment": "sets min occurs\n"}
{"id": "5692642", "raw_code": "    public String getTypeAsJavaType() {\n        return XSDBaseTypes.baseType2String(getType());\n    }\n", "raw_comment": "    /**\n     * Returns the type as a Java type.\n     */\n", "code": "public string get type as java type return xsdbase types base type2 string get type\n", "comment": "returns the type as a java type\n"}
{"id": "5692643", "raw_code": "    public int getMinOccurs() {\n        return this.minOccurs;\n    }\n", "raw_comment": "    /**\n     * Gets the minOccurs value.\n     */\n", "code": "public int get min occurs return this min occurs\n", "comment": "gets the min occurs value\n"}
{"id": "5692644", "raw_code": "    public void setMaxOccurs(int maxOccurs) {\n        this.maxOccurs = maxOccurs;\n    }\n", "raw_comment": "    /**\n     * Sets maxOccurs.\n     *\n     * @param maxOccurs The value to set.\n     */\n", "code": "public void set max occurs int max occurs this max occurs max occurs\n", "comment": "sets max occurs\n"}
{"id": "5692647", "raw_code": "    public int getMaxOccurs() {\n        return this.maxOccurs;\n    }\n", "raw_comment": "    /**\n     * Returns the maxOccurs value.\n     */\n", "code": "public int get max occurs return this max occurs\n", "comment": "returns the max occurs value\n"}
{"id": "5692648", "raw_code": "    public URL findResource(String name) {\n        try {\n            Enumeration resourceEnum = findResources(name);\n            if (resourceEnum.hasMoreElements()) {\n                return (URL)resourceEnum.nextElement();\n            }\n        }\n        catch (IOException ioe) {\n            // We must swallow this since findResource does not throw any exceptions!\n        }\n        return null;\n    }\n", "raw_comment": "    /**\n     * Finds the specified resource.\n     *\n     * @param name The name of the resource to get.\n     */\n", "code": "public url find resource string name try enumeration resource enum find resources name if resource enum has more elements return url resource enum next element catch ioexception ioe we must swallow this since find resource does not throw any exceptions return null\n", "comment": "finds the specified resource\n"}
{"id": "5692649", "raw_code": "    public void setOrdered(boolean ordered) {\n        this.ordered = ordered;\n    }\n", "raw_comment": "    /**\n     * Sets wether or not this element is ordered.\n     *\n     * @param ordered The state to set.\n     */\n", "code": "public void set ordered boolean ordered this ordered ordered\n", "comment": "sets wether or not this element is ordered\n"}
{"id": "5692650", "raw_code": "    public boolean isOrdered() {\n        return this.ordered;\n    }\n", "raw_comment": "    /**\n     * Returns wether or not this element is ordered.\n     */\n", "code": "public boolean is ordered return this ordered\n", "comment": "returns wether or not this element is ordered\n"}
{"id": "5692651", "raw_code": "    public boolean hasMany() {\n        return !((this.minOccurs == 0 || this.minOccurs == 1) && this.maxOccurs == 1);\n    }\n", "raw_comment": "    /**\n     * Returns true if there are more than one of this element.\n     */\n", "code": "public boolean has many return this min occurs 0 this min occurs 1 this max occurs 1\n", "comment": "returns true if there are more than one of this element\n"}
{"id": "5692652", "raw_code": "    public boolean isOptional() {\n        return this.optional;\n    }\n", "raw_comment": "    /**\n     * returns true if this attribute is optional.\n     */\n", "code": "public boolean is optional return this optional\n", "comment": "returns true if this attribute is optional\n"}
{"id": "5692653", "raw_code": "    public Enumeration findResources(String name) throws IOException {\n        Vector urls = new Vector();\n        for (Iterator it = this.classpath.iterator(); it.hasNext();) {\n            ClassPathEntry cpe = (ClassPathEntry)it.next();\n            Object entryData = cpe.getFileEntry(name);\n            if (entryData != null) {\n                urls.add(cpe.getEntryURL(entryData));\n            }\n        }\n        return urls.elements();\n    }\n", "raw_comment": "    /**\n     * Finds all mathing resources.\n     *\n     * @param name The name of the resource to find.\n     */\n", "code": "public enumeration find resources string name throws ioexception vector urls new vector for iterator it this classpath iterator it has next class path entry cpe class path entry it next object entry data cpe get file entry name if entry data null urls add cpe get entry url entry data return urls elements\n", "comment": "finds all mathing resources\n"}
{"id": "5692656", "raw_code": "    public boolean hasDefaultValue() {\n        return this.defaultValue != null;\n    }\n", "raw_comment": "    /**\n     * Returns true if this attribute has a default value.\n     */\n", "code": "public boolean has default value return this default value null\n", "comment": "returns true if this attribute has a default value\n"}
{"id": "5692658", "raw_code": "    public boolean isPrivate() {\n        return this.name == null;\n    }\n", "raw_comment": "    /**\n     * returns true if this is a private type.\n     */\n", "code": "public boolean is private return this name null\n", "comment": "returns true if this is a private type\n"}
{"id": "5692659", "raw_code": "    public String getDefaultValue() {\n        return this.defaultValue;\n    }\n", "raw_comment": "    /**\n     * Returns the default value of this attribute. This returns null\n     * if hasDefaultValue() returns false!\n     */\n", "code": "public string get default value return this default value\n", "comment": "returns the default value of this attribute\n"}
{"id": "5692660", "raw_code": "    public boolean hasExtensions() {\n        return this.extensions.size() != 0;\n    }\n", "raw_comment": "    /** \n     * Returns true if this type extends other types or references groups.\n     */\n", "code": "public boolean has extensions return this extensions size 0\n", "comment": "returns true if this type extends other types or references groups\n"}
{"id": "5692662", "raw_code": "    public boolean hasExtension() {\n        return this.extension != null;\n    }\n", "raw_comment": "    /**\n     * Returns true if this simple type extends another.\n     */\n", "code": "public boolean has extension return this extension null\n", "comment": "returns true if this simple type extends another\n"}
{"id": "5692663", "raw_code": "        public Object getFileEntry(String name) throws IOException {\n            try {\n                return this.zipFile.getEntry(name.replace(File.separatorChar, '/'));\n            }\n            catch (IllegalStateException ise) {\n                System.err.println(\"WARNING: DynamicClassLoader: jar file \" + zipFile.getName() + \" has been closed! This should not happen!\");\n            }\n            return null;\n        }\n", "raw_comment": "        /**\n         * If this classpath entry contains the specified file then it returns an internal\n         * entry object that should be passed as argument to getEntryInputStream() or\n         * getEntryURL(). The returned information cannot be cached within the class since\n         * it wouldn't be thread safe then since this same singleton is used by all threads.\n         * <p>\n         * If the specified file does not exist in this classpath null is returned.\n         *\n         * @param name The classpath relative path of the file.\n         */\n", "code": "public object get file entry string name throws ioexception try return this zip file get entry name replace file separator char catch illegal state exception ise system err println warning dynamic class loader jar file zip file get name has been closed this should not happen return null\n", "comment": "if this classpath entry contains the specified file then it returns an internal\n"}
{"id": "5692664", "raw_code": "    public Iterator getExtensions() {\n        return new ReadOnlyIterator(this.extensions.iterator());\n    }\n", "raw_comment": "    /**\n     * Returns the extensions as a List of String objects.\n     */\n", "code": "public iterator get extensions return new read only iterator this extensions iterator\n", "comment": "returns the extensions as a list of string objects\n"}
{"id": "5692665", "raw_code": "    public String getExtendsAsString() {\n        return this.extension;\n    }\n", "raw_comment": "    /**\n     * Returns the type this simple type extends if any as a String.\n     */\n", "code": "public string get extends as string return this extension\n", "comment": "returns the type this simple type extends if any as a string\n"}
{"id": "5692667", "raw_code": "    public boolean hasElementRefs() {\n        return this.elements.hasElementRefs();\n    }\n", "raw_comment": "    /**\n     * Returns true if there are elements defined by this complex type.\n     */\n", "code": "public boolean has element refs return this elements has element refs\n", "comment": "returns true if there are elements defined by this complex type\n"}
{"id": "5692670", "raw_code": "        public InputStream getEntryInputStream(Object entryData) throws IOException {\n            ZipEntry zipEntry = (ZipEntry)entryData;\n            return this.zipFile.getInputStream(zipEntry);\n        }\n", "raw_comment": "        /**\n         * Returns an InputStream for reading the entry.\n         *\n         * @param entryData the object returned by getFileEntry().\n         */\n", "code": "public input stream get entry input stream object entry data throws ioexception zip entry zip entry zip entry entry data return this zip file get input stream zip entry\n", "comment": "returns an input stream for reading the entry\n"}
{"id": "5692671", "raw_code": "    public boolean hasAttributes() {\n        return !this.attributes.isEmpty();\n    }\n", "raw_comment": "    /**\n     * Returns true if there are attributes in the set.\n     */\n", "code": "public boolean has attributes return this attributes is empty\n", "comment": "returns true if there are attributes in the set\n"}
{"id": "5692673", "raw_code": "    public Iterator getAttributes() {\n        return this.attributes.iterator(); \n    }\n", "raw_comment": "    /**\n     * Returns a List of XSDAttribute objects.\n     */\n", "code": "public iterator get attributes return this attributes iterator\n", "comment": "returns a list of xsdattribute objects\n"}
{"id": "5692675", "raw_code": "    public void setEntityResolver(EntityResolver resolver) throws XOBFeatureNotSupportedException {\n        this.parser.setEntityResolver(resolver);\n    }\n", "raw_comment": "    /**\n     * Sets an EntityResolver to use.\n     *\n     * @param resolver The resolver to set.\n     */\n", "code": "public void set entity resolver entity resolver resolver throws xobfeature not supported exception this parser set entity resolver resolver\n", "comment": "sets an entity resolver to use\n"}
{"id": "5692677", "raw_code": "        public URL getEntryURL(Object entryData) throws IOException {\n            ZipEntry zipEntry = (ZipEntry)entryData;\n            URL entryURL = new URL(\"jar:file:\" + this.zipFilePath.toString() + \"!/\" + zipEntry.getName());\n            return entryURL;\n        }\n", "raw_comment": "        /**\n         * Return an URL pointing to the entry.\n         */\n", "code": "public url get entry url object entry data throws ioexception zip entry zip entry zip entry entry data url entry url new url jar file this zip file path to string zip entry get name return entry url\n", "comment": "return an url pointing to the entry\n"}
{"id": "5692678", "raw_code": "    public void setEntityResolver(String resolverClass) throws XOBException {\n        try {\n            Class resClass = Class.forName(resolverClass);\n            EntityResolver resolver = (EntityResolver)resClass.newInstance();\n            this.parser.setEntityResolver(resolver);\n        }\n        catch (Exception e) {\n            throw new XOBException(\"Failed to instantiate resolver class!\", e);\n        }\n    }\n", "raw_comment": "    /**\n     * Sets an EntityResolver to use. \n     *\n     * @param resolverClass The resolver to set, specified with full package path.\n     * @exception XOBException if the specified resolver class can't be found or can't be instantiated.\n     */\n", "code": "public void set entity resolver string resolver class throws xobexception try class res class class for name resolver class entity resolver resolver entity resolver res class new instance this parser set entity resolver resolver catch exception e throw new xobexception failed to instantiate resolver class e\n", "comment": "sets an entity resolver to use\n"}
{"id": "5692679", "raw_code": "    public boolean hasAttributes() {\n        return this.attributes.hasAttributes();\n    }\n", "raw_comment": "    /**\n     * Returns true if there are any attributes defined by this complex type.\n     */\n", "code": "public boolean has attributes return this attributes has attributes\n", "comment": "returns true if there are any attributes defined by this complex type\n"}
{"id": "5692680", "raw_code": "    public XSDSchema parse(InputStream schemaStream) throws XOBParseException {\n        this.parser.parse(schemaStream);\n        Document doc = this.parser.getParsedDocument();\n        XMLElement schemaElement = new XMLElement(doc.getDocumentElement());\n        try {\n            return new xob.xsd.XSDSchema(schemaElement);\n        }\n        catch (RuntimeException re) {\n            throw new XOBParseException(\"Failed to parse schema!\", re);\n        }\n    }\n", "raw_comment": "    /**\n     * Parses the InputStream and returns an XSDSchema object.\n     * <p> \n     * If the schemaStream does not contain a schema you will most likely\n     * get an XOBParseException, but it is possible that you dont! \n     *\n     * @param schemaStream An InputStream containing a schema definition. See warning above!\n     * @exception XOBParseException on parsing failure.\n     */\n", "code": "public xsdschema parse input stream schema stream throws xobparse exception this parser parse schema stream document doc this parser get parsed document xmlelement schema element new xmlelement doc get document element try return new xob xsd xsdschema schema element catch runtime exception re throw new xobparse exception failed to parse schema re\n", "comment": "parses the input stream and returns an xsdschema object\n"}
{"id": "5692682", "raw_code": "    public boolean extendsSimpleType() {\n        return this.extendsSimpleType;\n    }\n", "raw_comment": "    /**\n     * Returns true if this complexType have simpleContent that restricts or extends\n     * a simple or basic type. In this case the Iterator returned by getExtensions()\n     * will contain only one entry.\n     */\n", "code": "public boolean extends simple type return this extends simple type\n", "comment": "returns true if this complex type have simple content that restricts or extends\n"}
{"id": "5692683", "raw_code": "        public Object getFileEntry(String name) throws IOException {\n            File testPath = new File(this.catalogPath, name);\n            if (testPath.exists()) {\n                return testPath;\n            }\n            return null;\n        }\n", "raw_comment": "        /**\n         * If this classpath entry contains the specified file then it returns an internal\n         * entry object that should be passed as argument to getEntryInputStream() or\n         * getEntryURL(). The returned information cannot be cached within the class since\n         * it wouldn't be thread safe then since this same singleton is used by all threads.\n         * <p>\n         * If the specified file does not exist in this classpath null is returned.\n         *\n         * @param name The classpath relative path of the file.\n         */\n", "code": "public object get file entry string name throws ioexception file test path new file this catalog path name if test path exists return test path return null\n", "comment": "if this classpath entry contains the specified file then it returns an internal\n"}
{"id": "5692684", "raw_code": "    public boolean extendsBasicType() {\n        if (extendsSimpleType()) {\n            return XSDBaseTypes.isBasicType((String)this.extensions.get(0));\n        }\n        else {\n            return false;\n        }\n    }\n", "raw_comment": "    /**\n     * This only returns true if extendsSimpleType() returns true and the\n     * base type is a basic xsd type and not a simpleType definition.\n     */\n", "code": "public boolean extends basic type if extends simple type return xsdbase types is basic type string this extensions get 0 else return false\n", "comment": "this only returns true if extends simple type returns true and the\n"}
{"id": "5692686", "raw_code": "    public void generate(XSDComplexType complexType) throws GenerateException {\n        // Only generte complex type if it contains attributes or elements (complex content).\n        if (!complexType.extendsSimpleType()) {\n            String fileName = getOpts().lookupObjectName(complexType.getName());\n            if (fileName == null) {\n                fileName = toObjectName(complexType.getName());\n            }\n            openOutputFile(fileName);\n\n            writeHeader();\n\n            if (complexType.hasDocumentation()) {\n                writeComment(complexType.getDocumentation(), \"\");\n            }\n\n            writeInterfaceStart(fileName, complexType.getExtensions());\n\n            generateAttributes(complexType);\n\n            generateElements(complexType);\n\n            writeInterfaceEnd();\n\n            closeOutputFile();\n        }\n    }\n", "raw_comment": "    /**\n     * This method generates a whole interface.\n     *\n     * @param complexType The complex type to generate from.\n     */\n", "code": "public void generate xsdcomplex type complex type throws generate exception only generte complex type if it contains attributes or elements complex content if complex type extends simple type string file name get opts lookup object name complex type get name if file name null file name to object name complex type get name open output file file name write header if complex type has documentation write comment complex type get documentation write interface start file name complex type get extensions generate attributes complex type generate elements complex type write interface end close output file\n", "comment": "this method generates a whole interface\n"}
{"id": "5692688", "raw_code": "        public InputStream getEntryInputStream(Object entryData) throws IOException {\n            File path = (File)entryData;\n            return new FileInputStream(path);\n        }\n", "raw_comment": "        /**\n         * Returns an InputStream for reading the entry.\n         *\n         * @param entryData the object returned by getFileEntry().\n         */\n", "code": "public input stream get entry input stream object entry data throws ioexception file path file entry data return new file input stream path\n", "comment": "returns an input stream for reading the entry\n"}
{"id": "5692691", "raw_code": "    protected GeneratorOptions getOpts() {\n        return this.opts;\n    }\n", "raw_comment": "    /** \n     * Gets the generator options.\n     */\n", "code": "protected generator options get opts return this opts\n", "comment": "gets the generator options\n"}
{"id": "5692693", "raw_code": "        public URL getEntryURL(Object entryData) throws IOException {\n            File path = (File)entryData;\n            return new URL(\"file:\" + path.toString());\n        }\n", "raw_comment": "        /**\n         * Return an URL pointing to the entry.\n         */\n", "code": "public url get entry url object entry data throws ioexception file path file entry data return new url file path to string\n", "comment": "return an url pointing to the entry\n"}
{"id": "5692695", "raw_code": "    public void setReadonly(boolean readOnly) {\n        setter(\"setReadonly\", readOnly);\n    }\n", "raw_comment": "    /**\n     * Sets the readonly flag. No setters nor a factory will be generated if true.\n     */\n", "code": "public void set readonly boolean read only setter set readonly read only\n", "comment": "sets the readonly flag\n"}
{"id": "5692698", "raw_code": "    public boolean isReadonly() {\n        return ((Boolean)getter(\"isReadonly\")).booleanValue();\n    }\n", "raw_comment": "    /**\n     * Returns the value of the readonly flag.\n     */\n", "code": "public boolean is readonly return boolean getter is readonly boolean value\n", "comment": "returns the value of the readonly flag\n"}
{"id": "5692699", "raw_code": "    public String getSrcFile() {\n        return this.srcFile;\n    }\n", "raw_comment": "    /** \n     * Gets the name of the source file we are generating from.\n     *\n     * @return Value of property srcFile.\n     */\n", "code": "public string get src file return this src file\n", "comment": "gets the name of the source file we are generating from\n"}
{"id": "5692700", "raw_code": "    protected void closeOutputFile() {\n        this.writer.flush();\n        this.writer.close();\n        this.writer = null;        \n    }\n", "raw_comment": "    /**\n     * Closes the output file. \n     */\n", "code": "protected void close output file this writer flush this writer close this writer null\n", "comment": "closes the output file\n"}
{"id": "5692701", "raw_code": "    public void setPackage(String pkg) {\n        setter(\"setPackage\",  pkg);\n    }\n", "raw_comment": "    /**\n     * Sets the package the generated interfaces should belong to.\n     *\n     * @param pkg The package to set.\n     */\n", "code": "public void set package string pkg setter set package pkg\n", "comment": "sets the package the generated interfaces should belong to\n"}
{"id": "5692703", "raw_code": "    public String getOutputDir() {\n        return this.outputDir;\n    }\n", "raw_comment": "    /** \n     * Gets the directory we are generating to.\n     *\n     * @return Value of property outputDir.\n     */\n", "code": "public string get output dir return this output dir\n", "comment": "gets the directory we are generating to\n"}
{"id": "5692704", "raw_code": "    public String getPackage() {\n        return (String)getter(\"getPackage\");\n    }\n", "raw_comment": "    /**\n     * Returns teh package the generated intefaces should belong to.\n     */\n", "code": "public string get package return string getter get package\n", "comment": "returns teh package the generated intefaces should belong to\n"}
{"id": "5692707", "raw_code": "    public String getPkg() {\n        return this.pkg;\n    }\n", "raw_comment": "    /**\n     * Gets the package the generated interfaces belongs to.\n     *\n     * @return Value of property pkg.\n     */\n", "code": "public string get pkg return this pkg\n", "comment": "gets the package the generated interfaces belongs to\n"}
{"id": "5692709", "raw_code": "    public void setPkg(String pkg) {\n        this.pkg = pkg;\n    }\n", "raw_comment": "    /** \n     * Sets the package the generated interfaces belongs to.\n     *\n     * @param pkg New value of property pkg.\n     */\n", "code": "public void set pkg string pkg this pkg pkg\n", "comment": "sets the package the generated interfaces belongs to\n"}
{"id": "5692714", "raw_code": "    protected void writeComment(String comment, String prefix) {\n        String cmnt = StringUtil.replace(\"[\",\"<\", comment);\n        cmnt = StringUtil.replace(\"]\",\">\", cmnt);\n        cmnt = StringUtil.replace(\"\\n\", \"\\n\" + prefix + \" * \", cmnt); \n        this.writer.println(prefix + \"/**\");\n        this.writer.println(prefix + \" * \" + cmnt);\n        this.writer.println(prefix + \" */\");\n    }\n", "raw_comment": "    /**\n     * Writes a javadoc comment. Any '[' is translated to '<' and any ']' is\n     * translated to '>'.\n     *\n     * @param comment The comment to write.\n     * @param prefix Each written line is prefixed with this.\n     */\n", "code": "protected void write comment string comment string prefix string cmnt string util replace comment cmnt string util replace cmnt cmnt string util replace n n prefix cmnt this writer println prefix this writer println prefix cmnt this writer println prefix\n", "comment": "writes a javadoc comment\n"}
{"id": "5692716", "raw_code": "    public void setOutputdir(String dir) {\n        setter(\"setOutputdir\", dir);\n    }\n", "raw_comment": "    /**\n     * Sets the output directory where the generated files should be put. \n     * Please note that if you also specify package=\"\" the '.'s will be\n     * changed to File.separator and appended to this dir to create the\n     * real output dir. So in other words, if this is used in conjunction\n     * with package this should point to the package root.\n     *\n     * @param dir The dir to set.\n     */\n", "code": "public void set outputdir string dir setter set outputdir dir\n", "comment": "sets the output directory where the generated files should be put\n"}
{"id": "5692717", "raw_code": "    public boolean isAutomap() {\n        return this.automap;\n    }\n", "raw_comment": "    /**\n     * If true the generator should automatically generate mappings for \n     * all elements.\n     */\n", "code": "public boolean is automap return this automap\n", "comment": "if true the generator should automatically generate mappings for\n"}
{"id": "5692718", "raw_code": "    public void setAutomap(boolean automap) {\n        this.automap = automap;\n    }\n", "raw_comment": "    /**\n     * Sets the automap state.\n     *\n     * @param automap The automap state to set.\n     */\n", "code": "public void set automap boolean automap this automap automap\n", "comment": "sets the automap state\n"}
{"id": "5692719", "raw_code": "    public void addElementName2ObjectNameMap(String elementName, String objectName) {\n        this.elementObjectMap.put(elementName, objectName);\n    }\n", "raw_comment": "    /**\n     * Adds an element name -> object name mapping.\n     *\n     * @param elementName The name of the element to map.\n     * @param objectName The object name to map the element name to.\n     */\n", "code": "public void add element name2 object name map string element name string object name this element object map put element name object name\n", "comment": "adds an element name object name mapping\n"}
{"id": "5692720", "raw_code": "    public String getOutputdir() {\n        return (String)getter(\"getOutputdir\");\n    }\n", "raw_comment": "    /**\n     * Returns the output dir.\n     */\n", "code": "public string get outputdir return string getter get outputdir\n", "comment": "returns the output dir\n"}
{"id": "5692722", "raw_code": "    public void writeSectionComment(String section) {\n        this.writer.println(\"    //\");\n        this.writer.println(\"    // \" + section);\n        this.writer.println(\"    //\");\n        this.writer.println();\n    }\n", "raw_comment": "    /**\n     * Writes a section comment.\n     *\n     * @param section The name of the section to put in the comment.\n     */\n", "code": "public void write section comment string section this writer println this writer println section this writer println this writer println\n", "comment": "writes a section comment\n"}
{"id": "5692725", "raw_code": "    public void setXsd(Path file) {\n        setter(\"setXsd\", file);\n    }\n", "raw_comment": "    /**\n     * Sets the source schema file to generate from. If you also set a FileSet then\n     * this will be ignored.\n     *\n     * @param file The file to set.\n     */\n", "code": "public void set xsd path file setter set xsd file\n", "comment": "sets the source schema file to generate from\n"}
{"id": "5692726", "raw_code": "    public boolean validate() {\n        return this.srcFile != null && this.outputDir != null;\n    }\n", "raw_comment": "    /**\n     * Validates that all required options are set.\n     */\n", "code": "public boolean validate return this src file null this output dir null\n", "comment": "validates that all required options are set\n"}
{"id": "5692727", "raw_code": "    public Path getXsd() {\n        return (Path)getter(\"getXsd\");\n    }\n", "raw_comment": "    /**\n     * Returns the schema file to generate from.\n     */\n", "code": "public path get xsd return path getter get xsd\n", "comment": "returns the schema file to generate from\n"}
{"id": "5692734", "raw_code": "    protected void writeInterfaceEnd() {\n        this.writer.println(\"}\");\n", "raw_comment": "    /**\n     * Writes the interface end.\n     */\n", "code": "protected void write interface end this writer println\n", "comment": "writes the interface end\n"}
{"id": "5692737", "raw_code": "    public void setOptions(GeneratorOptions opts) {\n        this.opts = opts;\n    }\n", "raw_comment": "    /**\n     * Sets options to use.\n     *\n     * @param opts The options to set.\n     */\n", "code": "public void set options generator options opts this opts opts\n", "comment": "sets options to use\n"}
{"id": "5692738", "raw_code": "    protected void generateAttributes(XSDComplexType complexType) {\n        if (complexType.hasAttributes()) {\n            generateAttributeDefaults(complexType.getAttributes());\n            writeEmptyLine();\n            generateAttributeSettersAndGetters(complexType.getAttributes());\n        }        \n    }\n", "raw_comment": "    /**\n     * Generates the attribute section.\n     *\n     * @param complexType The complex type to generate from.\n     */\n", "code": "protected void generate attributes xsdcomplex type complex type if complex type has attributes generate attribute defaults complex type get attributes write empty line generate attribute setters and getters complex type get attributes\n", "comment": "generates the attribute section\n"}
{"id": "5692739", "raw_code": "    protected void generateAttributeDefaults(Iterator it) {\n        writeSectionComment(\"Default values for attributes.\");\n        while(it.hasNext()) {\n            XSDAttribute attr = (XSDAttribute)it.next();\n            if (attr.hasDefaultValue()) {\n                writeDefaultConstant(attr.getName(), attr.getDefaultValue());\n            }\n        }\n    }\n", "raw_comment": "    /**\n     * Writes default constatns for attributes.\n     *\n     * @param it An Iterator of XSDAttribute objects.\n     */\n", "code": "protected void generate attribute defaults iterator it write section comment default values for attributes while it has next xsdattribute attr xsdattribute it next if attr has default value write default constant attr get name attr get default value\n", "comment": "writes default constatns for attributes\n"}
{"id": "5692740", "raw_code": "    protected void generateAttributeSettersAndGetters(Iterator it) {\n        writeSectionComment(\"Attributes\");\n        while (it.hasNext()) {\n            XSDAttribute attr = (XSDAttribute)it.next();\n            writeAttributeSetter(attr);                \n            writeEmptyLine();\n            writeAttributeGetter(attr);\n            writeEmptyLine();\n        }            \n    }\n", "raw_comment": "    /**\n     * Writes setters and getters for the attributes.\n     *\n     * @param it An Iterator of XSDAttribute objects.\n     */\n", "code": "protected void generate attribute setters and getters iterator it write section comment attributes while it has next xsdattribute attr xsdattribute it next write attribute setter attr write empty line write attribute getter attr write empty line\n", "comment": "writes setters and getters for the attributes\n"}
{"id": "5692742", "raw_code": "    protected void generateElements(XSDComplexType complexType) {\n        if (complexType.hasElementRefs()) {\n            writeSectionComment(\"Elements.\");            \n            generateElementReferences(complexType.getElementRefs());\n        }                \n    }\n", "raw_comment": "    /**\n     * Generates the element section.\n     *\n     * @param complexType The complex type to generate from.\n     */\n", "code": "protected void generate elements xsdcomplex type complex type if complex type has element refs write section comment elements generate element references complex type get element refs\n", "comment": "generates the element section\n"}
{"id": "5692743", "raw_code": "    protected void writeEmptyLine() {\n        this.writer.println();\n    }\n", "raw_comment": "    /**\n     * Writes an empty line.\n     */\n", "code": "protected void write empty line this writer println\n", "comment": "writes an empty line\n"}
{"id": "5692744", "raw_code": "    protected void generateElementReferences(Iterator refIterator) {\n        while (refIterator.hasNext()) {\n            XSDElementRef elementRef = (XSDElementRef)refIterator.next();\n            writeElementSetter(elementRef);                \n            writeEmptyLine();                \n            writeElementGetter(elementRef);\n            writeEmptyLine();\n        }\n    }            \n", "raw_comment": "    /**\n     * Generates the elements from the references.\n     *\n     * @param refIterator An Iterator of XSDElementRef objects.\n     */\n", "code": "protected void generate element references iterator ref iterator while ref iterator has next xsdelement ref element ref xsdelement ref ref iterator next write element setter element ref write empty line write element getter element ref write empty line\n", "comment": "generates the elements from the references\n"}
{"id": "5692745", "raw_code": "    public void setReadonly(boolean readOnly) {\n        this.opts.setReadOnly(readOnly);\n    }\n", "raw_comment": "    /**\n     * Sets the readonly flag. No setters nor a factory will be generated if true.\n     */\n", "code": "public void set readonly boolean read only this opts set read only read only\n", "comment": "sets the readonly flag\n"}
{"id": "5692747", "raw_code": "    public boolean isReadonly() {\n        return this.opts.isReadOnly();\n    }\n", "raw_comment": "    /**\n     * Returns the value of the readonly flag.\n     */\n", "code": "public boolean is readonly return this opts is read only\n", "comment": "returns the value of the readonly flag\n"}
{"id": "5692748", "raw_code": "    public void setPackage(String pkg) {\n        this.opts.setPkg(pkg);\n    }\n", "raw_comment": "    /**\n     * Sets the package the generated interfaces should belong to.\n     *\n     * @param pkg The package to set.\n     */\n", "code": "public void set package string pkg this opts set pkg pkg\n", "comment": "sets the package the generated interfaces should belong to\n"}
{"id": "5692749", "raw_code": "    protected void writeDefaultConstant(String attribute, String value) {\n        if (!this.opts.isReadOnly()) {\n            this.writer.println(\"    /** The default value for \" + attribute + \". */\");\n            this.writer.println(\"    public static final String DEFAULT_\" + attribute + \" = \\\"\" + value + \"\\\";\");\n            this.writer.println();\n        }\n    }\n", "raw_comment": "    /**\n     * Writes a default constant.\n     *\n     * @param attribute The attribute to make a default constant for.\n     * @param value The default value to assign to the constant.\n     */\n", "code": "protected void write default constant string attribute string value if this opts is read only this writer println the default value for attribute this writer println public static final string default attribute value this writer println\n", "comment": "writes a default constant\n"}
{"id": "5692751", "raw_code": "    public String getPackage() {\n        return this.opts.getPkg();\n    }\n", "raw_comment": "    /**\n     * Returns teh package the generated intefaces should belong to.\n     */\n", "code": "public string get package return this opts get pkg\n", "comment": "returns teh package the generated intefaces should belong to\n"}
{"id": "5692755", "raw_code": "    public void setAutomap(boolean automap) {\n        this.opts.setAutomap(automap);        \n    }\n", "raw_comment": "    /**\n     * If true all (non mapped) element names are mapped to object names automatically.\n     */\n", "code": "public void set automap boolean automap this opts set automap automap\n", "comment": "if true all non mapped element names are mapped to object names automatically\n"}
{"id": "5692756", "raw_code": "    protected void writeXOMConstant(String objectName, String elementName) {\n        this.writer.println(\"    /** This defines the element name for \" + objectName + \". */\");\n        this.writer.println(\"    public static final String XOM_\" + objectName + \" = \\\"\" + elementName + \"\\\";\");\n        this.writer.println();\n    }\n", "raw_comment": "    /**\n     * Writes an XOM (XML Object Map) mapping constant.\n     *\n     * @param objectName The constant name will be XOM_objectName.\n     * @param elementName The constant will have the value of elementName.\n     */\n", "code": "protected void write xomconstant string object name string element name this writer println this defines the element name for object name this writer println public static final string xom object name element name this writer println\n", "comment": "writes an xom xml object map mapping constant\n"}
{"id": "5692757", "raw_code": "    public boolean isAutomap() {\n        return this.opts.isAutomap();\n    }\n", "raw_comment": "    /**\n     * Returns true if automapping is on.\n     */\n", "code": "public boolean is automap return this opts is automap\n", "comment": "returns true if automapping is on\n"}
{"id": "5692758", "raw_code": "        public String getObjectName() {\n            return this.objectName;\n        }\n", "raw_comment": "        /**\n         * Returns the value of objectName.\n         */\n", "code": "public string get object name return this object name\n", "comment": "returns the value of object name\n"}
{"id": "5692759", "raw_code": "    public void setOutputdir(String dir) {\n        this.opts.setOutputDir(dir);\n    }\n", "raw_comment": "    /**\n     * Sets the output directory where the generated files should be put. \n     * Please note that if you also specify package=\"\" the '.'s will be\n     * changed to File.separator and appended to this dir to create the\n     * real output dir. So in other words, if this is used in conjunction\n     * with package this should point to the package root.\n     *\n     * @param dir The dir to set.\n     */\n", "code": "public void set outputdir string dir this opts set output dir dir\n", "comment": "sets the output directory where the generated files should be put\n"}
{"id": "5692760", "raw_code": "    public String getOutputdir() {\n        return this.opts.getOutputDir();\n    }\n", "raw_comment": "    /**\n     * Returns the output dir.\n     */\n", "code": "public string get outputdir return this opts get output dir\n", "comment": "returns the output dir\n"}
{"id": "5692761", "raw_code": "        public void execute() throws BuildException {\n            \n        }\n", "raw_comment": "        /**\n         * Executes the task. This task has no specific execution.\n         */\n", "code": "public void execute throws build exception\n", "comment": "executes the task\n"}
{"id": "5692762", "raw_code": "    public void setXsd(Path file) {\n        this.xsd = file;\n    }\n", "raw_comment": "    /**\n     * Sets the source schema file to generate from. If you also set a FileSet then\n     * this will be ignored.\n     *\n     * @param file The file to set.\n     */\n", "code": "public void set xsd path file this xsd file\n", "comment": "sets the source schema file to generate from\n"}
{"id": "5692764", "raw_code": "    public Path getXsd() {\n        return this.xsd;\n    }\n", "raw_comment": "    /**\n     * Returns the schema file to generate from.\n     */\n", "code": "public path get xsd return this xsd\n", "comment": "returns the schema file to generate from\n"}
{"id": "5692766", "raw_code": "    private String getBeginning(String text) {\n        String txt = text + \"                                                             \";\n        return txt.substring(0,60);\n    }\n", "raw_comment": "    /**\n     * Returns the first 60 chars of the passed string.\n     */\n", "code": "private string get beginning string text string txt text return txt substring 0 60\n", "comment": "returns the first 60 chars of the passed string\n"}
{"id": "5692775", "raw_code": "    protected void writeAttributeGetter(XSDAttribute attr) {\n        StringBuffer doc = new StringBuffer();\n        if (attr.hasDocumentation()) {\n            doc.append(attr.getDocumentation());\n        }\n        else {\n            doc.append(\"Getter for attribute '\");\n            doc.append(attr.getName());\n            doc.append(\"'.\");\n        }\n        writeComment(doc.toString(), \"    \");\n        String attrName = toObjectName(attr.getName());\n        this.writer.print(\"    public \");\n        this.writer.print(attr.getTypeAsJavaType());\n        this.writer.print(\" get\");\n        this.writer.print(attrName);\n        this.writer.println(\"();\");\n    }\n", "raw_comment": "    /**\n     * Writes an attribute getter.\n     *\n     * @param attr The attribute to generate a getter for.\n     */\n", "code": "protected void write attribute getter xsdattribute attr string buffer doc new string buffer if attr has documentation doc append attr get documentation else doc append getter for attribute doc append attr get name doc append write comment doc to string string attr name to object name attr get name this writer print public this writer print attr get type as java type this writer print get this writer print attr name this writer println\n", "comment": "writes an attribute getter\n"}
{"id": "5692782", "raw_code": "    protected void writeValueSetter(XSDElement element) {\n        if (!this.opts.isReadOnly()) {\n            writeComment(\"Sets the value of this element.\", \"    \");\n            this.writer.print(\"    public void set\");\n            String objName = getOpts().lookupObjectName(element.getName());\n            if (objName == null) {\n                objName = toObjectName(element.getName());\n            }\n            this.writer.print(objName);\n            this.writer.print(\"Value(\");\n            this.writer.print(element.getTypeAsJavaType());\n            this.writer.println(\" value);\");\n        }\n    }\n", "raw_comment": "    /**\n     * Writes a value setter.\n     *\n     * @param element The element to write the setter for.\n     */\n", "code": "protected void write value setter xsdelement element if this opts is read only write comment sets the value of this element this writer print public void set string obj name get opts lookup object name element get name if obj name null obj name to object name element get name this writer print obj name this writer print value this writer print element get type as java type this writer println value\n", "comment": "writes a value setter\n"}
{"id": "5692783", "raw_code": "         public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n             if (systemId.endsWith(\".xsd\")) {\n                 System.out.println(\"MyResolver: Resolving: publicID=[\" + publicId + \"], systemId=[\" + systemId + \"]\");\n                 if (systemId.endsWith(\"PurchaseOrder.xsd\"))\n                     return new InputSource(new FileReader(\"PurchaseOrder.xsd\"));\n                 else if (systemId.endsWith(\"XMLSchema.xsd\")) \n                     return new InputSource(new FileReader(\"XMLSchema.xsd\"));\n             }\n             \n             return null; // Let the parser resolve this by itself.\n         }\n", "raw_comment": "         /** Allow the application to resolve external entities.\n          *\n          * <p>The Parser will call this method before opening any external\n          * entity except the top-level document entity (including the\n          * external DTD subset, external entities referenced within the\n          * DTD, and external entities referenced within the document\n          * element): the application may request that the parser resolve\n          * the entity itself, that it use an alternative URI, or that it\n          * use an entirely different input source.</p>\n          *\n          * <p>Application writers can use this method to redirect external\n          * system identifiers to secure and/or local URIs, to look up\n          * public identifiers in a catalogue, or to read an entity from a\n          * database or other input source (including, for example, a dialog\n          * box).</p>\n          *\n          * <p>If the system identifier is a URL, the SAX parser must\n          * resolve it fully before reporting it to the application.</p>\n          *\n          * @param publicId The public identifier of the external entity\n          *        being referenced, or null if none was supplied.\n          * @param systemId The system identifier of the external entity\n          *        being referenced.\n          * @return An InputSource object describing the new input source,\n          *         or null to request that the parser open a regular\n          *         URI connection to the system identifier.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @exception java.io.IOException A Java-specific IO exception,\n          *            possibly the result of creating a new InputStream\n          *            or Reader for the InputSource.\n          * @see org.xml.sax.InputSource\n          *\n          */\n", "code": "public input source resolve entity string public id string system id throws saxexception ioexception if system id ends with xsd system out println my resolver resolving public id public id system id system id if system id ends with purchase order xsd return new input source new file reader purchase order xsd else if system id ends with xmlschema xsd return new input source new file reader xmlschema xsd return null let the parser resolve this by itself\n", "comment": "allow the application to resolve external entities\n"}
{"id": "5692784", "raw_code": "    protected void writeNamespaceConstant(String namespace) {\n        this.writer.println(\"    // This schema requires that tags are qualified with a namespace.\");\n        this.writer.println(\"    public static final String QUALIFIED_NAMESPACE = \\\"\" + namespace + \"\\\";\\n\");\n    }\n", "raw_comment": "    /**\n     * Writes a QUALIFIED_NAMESPACE constant for the factory interface.\n     *\n     * @param namespace The value of the constant.\n     */\n", "code": "protected void write namespace constant string namespace this writer println this schema requires that tags are qualified with a namespace this writer println public static final string qualified namespace namespace n\n", "comment": "writes a qualified namespace constant for the factory interface\n"}
{"id": "5692787", "raw_code": "    protected void writeFactoryMethod(XSDElement element) {\n        if (!this.opts.isReadOnly()) {\n            String objName = getOpts().lookupObjectName(element.getName());\n            if (objName == null) {\n                objName = toObjectName(element.getName());\n            }\n            writeComment(\"Creates a new \" + objName + \" instance.\", \"    \");\n            this.writer.print(\"    public \");\n            this.writer.print(objName);\n            this.writer.print(\" create\");\n            this.writer.print(objName);\n            this.writer.println(\"();\");\n        }\n    }\n", "raw_comment": "    /**\n     * Writes a factory method.\n     *\n     * @param element The element to generate factory for.\n     */\n", "code": "protected void write factory method xsdelement element if this opts is read only string obj name get opts lookup object name element get name if obj name null obj name to object name element get name write comment creates a new obj name instance this writer print public this writer print obj name this writer print create this writer print obj name this writer println\n", "comment": "writes a factory method\n"}
{"id": "5692790", "raw_code": "    protected String toObjectName(String name) {\n        String objName = name.substring(0,1).toUpperCase() + name.substring(1);\n        // Convert non valid names to valid ones.\n        objName = StringUtil.replace(\".\", \"_dot_\", objName);\n        objName = StringUtil.replace(\"-\", \"_dash_\", objName);\n        \n        if (getOpts().isAutomap()) {\n            if (getOpts().lookupObjectName(name) == null) {\n                getOpts().addElementName2ObjectNameMap(name, objName);\n            }\n        }\n        \n        return objName;\n    }\n", "raw_comment": "    /**\n     * Converts the name to an object name.\n     *\n     * @param name The name to convert.\n     */\n", "code": "protected string to object name string name string obj name name substring 0 1 to upper case name substring 1 convert non valid names to valid ones obj name string util replace dot obj name obj name string util replace dash obj name if get opts is automap if get opts lookup object name name null get opts add element name2 object name map name obj name return obj name\n", "comment": "converts the name to an object name\n"}
{"id": "5692795", "raw_code": "    private void setFeature(DOMParser parser, String id, boolean value) throws XOBFeatureNotSupportedException {\n        try {\n            parser.setFeature(id, value);\n        }\n        catch (SAXNotSupportedException snse) {\n            throw new XOBFeatureNotSupportedException(\"This feature is not supported by the underlying parser!\");\n        }\n        catch (SAXNotRecognizedException snre) {\n            throw new RuntimeException(\"XercesParser bug! setFeature(String id, boolean value) should never be called with unknown id!\");\n        }\n    }                \n", "raw_comment": "    /**\n     * This is an internal feature setter that handles exceptions.\n     *\n     * @param parser The DOMParser to set the feature on.\n     * @param id The id of the feature. Use the constants above.\n     * @param value The value of the feature: true/false.\n     */\n", "code": "private void set feature domparser parser string id boolean value throws xobfeature not supported exception try parser set feature id value catch saxnot supported exception snse throw new xobfeature not supported exception this feature is not supported by the underlying parser catch saxnot recognized exception snre throw new runtime exception xerces parser bug set feature string id boolean value should never be called with unknown id\n", "comment": "this is an internal feature setter that handles exceptions\n"}
{"id": "5692796", "raw_code": "    public XMLParser newInstance() {\n        return new XercesParser();\n    }    \n", "raw_comment": "    /** \n     * This should simply create a new instance of the XMLParser implementation and\n     * return it. cloneParser() will call this method and then copy all private fields,\n     * and return a complete clone.\n     */\n", "code": "public xmlparser new instance return new xerces parser\n", "comment": "this should simply create a new instance of the xmlparser implementation and\n"}
{"id": "5692822", "raw_code": "         public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n             if (systemId.endsWith(\"PurchaseOrder.dtd\")) {\n                 System.out.println(\"MyResolver: Resolving PurchaseOrder.dtd...\");\n                 return new InputSource(new FileReader(\"PurchaseOrder.dtd\"));\n             }\n             \n             return null; // Let the parser resolve this by itself.\n         }\n", "raw_comment": "         /** Allow the application to resolve external entities.\n          *\n          * <p>The Parser will call this method before opening any external\n          * entity except the top-level document entity (including the\n          * external DTD subset, external entities referenced within the\n          * DTD, and external entities referenced within the document\n          * element): the application may request that the parser resolve\n          * the entity itself, that it use an alternative URI, or that it\n          * use an entirely different input source.</p>\n          *\n          * <p>Application writers can use this method to redirect external\n          * system identifiers to secure and/or local URIs, to look up\n          * public identifiers in a catalogue, or to read an entity from a\n          * database or other input source (including, for example, a dialog\n          * box).</p>\n          *\n          * <p>If the system identifier is a URL, the SAX parser must\n          * resolve it fully before reporting it to the application.</p>\n          *\n          * @param publicId The public identifier of the external entity\n          *        being referenced, or null if none was supplied.\n          * @param systemId The system identifier of the external entity\n          *        being referenced.\n          * @return An InputSource object describing the new input source,\n          *         or null to request that the parser open a regular\n          *         URI connection to the system identifier.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @exception java.io.IOException A Java-specific IO exception,\n          *            possibly the result of creating a new InputStream\n          *            or Reader for the InputSource.\n          * @see org.xml.sax.InputSource\n          *\n          */\n", "code": "public input source resolve entity string public id string system id throws saxexception ioexception if system id ends with purchase order dtd system out println my resolver resolving purchase order dtd return new input source new file reader purchase order dtd return null let the parser resolve this by itself\n", "comment": "allow the application to resolve external entities\n"}
{"id": "5692884", "raw_code": "        public String getApiPackage() {\n            return apiPackage;\n        }\n", "raw_comment": "        /**\n         * Gets the package of the API to generate.\n         */\n", "code": "public string get api package return api package\n", "comment": "gets the package of the api to generate\n"}
{"id": "5692888", "raw_code": "        public void setApiPackage(String apiPackage) {\n            this.apiPackage = apiPackage;\n        }\n", "raw_comment": "        /**\n         * Sets the package of the API to generate.\n         *\n         * @param apiPackage The package to set.\n         */\n", "code": "public void set api package string api package this api package api package\n", "comment": "sets the package of the api to generate\n"}
{"id": "5692892", "raw_code": "        public File getGenSchema() {\n            return genSchema;\n        }\n", "raw_comment": "        /**\n         * Gets the schema file to generate from.\n         */\n", "code": "public file get gen schema return gen schema\n", "comment": "gets the schema file to generate from\n"}
{"id": "5692896", "raw_code": "        public void setGenSchema(File genSchema) {\n            this.genSchema = genSchema;\n        }\n", "raw_comment": "        /**\n         * Sets the schema file to generate from.\n         *\n         * @param genSchema The schema file to set.\n         */\n", "code": "public void set gen schema file gen schema this gen schema gen schema\n", "comment": "sets the schema file to generate from\n"}
{"id": "5692908", "raw_code": "        public void setMap(String map) {\n            this.map = map;\n        }\n", "raw_comment": "        /**\n         * Set mappings between element and object names.\n         *\n         * @param map The mappings to set.\n         */\n", "code": "public void set map string map this map map\n", "comment": "set mappings between element and object names\n"}
{"id": "5692910", "raw_code": "        public Boolean getAutoMap() {\n            return this.autoMap;\n        }\n", "raw_comment": "        /**\n         * Returns the auto mapping state.\n         */\n", "code": "public boolean get auto map return this auto map\n", "comment": "returns the auto mapping state\n"}
{"id": "5692918", "raw_code": "        public void setAutoMap(Boolean autoMap) {\n            this.autoMap = autoMap;\n        }\n", "raw_comment": "        /**\n         * Set the auto mapping state.\n         *\n         * @param autoMap true or false.\n         */\n", "code": "public void set auto map boolean auto map this auto map auto map\n", "comment": "set the auto mapping state\n"}
{"id": "5692924", "raw_code": "        public String toString() {\n            return this.genSchema.getAbsolutePath() + \":\" + this.apiPackage;\n        }\n", "raw_comment": "        /**\n         * Returns a String representation of this object.\n         */\n", "code": "public string to string return this gen schema get absolute path this api package\n", "comment": "returns a string representation of this object\n"}
{"id": "5692939", "raw_code": "    public String toString() {\n        return this.dtdRef;\n    }\n", "raw_comment": "    /**\n     * Returns a &lt;!DOCTYPE ...&gt; declaration.\n     */\n", "code": "public string to string return this dtd ref\n", "comment": "returns a lt doctype\n"}
{"id": "5692995", "raw_code": "    public void testMain() throws Exception {\n        \n        URL purchaseOrderURL = getClass().getResource(\"PurchaseOrder.xml\");\n        String[] args = new String[] {purchaseOrderURL.toExternalForm().substring(5)};\n        \n        PrintStream origOut = System.out;\n        System.setOut(new PrintStream(new ByteArrayOutputStream())); // swallow and throw away output.\n        try {\n            PurchaseOrderReaderExample.main(args);\n        }\n        catch (Exception e) {        \n            fail(e.getMessage());\n        }\n        finally {\n            System.setOut(origOut);\n        }        \n        \n    }\n", "raw_comment": "    /**\n     * Test of main method, of class nonvalidating.read.PurchaseOrderReaderExample.\n     */\n", "code": "public void test main throws exception url purchase order url get class get resource purchase order xml string args new string purchase order url to external form substring 5 print stream orig out system out system set out new print stream new byte array output stream swallow and throw away output try purchase order reader example main args catch exception e fail e get message finally system set out orig out\n", "comment": "test of main method of class nonvalidating\n"}
{"id": "5692999", "raw_code": "         public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n             if (systemId.endsWith(\".xsd\")) {\n                 System.out.println(\"MyResolver: Resolving: publicID=[\" + publicId + \"], systemId=[\" + systemId + \"]\");\n                 if (systemId.endsWith(\"PurchaseOrder.xsd\"))\n                     return new InputSource(new InputStreamReader(PurchaseOrderReaderExample.class.getResource(\"PurchaseOrder.xsd\").openStream()));\n             }\n             \n             return null; // Let the parser resolve this by itself.\n         }\n", "raw_comment": "         /** Allow the application to resolve external entities.\n          *\n          * <p>The Parser will call this method before opening any external\n          * entity except the top-level document entity (including the\n          * external DTD subset, external entities referenced within the\n          * DTD, and external entities referenced within the document\n          * element): the application may request that the parser resolve\n          * the entity itself, that it use an alternative URI, or that it\n          * use an entirely different input source.</p>\n          *\n          * <p>Application writers can use this method to redirect external\n          * system identifiers to secure and/or local URIs, to look up\n          * public identifiers in a catalogue, or to read an entity from a\n          * database or other input source (including, for example, a dialog\n          * box).</p>\n          *\n          * <p>If the system identifier is a URL, the SAX parser must\n          * resolve it fully before reporting it to the application.</p>\n          *\n          * @param publicId The public identifier of the external entity\n          *        being referenced, or null if none was supplied.\n          * @param systemId The system identifier of the external entity\n          *        being referenced.\n          * @return An InputSource object describing the new input source,\n          *         or null to request that the parser open a regular\n          *         URI connection to the system identifier.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @exception java.io.IOException A Java-specific IO exception,\n          *            possibly the result of creating a new InputStream\n          *            or Reader for the InputSource.\n          * @see org.xml.sax.InputSource\n          *\n          */\n", "code": "public input source resolve entity string public id string system id throws saxexception ioexception if system id ends with xsd system out println my resolver resolving public id public id system id system id if system id ends with purchase order xsd return new input source new input stream reader purchase order reader example class get resource purchase order xsd open stream return null let the parser resolve this by itself\n", "comment": "allow the application to resolve external entities\n"}
{"id": "5693015", "raw_code": "    public void testMain() throws Exception {\n        URL purchaseOrderURL = getClass().getResource(\"PurchaseOrderOK.xml\");\n        String[] args = new String[] {purchaseOrderURL.toExternalForm().substring(5)};\n        \n        PrintStream origOut = System.out;\n        System.setOut(new PrintStream(new ByteArrayOutputStream())); // swallow and throw away output.\n        \n        try {\n            PurchaseOrderReadChangeWriteExample.main(args);\n        }\n        catch (Exception e) {\n            fail(e.getMessage());\n        }\n        finally {\n            System.setOut(origOut);\n        }\n        \n    }\n", "raw_comment": "    /**\n     * Test of main method, of class validating.schema.readchangewrite.PurchaseOrderReadChangeWriteExample.\n     */\n", "code": "public void test main throws exception url purchase order url get class get resource purchase order ok xml string args new string purchase order url to external form substring 5 print stream orig out system out system set out new print stream new byte array output stream swallow and throw away output try purchase order read change write example main args catch exception e fail e get message finally system set out orig out\n", "comment": "test of main method of class validating\n"}
{"id": "5693016", "raw_code": "         public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n             if (systemId.endsWith(\".xsd\")) {\n                 System.out.println(\"MyResolver: Resolving: publicID=[\" + publicId + \"], systemId=[\" + systemId + \"]\");\n                 if (systemId.endsWith(\"PurchaseOrder.xsd\")) {\n                     return new InputSource(new InputStreamReader(PurchaseOrderReadChangeWriteExample.class.getResource(\"PurchaseOrder.xsd\").openStream()));\n                 }\n             }\n             \n             return null; // Let the parser resolve this by itself.\n         }\n", "raw_comment": "         /** Allow the application to resolve external entities.\n          *\n          * <p>The Parser will call this method before opening any external\n          * entity except the top-level document entity (including the\n          * external DTD subset, external entities referenced within the\n          * DTD, and external entities referenced within the document\n          * element): the application may request that the parser resolve\n          * the entity itself, that it use an alternative URI, or that it\n          * use an entirely different input source.</p>\n          *\n          * <p>Application writers can use this method to redirect external\n          * system identifiers to secure and/or local URIs, to look up\n          * public identifiers in a catalogue, or to read an entity from a\n          * database or other input source (including, for example, a dialog\n          * box).</p>\n          *\n          * <p>If the system identifier is a URL, the SAX parser must\n          * resolve it fully before reporting it to the application.</p>\n          *\n          * @param publicId The public identifier of the external entity\n          *        being referenced, or null if none was supplied.\n          * @param systemId The system identifier of the external entity\n          *        being referenced.\n          * @return An InputSource object describing the new input source,\n          *         or null to request that the parser open a regular\n          *         URI connection to the system identifier.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @exception java.io.IOException A Java-specific IO exception,\n          *            possibly the result of creating a new InputStream\n          *            or Reader for the InputSource.\n          * @see org.xml.sax.InputSource\n          *\n          */\n", "code": "public input source resolve entity string public id string system id throws saxexception ioexception if system id ends with xsd system out println my resolver resolving public id public id system id system id if system id ends with purchase order xsd return new input source new input stream reader purchase order read change write example class get resource purchase order xsd open stream return null let the parser resolve this by itself\n", "comment": "allow the application to resolve external entities\n"}
{"id": "5693050", "raw_code": "    public void testMain() throws Exception {\n        PrintStream origOut = System.out;\n        System.setOut(new PrintStream(new ByteArrayOutputStream())); // swallow and throw away output.\n        \n        try {\n            String[] args = null;        \n            PurchaseOrderWriteValidateExample.main(args);\n        }\n        catch (Exception e) {\n            fail(e.getMessage());\n        }\n        finally {\n            System.setOut(origOut);\n        }        \n    }\n", "raw_comment": "    /**\n     * Test of main method, of class validating.schema.writevalidate.PurchaseOrderWriteValidateExample.\n     */\n", "code": "public void test main throws exception print stream orig out system out system set out new print stream new byte array output stream swallow and throw away output try string args null purchase order write validate example main args catch exception e fail e get message finally system set out orig out\n", "comment": "test of main method of class validating\n"}
{"id": "5693053", "raw_code": "         public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n             if (systemId.endsWith(\".xsd\")) {\n                 System.out.println(\"MyResolver: Resolving: publicID=[\" + publicId + \"], systemId=[\" + systemId + \"]\");\n                 if (systemId.endsWith(\"PurchaseOrder.xsd\"))\n                     return new InputSource(new InputStreamReader(PurchaseOrderWriteValidateExample.class.getResource(\"PurchaseOrder.xsd\").openStream()));\n                     return new InputSource(new FileReader(\"PurchaseOrder.xsd\"));\n             }\n             \n             return null; // Let the parser resolve this by itself.\n         }         \n", "raw_comment": "         /** Allow the application to resolve external entities.\n          *\n          * <p>The Parser will call this method before opening any external\n          * entity except the top-level document entity (including the\n          * external DTD subset, external entities referenced within the\n          * DTD, and external entities referenced within the document\n          * element): the application may request that the parser resolve\n          * the entity itself, that it use an alternative URI, or that it\n          * use an entirely different input source.</p>\n          *\n          * <p>Application writers can use this method to redirect external\n          * system identifiers to secure and/or local URIs, to look up\n          * public identifiers in a catalogue, or to read an entity from a\n          * database or other input source (including, for example, a dialog\n          * box).</p>\n          *\n          * <p>If the system identifier is a URL, the SAX parser must\n          * resolve it fully before reporting it to the application.</p>\n          *\n          * @param publicId The public identifier of the external entity\n          *        being referenced, or null if none was supplied.\n          * @param systemId The system identifier of the external entity\n          *        being referenced.\n          * @return An InputSource object describing the new input source,\n          *         or null to request that the parser open a regular\n          *         URI connection to the system identifier.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @exception java.io.IOException A Java-specific IO exception,\n          *            possibly the result of creating a new InputStream\n          *            or Reader for the InputSource.\n          * @see org.xml.sax.InputSource\n          *\n          */\n", "code": "public input source resolve entity string public id string system id throws saxexception ioexception if system id ends with xsd system out println my resolver resolving public id public id system id system id if system id ends with purchase order xsd return new input source new input stream reader purchase order write validate example class get resource purchase order xsd open stream return new input source new file reader purchase order xsd return null let the parser resolve this by itself\n", "comment": "allow the application to resolve external entities\n"}
{"id": "5693058", "raw_code": "    public void testMain() throws Exception {\n        PrintStream origOut = System.out;\n        System.setOut(new PrintStream(new ByteArrayOutputStream())); // swallow and throw away output.\n        \n        try {\n            String[] args = new String[0];\n            PurchaseOrderWriterExample.main(args);\n        }\n        catch (Exception e) {\n            fail(e.getMessage());\n        }\n        finally {\n            System.setOut(origOut);\n        }\n    }\n", "raw_comment": "    /**\n     * Test of main method, of class validating.schema.write.PurchaseOrderWriterExample.\n     */\n", "code": "public void test main throws exception print stream orig out system out system set out new print stream new byte array output stream swallow and throw away output try string args new string 0 purchase order writer example main args catch exception e fail e get message finally system set out orig out\n", "comment": "test of main method of class validating\n"}
{"id": "5693075", "raw_code": "         public InputSource resolveEntity(String publicId, String systemId) throws SAXException, IOException {\n             if (systemId.endsWith(\"PurchaseOrder.dtd\")) {\n                 System.out.println(\"MyResolver: Resolving PurchaseOrder.dtd...\");\n                 return new InputSource(new InputStreamReader(PurchaseOrderReaderExample.class.getResource(\"PurchaseOrder.dtd\").openStream()));\n             }\n             \n             return null; // Let the parser resolve this by itself.\n         }\n", "raw_comment": "         /** Allow the application to resolve external entities.\n          *\n          * <p>The Parser will call this method before opening any external\n          * entity except the top-level document entity (including the\n          * external DTD subset, external entities referenced within the\n          * DTD, and external entities referenced within the document\n          * element): the application may request that the parser resolve\n          * the entity itself, that it use an alternative URI, or that it\n          * use an entirely different input source.</p>\n          *\n          * <p>Application writers can use this method to redirect external\n          * system identifiers to secure and/or local URIs, to look up\n          * public identifiers in a catalogue, or to read an entity from a\n          * database or other input source (including, for example, a dialog\n          * box).</p>\n          *\n          * <p>If the system identifier is a URL, the SAX parser must\n          * resolve it fully before reporting it to the application.</p>\n          *\n          * @param publicId The public identifier of the external entity\n          *        being referenced, or null if none was supplied.\n          * @param systemId The system identifier of the external entity\n          *        being referenced.\n          * @return An InputSource object describing the new input source,\n          *         or null to request that the parser open a regular\n          *         URI connection to the system identifier.\n          * @exception org.xml.sax.SAXException Any SAX exception, possibly\n          *            wrapping another exception.\n          * @exception java.io.IOException A Java-specific IO exception,\n          *            possibly the result of creating a new InputStream\n          *            or Reader for the InputSource.\n          * @see org.xml.sax.InputSource\n          *\n          */\n", "code": "public input source resolve entity string public id string system id throws saxexception ioexception if system id ends with purchase order dtd system out println my resolver resolving purchase order dtd return new input source new input stream reader purchase order reader example class get resource purchase order dtd open stream return null let the parser resolve this by itself\n", "comment": "allow the application to resolve external entities\n"}
{"id": "5693106", "raw_code": "    public void setVerbose(boolean verbose) {\n        this.opts.setVerbose(verbose);\n    }\n", "raw_comment": "    /**\n     * Set to true to list files being generated.\n     *\n     * @param verbose true or false.\n     */\n", "code": "public void set verbose boolean verbose this opts set verbose verbose\n", "comment": "set to true to list files being generated\n"}
{"id": "36556038", "raw_code": "\tpublic void populateComboStudents(HashSet<Student> students) {\t\n\t\tfor (Student student : students){\n\t\t\tjComboBox.addItem(student);\t\t\n\t\t}\n\t}\n", "raw_comment": "\t/**\n\t * Given a HashSet<Students> fill in combobox appropriately\n\t * Only fill with students names -- will lazy-load info when selected\n\t */\n", "code": "public void populate combo students hash set student students for student student students j combo box add item student\n", "comment": "given a hash set students fill in combobox appropriately\n"}
{"id": "36556050", "raw_code": "\tpublic int getNumStudentsInComboBox() {\n\t\treturn jComboBox.getItemCount();\n\t\t\n\t}\n", "raw_comment": "\t/**\n\t * Count number of students in the combobox\n\t */\n", "code": "public int get num students in combo box return j combo box get item count\n", "comment": "count number of students in the combobox\n"}
{"id": "36556056", "raw_code": "    public void testPopulateComboStudents() {\n        try { \n//        \tSystem.out.println(db.getNumStudents());\n//        \tSystem.out.println(gradesGUI.getNumStudentsInComboBox());\n            \n        \t/* check to make sure there are correct number of students */\n            assertEquals(gradesDBApp.getStudents().size(), gradesGUI.getNumStudentsInComboBox());           \n        } catch (Exception e) {\n            fail(\"Exception while populating combo students\");\n        }       \n    }\n", "raw_comment": "    /**\n     * Should load the combo-box with the name of\n     * all the students in the database.\n     */\n", "code": "public void test populate combo students try system out println db get num students system out println grades gui get num students in combo box check to make sure there are correct number of students assert equals grades dbapp get students size grades gui get num students in combo box catch exception e fail exception while populating combo students\n", "comment": "should load the combo box with the name of\n"}
{"id": "36556060", "raw_code": "\tpublic void setSelectedStudent(int index) {\n\t\tjComboBox.setSelectedIndex(index);\n\t}\n", "raw_comment": "\t/**\n\t * Given an index, set the selected Student\n\t */\n", "code": "public void set selected student int index j combo box set selected index index\n", "comment": "given an index set the selected student\n"}
{"id": "36556144", "raw_code": "\tprivate JFrame getJFrame() {\n\t\tif (jFrame == null) {\n\t\t\tjFrame = new JFrame();\n\t\t\tjFrame.setSize(new Dimension(600, 450));\n\t\t\tjFrame.setContentPane(getJContentPane1());\n\t\t\tjFrame.setTitle(\"cs6300 GRADING TOOL\");\n\t\t}\n\t\treturn jFrame;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jFrame\t\n\t * \t\n\t * @return javax.swing.JFrame\t\n\t */\n", "code": "private jframe get jframe if j frame null j frame new jframe j frame set size new dimension 600 450 j frame set content pane get jcontent pane1 j frame set title cs6300 grading tool return j frame\n", "comment": "this method initializes j frame\n"}
{"id": "36556174", "raw_code": "\tprivate JTextArea getJTextArea1() {\n\t\tif (jTextArea == null) {\n\t\t\tjTextArea = new JTextArea();\n\t\t\tjTextArea.setBounds(new Rectangle(300, 50, 287, 359));\n\t\t\tjTextArea.setLineWrap(true);\n\t\t}\n\t\treturn jTextArea;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jTextArea1\t\n\t * \t\n\t * @return javax.swing.JTextArea\t\n\t */\n", "code": "private jtext area get jtext area1 if j text area null j text area new jtext area j text area set bounds new rectangle 300 50 287 359 j text area set line wrap true return j text area\n", "comment": "this method initializes j text area1\n"}
{"id": "36556181", "raw_code": "\tprivate JEditorPane getJEditorPane() {\n\t\tif (jEditorPane == null) {\n\t\t\tjEditorPane = new JEditorPane();\n\t\t\tjEditorPane.setBounds(new Rectangle(122, 9, 361, 22));\n\t\t\tjEditorPane.setText(\"= \");\n\t\t\tjEditorPane.addKeyListener(new java.awt.event.KeyAdapter() {\n\t\t\t\tpublic void keyTyped(java.awt.event.KeyEvent e) {\n\t\t\t\t\tjButton1.setEnabled(true); \n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn jEditorPane;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes jEditorPane\t\n\t * \t\n\t * @return javax.swing.JEditorPane\t\n\t */\n", "code": "private jeditor pane get jeditor pane if j editor pane null j editor pane new jeditor pane j editor pane set bounds new rectangle 122 9 361 22 j editor pane set text j editor pane add key listener new java awt event key adapter public void key typed java awt event key event e j button1 set enabled true return j editor pane\n", "comment": "this method initializes j editor pane\n"}
{"id": "36556192", "raw_code": "\tprivate JTextField getStudentScore() {\n\t\tif (studentScore == null) {\n\t\t\tstudentScore = new JTextField();\n\t\t\tstudentScore.setBounds(new Rectangle(199, 204, 52, 19));\n\t\t}\n\t\treturn studentScore;\n\t}\n", "raw_comment": "\t/**\n\t * This method initializes studentScore\t\n\t * \t\n\t * @return javax.swing.JTextField\t\n\t */\n", "code": "private jtext field get student score if student score null student score new jtext field student score set bounds new rectangle 199 204 52 19 return student score\n", "comment": "this method initializes student score\n"}
{"id": "12574882", "raw_code": "    public void query1() throws IOException {\n        final List<String> taxa = new ArrayList<String>();\n        java.util.Collections.addAll(taxa, SILURIFORMES_ID, CYPRINIFORMES_ID, CHARACIFORMES_ID, GYMNOTIFORMES_ID, GONORYNCHIFORMES_ID, CLUPEIFORMES_ID);\n        for (String taxonID : taxa) {\n            Collection<Statement> phenotypeAssertions = this.shard.getStatements(taxonID, EXHIBITS, null, null, true, null);\n            for (Statement phenotypeAssertion : phenotypeAssertions) {\n                System.out.println(new Phenotype(phenotypeAssertion.getTargetId()));\n            }\n        }\n        // this was in progress but Cartik is implementing in SQL\n    }\n", "raw_comment": "    /**\n     * How useful is ontology annotation for integration across [phylogenetic] studies?\n     * @throws IOException \n     */\n", "code": "public void query1 throws ioexception final list string taxa new array list string java util collections add all taxa siluriformes id cypriniformes id characiformes id gymnotiformes id gonorynchiformes id clupeiformes id for string taxon id taxa collection statement phenotype assertions this shard get statements taxon id exhibits null null true null for statement phenotype assertion phenotype assertions system out println new phenotype phenotype assertion get target id this was in progress but cartik is implementing in sql\n", "comment": "how useful is ontology annotation for integration across phylogenetic studies\n"}
